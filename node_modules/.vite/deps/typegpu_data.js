import {
  $t,
  Ct,
  Dt,
  Et,
  Gn,
  Gt,
  Gt2,
  H,
  Hn,
  Ht,
  Ht2,
  Jn,
  Jt2 as Jt,
  Kt,
  Kt2,
  Lt2 as Lt,
  Mt,
  Nt,
  Ot2 as Ot,
  Pt,
  Qn,
  Qt,
  Re,
  Rt2 as Rt,
  Sn,
  Te,
  Tt,
  Ut,
  Ve,
  Wt,
  Wt2,
  X,
  Xn,
  Xt,
  Xt2,
  Yt,
  Yt2,
  Z,
  Z2,
  Zn,
  Zt,
  Zt2,
  _t2 as _t,
  ae,
  at,
  bt,
  c,
  ce2 as ce,
  ct,
  d,
  de2 as de,
  dt,
  ee,
  et,
  et2,
  fe2 as fe,
  ft,
  ge,
  gt,
  ht,
  ie2 as ie,
  it,
  it2,
  j,
  jt2 as jt,
  kt,
  le2 as le,
  lt,
  m,
  me,
  me2,
  mt,
  ne,
  nn,
  nt,
  oe2 as oe,
  ot,
  p,
  pe,
  pe2,
  q,
  qn,
  qt2 as qt,
  re,
  rn,
  rt,
  se2 as se,
  sn,
  st,
  te,
  tt,
  ue2 as ue,
  un,
  ut,
  ve,
  w,
  we,
  x,
  xe2 as xe,
  xt2 as xt,
  ye2 as ye,
  yt,
  yt2,
  zt
} from "./chunk-O5X7DGPH.js";
import "./chunk-PZ5AY32C.js";
export {
  Wt as Void,
  ft as align,
  it2 as alignmentOf,
  j as arrayOf,
  yt2 as atomic,
  x as bool,
  bt as builtin,
  xt as disarrayOf,
  m as f16,
  p as f32,
  te as float16,
  ee as float16x2,
  ne as float16x4,
  re as float32,
  oe as float32x2,
  ie as float32x3,
  ae as float32x4,
  et2 as formatToWGSLType,
  w as i32,
  gt as interpolate,
  pe as isAlignAttrib,
  Ht as isAtomic,
  Dt as isBuiltin,
  Zt as isBuiltinAttrib,
  un as isData,
  Te as isDecorated,
  nn as isDisarray,
  Xt as isInterpolateAttrib,
  ge as isLocationAttrib,
  Re as isLooseData,
  sn as isLooseDecorated,
  Kt as isPtr,
  me as isSizeAttrib,
  rn as isUnstruct,
  Gt as isWgslArray,
  we as isWgslData,
  Yt as isWgslStruct,
  Tt as location,
  Ve as mat2x2f,
  ve as mat3x3f,
  c as mat4x4f,
  Gn as matToArray,
  q as packedFormats,
  Hn as ptrFn,
  Qn as ptrHandle,
  Xn as ptrPrivate,
  Jn as ptrStorage,
  qn as ptrUniform,
  Zn as ptrWorkgroup,
  Rt as sint16,
  Kt2 as sint16x2,
  Ht2 as sint16x4,
  xe as sint32,
  me2 as sint32x2,
  ce as sint32x3,
  ye as sint32x4,
  Wt2 as sint8,
  kt as sint8x2,
  Pt as sint8x4,
  dt as size,
  lt as sizeOf,
  Xt2 as snorm16,
  Yt2 as snorm16x2,
  Zt2 as snorm16x4,
  Et as snorm8,
  Nt as snorm8x2,
  Ct as snorm8x4,
  Z2 as struct,
  Sn as u16,
  d as u32,
  Mt as uint16,
  Gt2 as uint16x2,
  jt as uint16x4,
  se as uint32,
  pe2 as uint32x2,
  ue as uint32x3,
  le as uint32x4,
  _t as uint8,
  Lt as uint8x2,
  $t as uint8x4,
  fe as unorm10_10_10_2,
  Jt as unorm16,
  qt as unorm16x2,
  Qt as unorm16x4,
  Ut as unorm8,
  Ot as unorm8x2,
  zt as unorm8x4,
  de as unorm8x4_bgra,
  mt as unstruct,
  rt as vec2b,
  H as vec2f,
  et as vec2h,
  tt as vec2i,
  nt as vec2u,
  ot as vec3b,
  X as vec3f,
  st as vec3h,
  it as vec3i,
  at as vec3u,
  ct as vec4b,
  Z as vec4f,
  ht as vec4h,
  ut as vec4i,
  yt as vec4u
};
