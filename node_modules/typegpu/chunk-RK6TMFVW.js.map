{"version":3,"sources":["../src/data/vectorOps.ts","../src/std/numeric.ts"],"sourcesContent":["import { mat2x2f, mat3x3f, mat4x4f } from './matrix.ts';\nimport {\n  vec2b,\n  vec2f,\n  vec2h,\n  vec2i,\n  vec2u,\n  vec3b,\n  vec3f,\n  vec3h,\n  vec3i,\n  vec3u,\n  vec4b,\n  vec4f,\n  vec4h,\n  vec4i,\n  vec4u,\n} from './vector.ts';\nimport type * as wgsl from './wgslTypes.ts';\nimport type { VecKind } from './wgslTypes.ts';\n\ntype vBase = { kind: VecKind };\ntype mBase = { kind: MatKind };\ntype v2 = wgsl.v2f | wgsl.v2h | wgsl.v2i | wgsl.v2u;\ntype v3 = wgsl.v3f | wgsl.v3h | wgsl.v3i | wgsl.v3u;\ntype v4 = wgsl.v4f | wgsl.v4h | wgsl.v4i | wgsl.v4u;\n\ntype MatKind = 'mat2x2f' | 'mat3x3f' | 'mat4x4f';\n\nconst lengthVec2 = (v: v2) => Math.sqrt(v.x ** 2 + v.y ** 2);\nconst lengthVec3 = (v: v3) => Math.sqrt(v.x ** 2 + v.y ** 2 + v.z ** 2);\nconst lengthVec4 = (v: v4) =>\n  Math.sqrt(v.x ** 2 + v.y ** 2 + v.z ** 2 + v.w ** 2);\n\nconst dotVec2 = (lhs: v2, rhs: v2) => lhs.x * rhs.x + lhs.y * rhs.y;\nconst dotVec3 = (lhs: v3, rhs: v3) =>\n  lhs.x * rhs.x + lhs.y * rhs.y + lhs.z * rhs.z;\nconst dotVec4 = (lhs: v4, rhs: v4) =>\n  lhs.x * rhs.x + lhs.y * rhs.y + lhs.z * rhs.z + lhs.w * rhs.w;\n\nconst clamp = (value: number, low: number, high: number) =>\n  Math.min(Math.max(low, value), high);\n\ntype UnaryOp = (a: number) => number;\ntype BinaryOp = (a: number, b: number) => number;\n\nconst unary2f = (op: UnaryOp) => (a: wgsl.v2f) => vec2f(op(a.x), op(a.y));\nconst unary2h = (op: UnaryOp) => (a: wgsl.v2h) => vec2h(op(a.x), op(a.y));\nconst unary2i = (op: UnaryOp) => (a: wgsl.v2i) => vec2i(op(a.x), op(a.y));\nconst unary2u = (op: UnaryOp) => (a: wgsl.v2u) => vec2u(op(a.x), op(a.y));\n\nconst unary3f = (op: UnaryOp) => (a: wgsl.v3f) =>\n  vec3f(op(a.x), op(a.y), op(a.z));\n\nconst unary3h = (op: UnaryOp) => (a: wgsl.v3h) =>\n  vec3h(op(a.x), op(a.y), op(a.z));\n\nconst unary3i = (op: UnaryOp) => (a: wgsl.v3i) =>\n  vec3i(op(a.x), op(a.y), op(a.z));\n\nconst unary3u = (op: UnaryOp) => (a: wgsl.v3u) =>\n  vec3u(op(a.x), op(a.y), op(a.z));\n\nconst unary4f = (op: UnaryOp) => (a: wgsl.v4f) =>\n  vec4f(op(a.x), op(a.y), op(a.z), op(a.w));\n\nconst unary4h = (op: UnaryOp) => (a: wgsl.v4h) =>\n  vec4h(op(a.x), op(a.y), op(a.z), op(a.w));\n\nconst unary4i = (op: UnaryOp) => (a: wgsl.v4i) =>\n  vec4i(op(a.x), op(a.y), op(a.z), op(a.w));\n\nconst unary4u = (op: UnaryOp) => (a: wgsl.v4u) =>\n  vec4u(op(a.x), op(a.y), op(a.z), op(a.w));\n\nconst unary2x2f = (op: UnaryOp) => (a: wgsl.m2x2f) => {\n  const a_ = a.columns as [wgsl.v2f, wgsl.v2f];\n  return mat2x2f(unary2f(op)(a_[0]), unary2f(op)(a_[1]));\n};\n\nconst unary3x3f = (op: UnaryOp) => (a: wgsl.m3x3f) => {\n  const a_ = a.columns as [wgsl.v3f, wgsl.v3f, wgsl.v3f];\n  return mat3x3f(unary3f(op)(a_[0]), unary3f(op)(a_[1]), unary3f(op)(a_[2]));\n};\n\nconst unary4x4f = (op: UnaryOp) => (a: wgsl.m4x4f) => {\n  const a_ = a.columns as [wgsl.v4f, wgsl.v4f, wgsl.v4f, wgsl.v4f];\n  return mat4x4f(\n    unary4f(op)(a_[0]),\n    unary4f(op)(a_[1]),\n    unary4f(op)(a_[2]),\n    unary4f(op)(a_[3]),\n  );\n};\n\nconst binaryComponentWise2f = (op: BinaryOp) => (a: wgsl.v2f, b: wgsl.v2f) =>\n  vec2f(op(a.x, b.x), op(a.y, b.y));\n\nconst binaryComponentWise2h = (op: BinaryOp) => (a: wgsl.v2h, b: wgsl.v2h) =>\n  vec2h(op(a.x, b.x), op(a.y, b.y));\n\nconst binaryComponentWise2i = (op: BinaryOp) => (a: wgsl.v2i, b: wgsl.v2i) =>\n  vec2i(op(a.x, b.x), op(a.y, b.y));\n\nconst binaryComponentWise2u = (op: BinaryOp) => (a: wgsl.v2u, b: wgsl.v2u) =>\n  vec2u(op(a.x, b.x), op(a.y, b.y));\n\nconst binaryComponentWise3f = (op: BinaryOp) => (a: wgsl.v3f, b: wgsl.v3f) =>\n  vec3f(op(a.x, b.x), op(a.y, b.y), op(a.z, b.z));\n\nconst binaryComponentWise3h = (op: BinaryOp) => (a: wgsl.v3h, b: wgsl.v3h) =>\n  vec3h(op(a.x, b.x), op(a.y, b.y), op(a.z, b.z));\n\nconst binaryComponentWise3i = (op: BinaryOp) => (a: wgsl.v3i, b: wgsl.v3i) =>\n  vec3i(op(a.x, b.x), op(a.y, b.y), op(a.z, b.z));\n\nconst binaryComponentWise3u = (op: BinaryOp) => (a: wgsl.v3u, b: wgsl.v3u) =>\n  vec3u(op(a.x, b.x), op(a.y, b.y), op(a.z, b.z));\n\nconst binaryComponentWise4f = (op: BinaryOp) => (a: wgsl.v4f, b: wgsl.v4f) =>\n  vec4f(op(a.x, b.x), op(a.y, b.y), op(a.z, b.z), op(a.w, b.w));\n\nconst binaryComponentWise4h = (op: BinaryOp) => (a: wgsl.v4h, b: wgsl.v4h) =>\n  vec4h(op(a.x, b.x), op(a.y, b.y), op(a.z, b.z), op(a.w, b.w));\n\nconst binaryComponentWise4i = (op: BinaryOp) => (a: wgsl.v4i, b: wgsl.v4i) =>\n  vec4i(op(a.x, b.x), op(a.y, b.y), op(a.z, b.z), op(a.w, b.w));\n\nconst binaryComponentWise4u = (op: BinaryOp) => (a: wgsl.v4u, b: wgsl.v4u) =>\n  vec4u(op(a.x, b.x), op(a.y, b.y), op(a.z, b.z), op(a.w, b.w));\n\nconst binaryComponentWise2x2f =\n  (op: BinaryOp) => (a: wgsl.m2x2f, b: wgsl.m2x2f) => {\n    const a_ = a.columns as [wgsl.v2f, wgsl.v2f];\n    const b_ = b.columns as [wgsl.v2f, wgsl.v2f];\n    return mat2x2f(\n      binaryComponentWise2f(op)(a_[0], b_[0]),\n      binaryComponentWise2f(op)(a_[1], b_[1]),\n    );\n  };\n\nconst binaryComponentWise3x3f =\n  (op: BinaryOp) => (a: wgsl.m3x3f, b: wgsl.m3x3f) => {\n    const a_ = a.columns as [wgsl.v3f, wgsl.v3f, wgsl.v3f];\n    const b_ = b.columns as [wgsl.v3f, wgsl.v3f, wgsl.v3f];\n    return mat3x3f(\n      binaryComponentWise3f(op)(a_[0], b_[0]),\n      binaryComponentWise3f(op)(a_[1], b_[1]),\n      binaryComponentWise3f(op)(a_[2], b_[2]),\n    );\n  };\n\nconst binaryComponentWise4x4f =\n  (op: BinaryOp) => (a: wgsl.m4x4f, b: wgsl.m4x4f) => {\n    const a_ = a.columns as [wgsl.v4f, wgsl.v4f, wgsl.v4f, wgsl.v4f];\n    const b_ = b.columns as [wgsl.v4f, wgsl.v4f, wgsl.v4f, wgsl.v4f];\n    return mat4x4f(\n      binaryComponentWise4f(op)(a_[0], b_[0]),\n      binaryComponentWise4f(op)(a_[1], b_[1]),\n      binaryComponentWise4f(op)(a_[2], b_[2]),\n      binaryComponentWise4f(op)(a_[3], b_[3]),\n    );\n  };\n\nexport const NumberOps = {\n  divInteger: (lhs: number, rhs: number) => {\n    if (rhs === 0) {\n      return lhs;\n    }\n    return Math.trunc(lhs / rhs);\n  },\n};\n\nexport const VectorOps = {\n  eq: {\n    vec2f: (e1: wgsl.v2f, e2: wgsl.v2f) => vec2b(e1.x === e2.x, e1.y === e2.y),\n    vec2h: (e1: wgsl.v2h, e2: wgsl.v2h) => vec2b(e1.x === e2.x, e1.y === e2.y),\n    vec2i: (e1: wgsl.v2i, e2: wgsl.v2i) => vec2b(e1.x === e2.x, e1.y === e2.y),\n    vec2u: (e1: wgsl.v2u, e2: wgsl.v2u) => vec2b(e1.x === e2.x, e1.y === e2.y),\n    'vec2<bool>': (e1: wgsl.v2b, e2: wgsl.v2b) =>\n      vec2b(e1.x === e2.x, e1.y === e2.y),\n\n    vec3f: (e1: wgsl.v3f, e2: wgsl.v3f) =>\n      vec3b(e1.x === e2.x, e1.y === e2.y, e1.z === e2.z),\n    vec3h: (e1: wgsl.v3h, e2: wgsl.v3h) =>\n      vec3b(e1.x === e2.x, e1.y === e2.y, e1.z === e2.z),\n    vec3i: (e1: wgsl.v3i, e2: wgsl.v3i) =>\n      vec3b(e1.x === e2.x, e1.y === e2.y, e1.z === e2.z),\n    vec3u: (e1: wgsl.v3u, e2: wgsl.v3u) =>\n      vec3b(e1.x === e2.x, e1.y === e2.y, e1.z === e2.z),\n    'vec3<bool>': (e1: wgsl.v3b, e2: wgsl.v3b) =>\n      vec3b(e1.x === e2.x, e1.y === e2.y, e1.z === e2.z),\n\n    vec4f: (e1: wgsl.v4f, e2: wgsl.v4f) =>\n      vec4b(e1.x === e2.x, e1.y === e2.y, e1.z === e2.z, e1.w === e2.w),\n    vec4h: (e1: wgsl.v4h, e2: wgsl.v4h) =>\n      vec4b(e1.x === e2.x, e1.y === e2.y, e1.z === e2.z, e1.w === e2.w),\n    vec4i: (e1: wgsl.v4i, e2: wgsl.v4i) =>\n      vec4b(e1.x === e2.x, e1.y === e2.y, e1.z === e2.z, e1.w === e2.w),\n    vec4u: (e1: wgsl.v4u, e2: wgsl.v4u) =>\n      vec4b(e1.x === e2.x, e1.y === e2.y, e1.z === e2.z, e1.w === e2.w),\n    'vec4<bool>': (e1: wgsl.v4b, e2: wgsl.v4b) =>\n      vec4b(e1.x === e2.x, e1.y === e2.y, e1.z === e2.z, e1.w === e2.w),\n  } as Record<\n    VecKind,\n    <T extends wgsl.AnyVecInstance>(\n      e1: T,\n      e2: T,\n    ) => T extends wgsl.AnyVec2Instance ? wgsl.v2b\n      : T extends wgsl.AnyVec3Instance ? wgsl.v3b\n      : wgsl.v4b\n  >,\n\n  lt: {\n    vec2f: (e1: wgsl.v2f, e2: wgsl.v2f) => vec2b(e1.x < e2.x, e1.y < e2.y),\n    vec2h: (e1: wgsl.v2h, e2: wgsl.v2h) => vec2b(e1.x < e2.x, e1.y < e2.y),\n    vec2i: (e1: wgsl.v2i, e2: wgsl.v2i) => vec2b(e1.x < e2.x, e1.y < e2.y),\n    vec2u: (e1: wgsl.v2u, e2: wgsl.v2u) => vec2b(e1.x < e2.x, e1.y < e2.y),\n\n    vec3f: (e1: wgsl.v3f, e2: wgsl.v3f) =>\n      vec3b(e1.x < e2.x, e1.y < e2.y, e1.z < e2.z),\n    vec3h: (e1: wgsl.v3h, e2: wgsl.v3h) =>\n      vec3b(e1.x < e2.x, e1.y < e2.y, e1.z < e2.z),\n    vec3i: (e1: wgsl.v3i, e2: wgsl.v3i) =>\n      vec3b(e1.x < e2.x, e1.y < e2.y, e1.z < e2.z),\n    vec3u: (e1: wgsl.v3u, e2: wgsl.v3u) =>\n      vec3b(e1.x < e2.x, e1.y < e2.y, e1.z < e2.z),\n\n    vec4f: (e1: wgsl.v4f, e2: wgsl.v4f) =>\n      vec4b(e1.x < e2.x, e1.y < e2.y, e1.z < e2.z, e1.w < e2.w),\n    vec4h: (e1: wgsl.v4h, e2: wgsl.v4h) =>\n      vec4b(e1.x < e2.x, e1.y < e2.y, e1.z < e2.z, e1.w < e2.w),\n    vec4i: (e1: wgsl.v4i, e2: wgsl.v4i) =>\n      vec4b(e1.x < e2.x, e1.y < e2.y, e1.z < e2.z, e1.w < e2.w),\n    vec4u: (e1: wgsl.v4u, e2: wgsl.v4u) =>\n      vec4b(e1.x < e2.x, e1.y < e2.y, e1.z < e2.z, e1.w < e2.w),\n  } as Record<\n    VecKind,\n    <T extends wgsl.AnyNumericVecInstance>(\n      e1: T,\n      e2: T,\n    ) => T extends wgsl.AnyVec2Instance ? wgsl.v2b\n      : T extends wgsl.AnyVec3Instance ? wgsl.v3b\n      : wgsl.v4b\n  >,\n\n  or: {\n    'vec2<bool>': (e1: wgsl.v2b, e2: wgsl.v2b) =>\n      vec2b(e1.x || e2.x, e1.y || e2.y),\n    'vec3<bool>': (e1: wgsl.v3b, e2: wgsl.v3b) =>\n      vec3b(e1.x || e2.x, e1.y || e2.y, e1.z || e2.z),\n    'vec4<bool>': (e1: wgsl.v4b, e2: wgsl.v4b) =>\n      vec4b(e1.x || e2.x, e1.y || e2.y, e1.z || e2.z, e1.w || e2.w),\n  } as Record<\n    VecKind,\n    <T extends wgsl.AnyBooleanVecInstance>(e1: T, e2: T) => T\n  >,\n\n  all: {\n    'vec2<bool>': (e: wgsl.v2b) => e.x && e.y,\n    'vec3<bool>': (e: wgsl.v3b) => e.x && e.y && e.z,\n    'vec4<bool>': (e: wgsl.v4b) => e.x && e.y && e.z && e.w,\n  } as Record<VecKind, (v: wgsl.AnyBooleanVecInstance) => boolean>,\n\n  abs: {\n    vec2f: unary2f(Math.abs),\n    vec2h: unary2h(Math.abs),\n    vec2i: unary2i(Math.abs),\n    vec2u: unary2u(Math.abs),\n\n    vec3f: unary3f(Math.abs),\n    vec3h: unary3h(Math.abs),\n    vec3i: unary3i(Math.abs),\n    vec3u: unary3u(Math.abs),\n\n    vec4f: unary4f(Math.abs),\n    vec4h: unary4h(Math.abs),\n    vec4i: unary4i(Math.abs),\n    vec4u: unary4u(Math.abs),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  atan2: {\n    vec2f: binaryComponentWise2f(Math.atan2),\n    vec2h: binaryComponentWise2h(Math.atan2),\n\n    vec3f: binaryComponentWise3f(Math.atan2),\n    vec3h: binaryComponentWise3h(Math.atan2),\n\n    vec4f: binaryComponentWise4f(Math.atan2),\n    vec4h: binaryComponentWise4h(Math.atan2),\n  } as Record<VecKind, <T extends vBase>(a: T, b: T) => T>,\n\n  acos: {\n    vec2f: unary2f(Math.acos),\n    vec2h: unary2h(Math.acos),\n    vec2i: unary2i(Math.acos),\n    vec2u: unary2u(Math.acos),\n\n    vec3f: unary3f(Math.acos),\n    vec3h: unary3h(Math.acos),\n    vec3i: unary3i(Math.acos),\n    vec3u: unary3u(Math.acos),\n\n    vec4f: unary4f(Math.acos),\n    vec4h: unary4h(Math.acos),\n    vec4i: unary4i(Math.acos),\n    vec4u: unary4u(Math.acos),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  acosh: {\n    vec2f: unary2f(Math.acosh),\n    vec2h: unary2h(Math.acosh),\n\n    vec3f: unary3f(Math.acosh),\n    vec3h: unary3h(Math.acosh),\n\n    vec4f: unary4f(Math.acosh),\n    vec4h: unary4h(Math.acosh),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  asin: {\n    vec2f: unary2f(Math.asin),\n    vec2h: unary2h(Math.asin),\n    vec2i: unary2i(Math.asin),\n    vec2u: unary2u(Math.asin),\n\n    vec3f: unary3f(Math.asin),\n    vec3h: unary3h(Math.asin),\n    vec3i: unary3i(Math.asin),\n    vec3u: unary3u(Math.asin),\n\n    vec4f: unary4f(Math.asin),\n    vec4h: unary4h(Math.asin),\n    vec4i: unary4i(Math.asin),\n    vec4u: unary4u(Math.asin),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  ceil: {\n    vec2f: unary2f(Math.ceil),\n    vec2h: unary2h(Math.ceil),\n\n    vec3f: unary3f(Math.ceil),\n    vec3h: unary3h(Math.ceil),\n\n    vec4f: unary4f(Math.ceil),\n    vec4h: unary4h(Math.ceil),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  clamp: {\n    vec2f: (v: wgsl.v2f, low: wgsl.v2f, high: wgsl.v2f) =>\n      vec2f(clamp(v.x, low.x, high.x), clamp(v.y, low.y, high.y)),\n    vec2h: (v: wgsl.v2h, low: wgsl.v2h, high: wgsl.v2h) =>\n      vec2h(clamp(v.x, low.x, high.x), clamp(v.y, low.y, high.y)),\n    vec2i: (v: wgsl.v2i, low: wgsl.v2i, high: wgsl.v2i) =>\n      vec2i(clamp(v.x, low.x, high.x), clamp(v.y, low.y, high.y)),\n    vec2u: (v: wgsl.v2u, low: wgsl.v2u, high: wgsl.v2u) =>\n      vec2u(clamp(v.x, low.x, high.x), clamp(v.y, low.y, high.y)),\n\n    vec3f: (v: wgsl.v3f, low: wgsl.v3f, high: wgsl.v3f) =>\n      vec3f(\n        clamp(v.x, low.x, high.x),\n        clamp(v.y, low.y, high.y),\n        clamp(v.z, low.z, high.z),\n      ),\n    vec3h: (v: wgsl.v3h, low: wgsl.v3h, high: wgsl.v3h) =>\n      vec3h(\n        clamp(v.x, low.x, high.x),\n        clamp(v.y, low.y, high.y),\n        clamp(v.z, low.z, high.z),\n      ),\n    vec3i: (v: wgsl.v3i, low: wgsl.v3i, high: wgsl.v3f) =>\n      vec3i(\n        clamp(v.x, low.x, high.x),\n        clamp(v.y, low.y, high.y),\n        clamp(v.z, low.z, high.z),\n      ),\n    vec3u: (v: wgsl.v3u, low: wgsl.v3u, high: wgsl.v3f) =>\n      vec3u(\n        clamp(v.x, low.x, high.x),\n        clamp(v.y, low.y, high.y),\n        clamp(v.z, low.z, high.z),\n      ),\n\n    vec4f: (v: wgsl.v4f, low: wgsl.v4f, high: wgsl.v4f) =>\n      vec4f(\n        clamp(v.x, low.x, high.x),\n        clamp(v.y, low.y, high.y),\n        clamp(v.z, low.z, high.z),\n        clamp(v.w, low.w, high.w),\n      ),\n    vec4h: (v: wgsl.v4h, low: wgsl.v4h, high: wgsl.v4h) =>\n      vec4h(\n        clamp(v.x, low.x, high.x),\n        clamp(v.y, low.y, high.y),\n        clamp(v.z, low.z, high.z),\n        clamp(v.w, low.w, high.w),\n      ),\n    vec4i: (v: wgsl.v4i, low: wgsl.v4i, high: wgsl.v4i) =>\n      vec4i(\n        clamp(v.x, low.x, high.x),\n        clamp(v.y, low.y, high.y),\n        clamp(v.z, low.z, high.z),\n        clamp(v.w, low.w, high.w),\n      ),\n    vec4u: (v: wgsl.v4u, low: wgsl.v4u, high: wgsl.v4u) =>\n      vec4u(\n        clamp(v.x, low.x, high.x),\n        clamp(v.y, low.y, high.y),\n        clamp(v.z, low.z, high.z),\n        clamp(v.w, low.w, high.w),\n      ),\n  } as Record<VecKind, <T extends vBase>(v: T, low: T, high: T) => T>,\n\n  length: {\n    vec2f: lengthVec2,\n    vec2h: lengthVec2,\n\n    vec3f: lengthVec3,\n    vec3h: lengthVec3,\n\n    vec4f: lengthVec4,\n    vec4h: lengthVec4,\n  } as Record<VecKind, (v: vBase) => number>,\n\n  add: {\n    vec2f: binaryComponentWise2f((a, b) => a + b),\n    vec2h: binaryComponentWise2h((a, b) => a + b),\n    vec2i: binaryComponentWise2i((a, b) => a + b),\n    vec2u: binaryComponentWise2u((a, b) => a + b),\n\n    vec3f: binaryComponentWise3f((a, b) => a + b),\n    vec3h: binaryComponentWise3h((a, b) => a + b),\n    vec3i: binaryComponentWise3i((a, b) => a + b),\n    vec3u: binaryComponentWise3u((a, b) => a + b),\n\n    vec4f: binaryComponentWise4f((a, b) => a + b),\n    vec4h: binaryComponentWise4h((a, b) => a + b),\n    vec4i: binaryComponentWise4i((a, b) => a + b),\n    vec4u: binaryComponentWise4u((a, b) => a + b),\n\n    mat2x2f: binaryComponentWise2x2f((a, b) => a + b),\n    mat3x3f: binaryComponentWise3x3f((a, b) => a + b),\n    mat4x4f: binaryComponentWise4x4f((a, b) => a + b),\n  } as Record<\n    VecKind | MatKind,\n    <T extends vBase | mBase>(lhs: T, rhs: T) => T\n  >,\n\n  addMixed: {\n    vec2f: (a: wgsl.v2f, b: number) => unary2f((e) => e + b)(a),\n    vec2h: (a: wgsl.v2h, b: number) => unary2h((e) => e + b)(a),\n    vec2i: (a: wgsl.v2i, b: number) => unary2i((e) => e + b)(a),\n    vec2u: (a: wgsl.v2u, b: number) => unary2u((e) => e + b)(a),\n\n    vec3f: (a: wgsl.v3f, b: number) => unary3f((e) => e + b)(a),\n    vec3h: (a: wgsl.v3h, b: number) => unary3h((e) => e + b)(a),\n    vec3i: (a: wgsl.v3i, b: number) => unary3i((e) => e + b)(a),\n    vec3u: (a: wgsl.v3u, b: number) => unary3u((e) => e + b)(a),\n\n    vec4f: (a: wgsl.v4f, b: number) => unary4f((e) => e + b)(a),\n    vec4h: (a: wgsl.v4h, b: number) => unary4h((e) => e + b)(a),\n    vec4i: (a: wgsl.v4i, b: number) => unary4i((e) => e + b)(a),\n    vec4u: (a: wgsl.v4u, b: number) => unary4u((e) => e + b)(a),\n\n    mat2x2f: (a: wgsl.m2x2f, b: number) => unary2x2f((e) => e + b)(a),\n    mat3x3f: (a: wgsl.m3x3f, b: number) => unary3x3f((e) => e + b)(a),\n    mat4x4f: (a: wgsl.m4x4f, b: number) => unary4x4f((e) => e + b)(a),\n  } as Record<\n    VecKind | MatKind,\n    <T extends vBase | mBase>(lhs: T, rhs: number) => T\n  >,\n\n  mulSxV: {\n    vec2f: (s: number, v: wgsl.v2f) => unary2f((e) => s * e)(v),\n    vec2h: (s: number, v: wgsl.v2h) => unary2h((e) => s * e)(v),\n    vec2i: (s: number, v: wgsl.v2i) => unary2i((e) => s * e)(v),\n    vec2u: (s: number, v: wgsl.v2u) => unary2u((e) => s * e)(v),\n\n    vec3f: (s: number, v: wgsl.v3f) => unary3f((e) => s * e)(v),\n    vec3h: (s: number, v: wgsl.v3h) => unary3h((e) => s * e)(v),\n    vec3i: (s: number, v: wgsl.v3i) => unary3i((e) => s * e)(v),\n    vec3u: (s: number, v: wgsl.v3u) => unary3u((e) => s * e)(v),\n\n    vec4f: (s: number, v: wgsl.v4f) => unary4f((e) => s * e)(v),\n    vec4h: (s: number, v: wgsl.v4h) => unary4h((e) => s * e)(v),\n    vec4i: (s: number, v: wgsl.v4i) => unary4i((e) => s * e)(v),\n    vec4u: (s: number, v: wgsl.v4u) => unary4u((e) => s * e)(v),\n\n    mat2x2f: (s: number, m: wgsl.m2x2f) => unary2x2f((e) => s * e)(m),\n    mat3x3f: (s: number, m: wgsl.m3x3f) => unary3x3f((e) => s * e)(m),\n    mat4x4f: (s: number, m: wgsl.m4x4f) => unary4x4f((e) => s * e)(m),\n  } as Record<\n    VecKind | MatKind,\n    <T extends vBase | wgsl.AnyMatInstance>(s: number, v: T) => T\n  >,\n\n  mulVxV: {\n    vec2f: binaryComponentWise2f((a, b) => a * b),\n    vec2h: binaryComponentWise2h((a, b) => a * b),\n    vec2i: binaryComponentWise2i((a, b) => a * b),\n    vec2u: binaryComponentWise2u((a, b) => a * b),\n\n    vec3f: binaryComponentWise3f((a, b) => a * b),\n    vec3h: binaryComponentWise3h((a, b) => a * b),\n    vec3i: binaryComponentWise3i((a, b) => a * b),\n    vec3u: binaryComponentWise3u((a, b) => a * b),\n\n    vec4f: binaryComponentWise4f((a, b) => a * b),\n    vec4h: binaryComponentWise4h((a, b) => a * b),\n    vec4i: binaryComponentWise4i((a, b) => a * b),\n    vec4u: binaryComponentWise4u((a, b) => a * b),\n\n    mat2x2f: (a: wgsl.m2x2f, b: wgsl.m2x2f) => {\n      const a_ = a.columns;\n      const b_ = b.columns;\n\n      return mat2x2f(\n        a_[0].x * b_[0].x + a_[1].x * b_[0].y,\n        a_[0].y * b_[0].x + a_[1].y * b_[0].y,\n        a_[0].x * b_[1].x + a_[1].x * b_[1].y,\n        a_[0].y * b_[1].x + a_[1].y * b_[1].y,\n      );\n    },\n\n    mat3x3f: (a: wgsl.m3x3f, b: wgsl.m3x3f) => {\n      const a_ = a.columns;\n      const b_ = b.columns;\n\n      return mat3x3f(\n        a_[0].x * b_[0].x + a_[1].x * b_[0].y + a_[2].x * b_[0].z,\n        a_[0].y * b_[0].x + a_[1].y * b_[0].y + a_[2].y * b_[0].z,\n        a_[0].z * b_[0].x + a_[1].z * b_[0].y + a_[2].z * b_[0].z,\n        a_[0].x * b_[1].x + a_[1].x * b_[1].y + a_[2].x * b_[1].z,\n        a_[0].y * b_[1].x + a_[1].y * b_[1].y + a_[2].y * b_[1].z,\n        a_[0].z * b_[1].x + a_[1].z * b_[1].y + a_[2].z * b_[1].z,\n        a_[0].x * b_[2].x + a_[1].x * b_[2].y + a_[2].x * b_[2].z,\n        a_[0].y * b_[2].x + a_[1].y * b_[2].y + a_[2].y * b_[2].z,\n        a_[0].z * b_[2].x + a_[1].z * b_[2].y + a_[2].z * b_[2].z,\n      );\n    },\n\n    mat4x4f: (a: wgsl.m4x4f, b: wgsl.m4x4f) => {\n      const a_ = a.columns;\n      const b_ = b.columns;\n\n      return mat4x4f(\n        a_[0].x * b_[0].x +\n          a_[1].x * b_[0].y +\n          a_[2].x * b_[0].z +\n          a_[3].x * b_[0].w,\n        a_[0].y * b_[0].x +\n          a_[1].y * b_[0].y +\n          a_[2].y * b_[0].z +\n          a_[3].y * b_[0].w,\n        a_[0].z * b_[0].x +\n          a_[1].z * b_[0].y +\n          a_[2].z * b_[0].z +\n          a_[3].z * b_[0].w,\n        a_[0].w * b_[0].x +\n          a_[1].w * b_[0].y +\n          a_[2].w * b_[0].z +\n          a_[3].w * b_[0].w,\n        a_[0].x * b_[1].x +\n          a_[1].x * b_[1].y +\n          a_[2].x * b_[1].z +\n          a_[3].x * b_[1].w,\n        a_[0].y * b_[1].x +\n          a_[1].y * b_[1].y +\n          a_[2].y * b_[1].z +\n          a_[3].y * b_[1].w,\n        a_[0].z * b_[1].x +\n          a_[1].z * b_[1].y +\n          a_[2].z * b_[1].z +\n          a_[3].z * b_[1].w,\n        a_[0].w * b_[1].x +\n          a_[1].w * b_[1].y +\n          a_[2].w * b_[1].z +\n          a_[3].w * b_[1].w,\n        a_[0].x * b_[2].x +\n          a_[1].x * b_[2].y +\n          a_[2].x * b_[2].z +\n          a_[3].x * b_[2].w,\n        a_[0].y * b_[2].x +\n          a_[1].y * b_[2].y +\n          a_[2].y * b_[2].z +\n          a_[3].y * b_[2].w,\n        a_[0].z * b_[2].x +\n          a_[1].z * b_[2].y +\n          a_[2].z * b_[2].z +\n          a_[3].z * b_[2].w,\n        a_[0].w * b_[2].x +\n          a_[1].w * b_[2].y +\n          a_[2].w * b_[2].z +\n          a_[3].w * b_[2].w,\n        a_[0].x * b_[3].x +\n          a_[1].x * b_[3].y +\n          a_[2].x * b_[3].z +\n          a_[3].x * b_[3].w,\n        a_[0].y * b_[3].x +\n          a_[1].y * b_[3].y +\n          a_[2].y * b_[3].z +\n          a_[3].y * b_[3].w,\n        a_[0].z * b_[3].x +\n          a_[1].z * b_[3].y +\n          a_[2].z * b_[3].z +\n          a_[3].z * b_[3].w,\n        a_[0].w * b_[3].x +\n          a_[1].w * b_[3].y +\n          a_[2].w * b_[3].z +\n          a_[3].w * b_[3].w,\n      );\n    },\n  } as Record<\n    VecKind | MatKind,\n    <T extends vBase | wgsl.AnyMatInstance>(lhs: T, rhs: T) => T\n  >,\n\n  mulMxV: {\n    mat2x2f: (m: wgsl.m2x2f, v: wgsl.v2f) => {\n      const m_ = m.columns;\n      return vec2f(\n        m_[0].x * v.x + m_[1].x * v.y,\n        m_[0].y * v.x + m_[1].y * v.y,\n      );\n    },\n\n    mat3x3f: (m: wgsl.m3x3f, v: wgsl.v3f) => {\n      const m_ = m.columns;\n      return vec3f(\n        m_[0].x * v.x + m_[1].x * v.y + m_[2].x * v.z,\n        m_[0].y * v.x + m_[1].y * v.y + m_[2].y * v.z,\n        m_[0].z * v.x + m_[1].z * v.y + m_[2].z * v.z,\n      );\n    },\n\n    mat4x4f: (m: wgsl.m4x4f, v: wgsl.v4f) => {\n      const m_ = m.columns;\n      return vec4f(\n        m_[0].x * v.x + m_[1].x * v.y + m_[2].x * v.z + m_[3].x * v.w,\n        m_[0].y * v.x + m_[1].y * v.y + m_[2].y * v.z + m_[3].y * v.w,\n        m_[0].z * v.x + m_[1].z * v.y + m_[2].z * v.z + m_[3].z * v.w,\n        m_[0].w * v.x + m_[1].w * v.y + m_[2].w * v.z + m_[3].w * v.w,\n      );\n    },\n  } as Record<\n    MatKind,\n    <T extends wgsl.AnyMatInstance>(\n      m: T,\n      v: wgsl.vBaseForMat<T>,\n    ) => wgsl.vBaseForMat<T>\n  >,\n\n  mulVxM: {\n    mat2x2f: (v: wgsl.v2f, m: wgsl.m2x2f) => {\n      const m_ = m.columns;\n      return vec2f(\n        v.x * m_[0].x + v.y * m_[0].y,\n        v.x * m_[1].x + v.y * m_[1].y,\n      );\n    },\n\n    mat3x3f: (v: wgsl.v3f, m: wgsl.m3x3f) => {\n      const m_ = m.columns;\n      return vec3f(\n        v.x * m_[0].x + v.y * m_[0].y + v.z * m_[0].z,\n        v.x * m_[1].x + v.y * m_[1].y + v.z * m_[1].z,\n        v.x * m_[2].x + v.y * m_[2].y + v.z * m_[2].z,\n      );\n    },\n\n    mat4x4f: (v: wgsl.v4f, m: wgsl.m4x4f) => {\n      const m_ = m.columns;\n      return vec4f(\n        v.x * m_[0].x + v.y * m_[0].y + v.z * m_[0].z + v.w * m_[0].w,\n        v.x * m_[1].x + v.y * m_[1].y + v.z * m_[1].z + v.w * m_[1].w,\n        v.x * m_[2].x + v.y * m_[2].y + v.z * m_[2].z + v.w * m_[2].w,\n        v.x * m_[3].x + v.y * m_[3].y + v.z * m_[3].z + v.w * m_[3].w,\n      );\n    },\n  } as Record<\n    MatKind,\n    <T extends wgsl.AnyMatInstance>(\n      v: wgsl.vBaseForMat<T>,\n      m: T,\n    ) => wgsl.vBaseForMat<T>\n  >,\n\n  div: {\n    vec2f: binaryComponentWise2f((a, b) => a / b),\n    vec2h: binaryComponentWise2h((a, b) => a / b),\n    vec2i: binaryComponentWise2i(NumberOps.divInteger),\n    vec2u: binaryComponentWise2u(NumberOps.divInteger),\n\n    vec3f: binaryComponentWise3f((a, b) => a / b),\n    vec3h: binaryComponentWise3h((a, b) => a / b),\n    vec3i: binaryComponentWise3i(NumberOps.divInteger),\n    vec3u: binaryComponentWise3u(NumberOps.divInteger),\n\n    vec4f: binaryComponentWise4f((a, b) => a / b),\n    vec4h: binaryComponentWise4h((a, b) => a / b),\n    vec4i: binaryComponentWise4i(NumberOps.divInteger),\n    vec4u: binaryComponentWise4u(NumberOps.divInteger),\n  } as Record<VecKind, <T extends vBase>(a: T, b: T) => T>,\n\n  divMixed: {\n    vec2f: (a: wgsl.v2f, b: number) => unary2f((e) => e / b)(a),\n    vec2h: (a: wgsl.v2h, b: number) => unary2h((e) => e / b)(a),\n    vec2i: (a: wgsl.v2i, b: number) =>\n      unary2i((e) => NumberOps.divInteger(e, b))(a),\n    vec2u: (a: wgsl.v2u, b: number) =>\n      unary2u((e) => NumberOps.divInteger(e, b))(a),\n\n    vec3f: (a: wgsl.v3f, b: number) => unary3f((e) => e / b)(a),\n    vec3h: (a: wgsl.v3h, b: number) => unary3h((e) => e / b)(a),\n    vec3i: (a: wgsl.v3i, b: number) =>\n      unary3i((e) => NumberOps.divInteger(e, b))(a),\n    vec3u: (a: wgsl.v3u, b: number) =>\n      unary3u((e) => NumberOps.divInteger(e, b))(a),\n\n    vec4f: (a: wgsl.v4f, b: number) => unary4f((e) => e / b)(a),\n    vec4h: (a: wgsl.v4h, b: number) => unary4h((e) => e / b)(a),\n    vec4i: (a: wgsl.v4i, b: number) =>\n      unary4i((e) => NumberOps.divInteger(e, b))(a),\n    vec4u: (a: wgsl.v4u, b: number) =>\n      unary4u((e) => NumberOps.divInteger(e, b))(a),\n  } as Record<VecKind, <T extends vBase>(lhs: T, rhs: number) => T>,\n\n  dot: {\n    vec2f: dotVec2,\n    vec2h: dotVec2,\n    vec2i: dotVec2,\n    vec2u: dotVec2,\n    vec3f: dotVec3,\n    vec3h: dotVec3,\n    vec3i: dotVec3,\n    vec3u: dotVec3,\n    vec4f: dotVec4,\n    vec4h: dotVec4,\n    vec4i: dotVec4,\n    vec4u: dotVec4,\n  } as Record<VecKind, <T extends vBase>(lhs: T, rhs: T) => number>,\n\n  normalize: {\n    vec2f: (v: wgsl.v2f) => {\n      const len = lengthVec2(v);\n      return vec2f(v.x / len, v.y / len);\n    },\n    vec2h: (v: wgsl.v2h) => {\n      const len = lengthVec2(v);\n      return vec2h(v.x / len, v.y / len);\n    },\n    vec2i: (v: wgsl.v2i) => {\n      const len = lengthVec2(v);\n      return vec2i(v.x / len, v.y / len);\n    },\n    vec2u: (v: wgsl.v2u) => {\n      const len = lengthVec2(v);\n      return vec2u(v.x / len, v.y / len);\n    },\n\n    vec3f: (v: wgsl.v3f) => {\n      const len = lengthVec3(v);\n      return vec3f(v.x / len, v.y / len, v.z / len);\n    },\n    vec3h: (v: wgsl.v3h) => {\n      const len = lengthVec3(v);\n      return vec3h(v.x / len, v.y / len, v.z / len);\n    },\n    vec3i: (v: wgsl.v3i) => {\n      const len = lengthVec3(v);\n      return vec3i(v.x / len, v.y / len, v.z / len);\n    },\n    vec3u: (v: wgsl.v3u) => {\n      const len = lengthVec3(v);\n      return vec3u(v.x / len, v.y / len, v.z / len);\n    },\n\n    vec4f: (v: wgsl.v4f) => {\n      const len = lengthVec4(v);\n      return vec4f(v.x / len, v.y / len, v.z / len, v.w / len);\n    },\n    vec4h: (v: wgsl.v4h) => {\n      const len = lengthVec4(v);\n      return vec4h(v.x / len, v.y / len, v.z / len, v.w / len);\n    },\n    vec4i: (v: wgsl.v4i) => {\n      const len = lengthVec4(v);\n      return vec4i(v.x / len, v.y / len, v.z / len, v.w / len);\n    },\n    vec4u: (v: wgsl.v4u) => {\n      const len = lengthVec4(v);\n      return vec4u(v.x / len, v.y / len, v.z / len, v.w / len);\n    },\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  cross: {\n    vec3f: (a: wgsl.v3f, b: wgsl.v3f) => {\n      return vec3f(\n        a.y * b.z - a.z * b.y,\n        a.z * b.x - a.x * b.z,\n        a.x * b.y - a.y * b.x,\n      );\n    },\n    vec3h: (a: wgsl.v3h, b: wgsl.v3h) => {\n      return vec3h(\n        a.y * b.z - a.z * b.y,\n        a.z * b.x - a.x * b.z,\n        a.x * b.y - a.y * b.x,\n      );\n    },\n  } as Record<\n    'vec3f' | 'vec3h',\n    <T extends wgsl.v3f | wgsl.v3h>(a: T, b: T) => T\n  >,\n\n  floor: {\n    vec2f: unary2f(Math.floor),\n    vec2h: unary2h(Math.floor),\n\n    vec3f: unary3f(Math.floor),\n    vec3h: unary3h(Math.floor),\n\n    vec4f: unary4f(Math.floor),\n    vec4h: unary4h(Math.floor),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  max: {\n    vec2f: binaryComponentWise2f(Math.max),\n    vec2h: binaryComponentWise2h(Math.max),\n    vec2i: binaryComponentWise2i(Math.max),\n    vec2u: binaryComponentWise2u(Math.max),\n\n    vec3f: binaryComponentWise3f(Math.max),\n    vec3h: binaryComponentWise3h(Math.max),\n    vec3i: binaryComponentWise3i(Math.max),\n    vec3u: binaryComponentWise3u(Math.max),\n\n    vec4f: binaryComponentWise4f(Math.max),\n    vec4h: binaryComponentWise4h(Math.max),\n    vec4i: binaryComponentWise4i(Math.max),\n    vec4u: binaryComponentWise4u(Math.max),\n  } as Record<VecKind, <T extends vBase>(a: T, b: T) => T>,\n\n  min: {\n    vec2f: binaryComponentWise2f(Math.min),\n    vec2h: binaryComponentWise2h(Math.min),\n    vec2i: binaryComponentWise2i(Math.min),\n    vec2u: binaryComponentWise2u(Math.min),\n\n    vec3f: binaryComponentWise3f(Math.min),\n    vec3h: binaryComponentWise3h(Math.min),\n    vec3i: binaryComponentWise3i(Math.min),\n    vec3u: binaryComponentWise3u(Math.min),\n\n    vec4f: binaryComponentWise4f(Math.min),\n    vec4h: binaryComponentWise4h(Math.min),\n    vec4i: binaryComponentWise4i(Math.min),\n    vec4u: binaryComponentWise4u(Math.min),\n  } as Record<VecKind, <T extends vBase>(a: T, b: T) => T>,\n\n  pow: {\n    vec2f: (base: wgsl.v2f, exponent: wgsl.v2f) =>\n      vec2f(base.x ** exponent.x, base.y ** exponent.y),\n    vec2h: (base: wgsl.v2h, exponent: wgsl.v2h) =>\n      vec2h(base.x ** exponent.x, base.y ** exponent.y),\n\n    vec3f: (base: wgsl.v3f, exponent: wgsl.v3f) =>\n      vec3f(base.x ** exponent.x, base.y ** exponent.y, base.z ** exponent.z),\n    vec3h: (base: wgsl.v3h, exponent: wgsl.v3h) =>\n      vec3h(base.x ** exponent.x, base.y ** exponent.y, base.z ** exponent.z),\n\n    vec4f: (base: wgsl.v4f, exponent: wgsl.v4f) =>\n      vec4f(\n        base.x ** exponent.x,\n        base.y ** exponent.y,\n        base.z ** exponent.z,\n        base.w ** exponent.w,\n      ),\n    vec4h: (base: wgsl.v4h, exponent: wgsl.v4h) =>\n      vec4h(\n        base.x ** exponent.x,\n        base.y ** exponent.y,\n        base.z ** exponent.z,\n        base.w ** exponent.w,\n      ),\n  } as Record<\n    'vec2f' | 'vec3f' | 'vec4f' | 'vec2h' | 'vec3h' | 'vec4h' | 'number',\n    <T extends wgsl.AnyFloatVecInstance | number>(a: T, b: T) => T\n  >,\n\n  sign: {\n    vec2f: unary2f(Math.sign),\n    vec2h: unary2h(Math.sign),\n    vec2i: unary2i(Math.sign),\n\n    vec3f: unary3f(Math.sign),\n    vec3h: unary3h(Math.sign),\n    vec3i: unary3i(Math.sign),\n\n    vec4f: unary4f(Math.sign),\n    vec4h: unary4h(Math.sign),\n    vec4i: unary4i(Math.sign),\n  } as Record<VecKind, <T extends vBase>(e: T) => T>,\n\n  sqrt: {\n    vec2f: unary2f(Math.sqrt),\n    vec2h: unary2h(Math.sqrt),\n\n    vec3f: unary3f(Math.sqrt),\n    vec3h: unary3h(Math.sqrt),\n\n    vec4f: unary4f(Math.sqrt),\n    vec4h: unary4h(Math.sqrt),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  mix: {\n    vec2f: (e1: wgsl.v2f, e2: wgsl.v2f, e3: wgsl.v2f | number) => {\n      if (typeof e3 === 'number') {\n        return vec2f(e1.x * (1 - e3) + e2.x * e3, e1.y * (1 - e3) + e2.y * e3);\n      }\n      return vec2f(\n        e1.x * (1 - e3.x) + e2.x * e3.x,\n        e1.y * (1 - e3.y) + e2.y * e3.y,\n      );\n    },\n    vec2h: (e1: wgsl.v2h, e2: wgsl.v2h, e3: wgsl.v2h | number) => {\n      if (typeof e3 === 'number') {\n        return vec2h(e1.x * (1 - e3) + e2.x * e3, e1.y * (1 - e3) + e2.y * e3);\n      }\n      return vec2h(\n        e1.x * (1 - e3.x) + e2.x * e3.x,\n        e1.y * (1 - e3.y) + e2.y * e3.y,\n      );\n    },\n\n    vec3f: (e1: wgsl.v3f, e2: wgsl.v3f, e3: wgsl.v3f | number) => {\n      if (typeof e3 === 'number') {\n        return vec3f(\n          e1.x * (1 - e3) + e2.x * e3,\n          e1.y * (1 - e3) + e2.y * e3,\n          e1.z * (1 - e3) + e2.z * e3,\n        );\n      }\n      return vec3f(\n        e1.x * (1 - e3.x) + e2.x * e3.x,\n        e1.y * (1 - e3.y) + e2.y * e3.y,\n        e1.z * (1 - e3.z) + e2.z * e3.z,\n      );\n    },\n    vec3h: (e1: wgsl.v3h, e2: wgsl.v3h, e3: wgsl.v3h | number) => {\n      if (typeof e3 === 'number') {\n        return vec3h(\n          e1.x * (1 - e3) + e2.x * e3,\n          e1.y * (1 - e3) + e2.y * e3,\n          e1.z * (1 - e3) + e2.z * e3,\n        );\n      }\n      return vec3h(\n        e1.x * (1 - e3.x) + e2.x * e3.x,\n        e1.y * (1 - e3.y) + e2.y * e3.y,\n        e1.z * (1 - e3.z) + e2.z * e3.z,\n      );\n    },\n\n    vec4f: (e1: wgsl.v4f, e2: wgsl.v4f, e3: wgsl.v4f | number) => {\n      if (typeof e3 === 'number') {\n        return vec4f(\n          e1.x * (1 - e3) + e2.x * e3,\n          e1.y * (1 - e3) + e2.y * e3,\n          e1.z * (1 - e3) + e2.z * e3,\n          e1.w * (1 - e3) + e2.w * e3,\n        );\n      }\n      return vec4f(\n        e1.x * (1 - e3.x) + e2.x * e3.x,\n        e1.y * (1 - e3.y) + e2.y * e3.y,\n        e1.z * (1 - e3.z) + e2.z * e3.z,\n        e1.w * (1 - e3.w) + e2.w * e3.w,\n      );\n    },\n    vec4h: (e1: wgsl.v4h, e2: wgsl.v4h, e3: wgsl.v4h | number) => {\n      if (typeof e3 === 'number') {\n        return vec4h(\n          e1.x * (1 - e3) + e2.x * e3,\n          e1.y * (1 - e3) + e2.y * e3,\n          e1.z * (1 - e3) + e2.z * e3,\n          e1.w * (1 - e3) + e2.w * e3,\n        );\n      }\n      return vec4h(\n        e1.x * (1 - e3.x) + e2.x * e3.x,\n        e1.y * (1 - e3.y) + e2.y * e3.y,\n        e1.z * (1 - e3.z) + e2.z * e3.z,\n        e1.w * (1 - e3.w) + e2.w * e3.w,\n      );\n    },\n  } as Record<\n    'vec2f' | 'vec3f' | 'vec4f' | 'vec2h' | 'vec3h' | 'vec4h',\n    <T extends wgsl.v2f | wgsl.v3f | wgsl.v4f | wgsl.v2h | wgsl.v3h | wgsl.v4h>(\n      a: T,\n      b: T,\n      c: T | number,\n    ) => T\n  >,\n\n  sin: {\n    vec2f: unary2f(Math.sin),\n    vec2h: unary2h(Math.sin),\n\n    vec3f: unary3f(Math.sin),\n    vec3h: unary3h(Math.sin),\n\n    vec4f: unary4f(Math.sin),\n    vec4h: unary4h(Math.sin),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  cos: {\n    vec2f: unary2f(Math.cos),\n    vec2h: unary2h(Math.cos),\n\n    vec3f: unary3f(Math.cos),\n    vec3h: unary3h(Math.cos),\n\n    vec4f: unary4f(Math.cos),\n    vec4h: unary4h(Math.cos),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  cosh: {\n    vec2f: unary2f(Math.cosh),\n    vec2h: unary2h(Math.cosh),\n\n    vec3f: unary3f(Math.cosh),\n    vec3h: unary3h(Math.cosh),\n\n    vec4f: unary4f(Math.cosh),\n    vec4h: unary4h(Math.cosh),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  exp: {\n    vec2f: unary2f(Math.exp),\n    vec2h: unary2h(Math.exp),\n\n    vec3f: unary3f(Math.exp),\n    vec3h: unary3h(Math.exp),\n\n    vec4f: unary4f(Math.exp),\n    vec4h: unary4h(Math.exp),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  exp2: {\n    vec2f: unary2f((val) => 2 ** val),\n    vec2h: unary2h((val) => 2 ** val),\n\n    vec3f: unary3f((val) => 2 ** val),\n    vec3h: unary3h((val) => 2 ** val),\n\n    vec4f: unary4f((val) => 2 ** val),\n    vec4h: unary4h((val) => 2 ** val),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  log: {\n    vec2f: unary2f(Math.log),\n    vec2h: unary2h(Math.log),\n\n    vec3f: unary3f(Math.log),\n    vec3h: unary3h(Math.log),\n\n    vec4f: unary4f(Math.log),\n    vec4h: unary4h(Math.log),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  log2: {\n    vec2f: unary2f(Math.log2),\n    vec2h: unary2h(Math.log2),\n\n    vec3f: unary3f(Math.log2),\n    vec3h: unary3h(Math.log2),\n\n    vec4f: unary4f(Math.log2),\n    vec4h: unary4h(Math.log2),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  fract: {\n    vec2f: unary2f((value) => value - Math.floor(value)),\n    vec2h: unary2h((value) => value - Math.floor(value)),\n\n    vec3f: unary3f((value) => value - Math.floor(value)),\n    vec3h: unary3h((value) => value - Math.floor(value)),\n\n    vec4f: unary4f((value) => value - Math.floor(value)),\n    vec4h: unary4h((value) => value - Math.floor(value)),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  isCloseToZero: {\n    vec2f: (v: wgsl.v2f, n: number) => Math.abs(v.x) <= n && Math.abs(v.y) <= n,\n    vec2h: (v: wgsl.v2h, n: number) => Math.abs(v.x) <= n && Math.abs(v.y) <= n,\n\n    vec3f: (v: wgsl.v3f, n: number) =>\n      Math.abs(v.x) <= n && Math.abs(v.y) <= n && Math.abs(v.z) <= n,\n    vec3h: (v: wgsl.v3h, n: number) =>\n      Math.abs(v.x) <= n && Math.abs(v.y) <= n && Math.abs(v.z) <= n,\n\n    vec4f: (v: wgsl.v4f, n: number) =>\n      Math.abs(v.x) <= n &&\n      Math.abs(v.y) <= n &&\n      Math.abs(v.z) <= n &&\n      Math.abs(v.w) <= n,\n    vec4h: (v: wgsl.v4h, n: number) =>\n      Math.abs(v.x) <= n &&\n      Math.abs(v.y) <= n &&\n      Math.abs(v.z) <= n &&\n      Math.abs(v.w) <= n,\n  } as Record<VecKind, <T extends vBase>(v: T, n: number) => boolean>,\n\n  neg: {\n    vec2f: unary2f((value) => -value),\n    vec2h: unary2h((value) => -value),\n    vec2i: unary2i((value) => -value),\n    vec2u: unary2u((value) => -value),\n    'vec2<bool>': (e: wgsl.v2b) => vec2b(!e.x, !e.y),\n\n    vec3f: unary3f((value) => -value),\n    vec3h: unary3h((value) => -value),\n    vec3i: unary3i((value) => -value),\n    vec3u: unary3u((value) => -value),\n    'vec3<bool>': (e: wgsl.v3b) => vec3b(!e.x, !e.y, !e.z),\n\n    vec4f: unary4f((value) => -value),\n    vec4h: unary4h((value) => -value),\n    vec4i: unary4i((value) => -value),\n    vec4u: unary4u((value) => -value),\n    'vec4<bool>': (e: wgsl.v4b) => vec4b(!e.x, !e.y, !e.z, !e.w),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n\n  select: {\n    vec2f: (f: wgsl.v2f, t: wgsl.v2f, c: wgsl.v2b) =>\n      vec2f(c.x ? t.x : f.x, c.y ? t.y : f.y),\n    vec2h: (f: wgsl.v2h, t: wgsl.v2h, c: wgsl.v2b) =>\n      vec2h(c.x ? t.x : f.x, c.y ? t.y : f.y),\n    vec2i: (f: wgsl.v2i, t: wgsl.v2i, c: wgsl.v2b) =>\n      vec2i(c.x ? t.x : f.x, c.y ? t.y : f.y),\n    vec2u: (f: wgsl.v2u, t: wgsl.v2u, c: wgsl.v2b) =>\n      vec2u(c.x ? t.x : f.x, c.y ? t.y : f.y),\n    'vec2<bool>': (f: wgsl.v2b, t: wgsl.v2b, c: wgsl.v2b) =>\n      vec2b(c.x ? t.x : f.x, c.y ? t.y : f.y),\n\n    vec3f: (f: wgsl.v3f, t: wgsl.v3f, c: wgsl.v3b) =>\n      vec3f(c.x ? t.x : f.x, c.y ? t.y : f.y, c.z ? t.z : f.z),\n    vec3h: (f: wgsl.v3h, t: wgsl.v3h, c: wgsl.v3b) =>\n      vec3h(c.x ? t.x : f.x, c.y ? t.y : f.y, c.z ? t.z : f.z),\n    vec3i: (f: wgsl.v3i, t: wgsl.v3i, c: wgsl.v3b) =>\n      vec3i(c.x ? t.x : f.x, c.y ? t.y : f.y, c.z ? t.z : f.z),\n    vec3u: (f: wgsl.v3u, t: wgsl.v3u, c: wgsl.v3b) =>\n      vec3u(c.x ? t.x : f.x, c.y ? t.y : f.y, c.z ? t.z : f.z),\n    'vec3<bool>': (f: wgsl.v3b, t: wgsl.v3b, c: wgsl.v3b) =>\n      vec3b(c.x ? t.x : f.x, c.y ? t.y : f.y, c.z ? t.z : f.z),\n\n    vec4f: (f: wgsl.v4f, t: wgsl.v4f, c: wgsl.v4b) =>\n      vec4f(c.x ? t.x : f.x, c.y ? t.y : f.y, c.z ? t.z : f.z, c.w ? t.w : f.w),\n    vec4h: (f: wgsl.v4h, t: wgsl.v4h, c: wgsl.v4b) =>\n      vec4h(c.x ? t.x : f.x, c.y ? t.y : f.y, c.z ? t.z : f.z, c.w ? t.w : f.w),\n    vec4i: (f: wgsl.v4i, t: wgsl.v4i, c: wgsl.v4b) =>\n      vec4i(c.x ? t.x : f.x, c.y ? t.y : f.y, c.z ? t.z : f.z, c.w ? t.w : f.w),\n    vec4u: (f: wgsl.v4u, t: wgsl.v4u, c: wgsl.v4b) =>\n      vec4u(c.x ? t.x : f.x, c.y ? t.y : f.y, c.z ? t.z : f.z, c.w ? t.w : f.w),\n    'vec4<bool>': (f: wgsl.v4b, t: wgsl.v4b, c: wgsl.v4b) =>\n      vec4b(c.x ? t.x : f.x, c.y ? t.y : f.y, c.z ? t.z : f.z, c.w ? t.w : f.w),\n  } as Record<\n    VecKind,\n    <T extends wgsl.AnyVecInstance>(\n      f: T,\n      t: T,\n      c: T extends wgsl.AnyVec2Instance ? wgsl.v2b\n        : T extends wgsl.AnyVec3Instance ? wgsl.v3b\n        : wgsl.v4b,\n    ) => T\n  >,\n\n  tanh: {\n    vec2f: unary2f(Math.tanh),\n    vec2h: unary2h(Math.tanh),\n\n    vec3f: unary3f(Math.tanh),\n    vec3h: unary3h(Math.tanh),\n\n    vec4f: unary4f(Math.tanh),\n    vec4h: unary4h(Math.tanh),\n  } as Record<VecKind, <T extends vBase>(v: T) => T>,\n};\n","import { type AnyData, snip, type Snippet } from '../data/dataTypes.ts';\nimport { f32 } from '../data/numeric.ts';\nimport { VectorOps } from '../data/vectorOps.ts';\nimport {\n  type AbstractFloat,\n  type AbstractInt,\n  type AnyFloatVecInstance,\n  type AnyMatInstance,\n  type AnyNumericVecInstance,\n  type F16,\n  type F32,\n  type I32,\n  isFloat32VecInstance,\n  isMatInstance,\n  isVecInstance,\n  type mBaseForVec,\n  type U32,\n  type v2f,\n  type v2h,\n  type v2i,\n  type v3f,\n  type v3h,\n  type v3i,\n  type v4f,\n  type v4h,\n  type v4i,\n  type vBaseForMat,\n} from '../data/wgslTypes.ts';\nimport { createDualImpl } from '../shared/generators.ts';\nimport { $internal } from '../shared/symbols.ts';\n\ntype NumVec = AnyNumericVecInstance;\ntype Mat = AnyMatInstance;\n\nexport function isSnippetNumeric(snippet: Snippet) {\n  return isNumericSchema(snippet.dataType);\n}\n\nexport function isNumericSchema(\n  schema: unknown,\n): schema is AbstractInt | AbstractFloat | F32 | F16 | I32 | U32 {\n  const type = (schema as AnyData)?.type;\n\n  return (\n    !!(schema as AnyData)?.[$internal] &&\n    (type === 'abstractInt' ||\n      type === 'abstractFloat' ||\n      type === 'f32' ||\n      type === 'f16' ||\n      type === 'i32' ||\n      type === 'u32')\n  );\n}\n\nfunction cpuAdd(lhs: number, rhs: number): number; // default addition\nfunction cpuAdd<T extends NumVec>(lhs: number, rhs: T): T; // mixed addition\nfunction cpuAdd<T extends NumVec>(lhs: T, rhs: number): T; // mixed addition\nfunction cpuAdd<T extends NumVec | Mat>(lhs: T, rhs: T): T; // component-wise addition\nfunction cpuAdd<\n  // union overload\n  Lhs extends number | NumVec | Mat,\n  Rhs extends (Lhs extends number ? number | NumVec\n    : Lhs extends NumVec ? number | Lhs\n    : Lhs extends Mat ? Lhs\n    : never),\n>(lhs: Lhs, rhs: Rhs): Lhs | Rhs;\nfunction cpuAdd(lhs: number | NumVec | Mat, rhs: number | NumVec | Mat) {\n  if (typeof lhs === 'number' && typeof rhs === 'number') {\n    return lhs + rhs; // default addition\n  }\n  if (typeof lhs === 'number' && isVecInstance(rhs)) {\n    return VectorOps.addMixed[rhs.kind](rhs, lhs); // mixed addition\n  }\n  if (isVecInstance(lhs) && typeof rhs === 'number') {\n    return VectorOps.addMixed[lhs.kind](lhs, rhs); // mixed addition\n  }\n  if (\n    (isVecInstance(lhs) && isVecInstance(rhs)) ||\n    (isMatInstance(lhs) && isMatInstance(rhs))\n  ) {\n    return VectorOps.add[lhs.kind](lhs, rhs); // component-wise addition\n  }\n\n  throw new Error('Add/Sub called with invalid arguments.');\n}\n\nexport const add = createDualImpl(\n  // CPU implementation\n  cpuAdd,\n  // GPU implementation\n  (lhs, rhs) =>\n    snip(\n      `(${lhs.value} + ${rhs.value})`,\n      isSnippetNumeric(lhs) ? rhs.dataType : lhs.dataType,\n    ),\n  'coerce',\n);\n\nfunction cpuSub(lhs: number, rhs: number): number; // default subtraction\nfunction cpuSub<T extends NumVec>(lhs: number, rhs: T): T; // mixed subtraction\nfunction cpuSub<T extends NumVec>(lhs: T, rhs: number): T; // mixed subtraction\nfunction cpuSub<T extends NumVec | Mat>(lhs: T, rhs: T): T; // component-wise subtraction\nfunction cpuSub<\n  // union overload\n  Lhs extends number | NumVec | Mat,\n  Rhs extends (Lhs extends number ? number | NumVec\n    : Lhs extends NumVec ? number | Lhs\n    : Lhs extends Mat ? Lhs\n    : never),\n>(lhs: Lhs, rhs: Rhs): Lhs | Rhs;\nfunction cpuSub(lhs: number | NumVec | Mat, rhs: number | NumVec | Mat) {\n  // while illegal on the wgsl side, we can do this in js\n  return cpuAdd(lhs, mul(-1, rhs));\n}\n\nexport const sub = createDualImpl(\n  // CPU implementation\n  cpuSub,\n  // GPU implementation\n  (lhs, rhs) =>\n    snip(\n      `(${lhs.value} - ${rhs.value})`,\n      isSnippetNumeric(lhs) ? rhs.dataType : lhs.dataType,\n    ),\n  'sub',\n  'coerce',\n);\n\nfunction cpuMul(lhs: number, rhs: number): number; // default multiplication\nfunction cpuMul<MV extends NumVec | Mat>(lhs: number, rhs: MV): MV; // scale\nfunction cpuMul<MV extends NumVec | Mat>(lhs: MV, rhs: number): MV; // scale\nfunction cpuMul<V extends NumVec>(lhs: V, rhs: V): V; // component-wise multiplication\nfunction cpuMul<M extends Mat, V extends vBaseForMat<M>>(lhs: V, rhs: M): V; // row-vector-matrix\nfunction cpuMul<M extends Mat, V extends vBaseForMat<M>>(lhs: M, rhs: V): V; // matrix-column-vector\nfunction cpuMul<M extends Mat>(lhs: M, rhs: M): M; // matrix multiplication\nfunction cpuMul<\n  // union overload\n  Lhs extends number | NumVec | Mat,\n  Rhs extends (\n    Lhs extends number ? number | NumVec | Mat\n      : Lhs extends NumVec ? number | Lhs | mBaseForVec<Lhs>\n      : Lhs extends Mat ? number | vBaseForMat<Lhs> | Lhs\n      : never\n  ),\n>(lhs: Lhs, rhs: Rhs): Lhs | Rhs;\nfunction cpuMul(lhs: number | NumVec | Mat, rhs: number | NumVec | Mat) {\n  if (typeof lhs === 'number' && typeof rhs === 'number') {\n    return lhs * rhs; // default multiplication\n  }\n  if (typeof lhs === 'number' && (isVecInstance(rhs) || isMatInstance(rhs))) {\n    return VectorOps.mulSxV[rhs.kind](lhs, rhs); // scale\n  }\n  if ((isVecInstance(lhs) || isMatInstance(lhs)) && typeof rhs === 'number') {\n    return VectorOps.mulSxV[lhs.kind](rhs, lhs); // scale\n  }\n  if (isVecInstance(lhs) && isVecInstance(rhs)) {\n    return VectorOps.mulVxV[lhs.kind](lhs, rhs); // component-wise\n  }\n  if (isFloat32VecInstance(lhs) && isMatInstance(rhs)) {\n    return VectorOps.mulVxM[rhs.kind](lhs, rhs); // row-vector-matrix\n  }\n  if (isMatInstance(lhs) && isFloat32VecInstance(rhs)) {\n    return VectorOps.mulMxV[lhs.kind](lhs, rhs); // matrix-column-vector\n  }\n  if (isMatInstance(lhs) && isMatInstance(rhs)) {\n    return VectorOps.mulVxV[lhs.kind](lhs, rhs); // matrix multiplication\n  }\n\n  throw new Error('Mul called with invalid arguments.');\n}\n\nexport const mul = createDualImpl(\n  // CPU implementation\n  cpuMul,\n  // GPU implementation\n  (lhs, rhs) => {\n    const returnType = isSnippetNumeric(lhs)\n      // Scalar * Scalar/Vector/Matrix\n      ? rhs.dataType\n      : isSnippetNumeric(rhs)\n      // Vector/Matrix * Scalar\n      ? lhs.dataType\n      : lhs.dataType.type.startsWith('vec')\n      // Vector * Vector/Matrix\n      ? lhs.dataType\n      : rhs.dataType.type.startsWith('vec')\n      // Matrix * Vector\n      ? rhs.dataType\n      // Matrix * Matrix\n      : lhs.dataType;\n    return snip(`(${lhs.value} * ${rhs.value})`, returnType);\n  },\n  'mul',\n);\n\nfunction cpuDiv(lhs: number, rhs: number): number; // default js division\nfunction cpuDiv<MV extends NumVec>(lhs: number, rhs: MV): MV; // scale\nfunction cpuDiv<MV extends NumVec>(lhs: MV, rhs: number): MV; // scale\nfunction cpuDiv<V extends NumVec>(lhs: V, rhs: V): V; // component-wise division\nfunction cpuDiv<\n  // union overload\n  Lhs extends number | NumVec,\n  Rhs extends (Lhs extends number ? number | NumVec\n    : Lhs extends NumVec ? number | Lhs\n    : never),\n>(lhs: Lhs, rhs: Rhs): Lhs | Rhs;\nfunction cpuDiv(lhs: number | NumVec, rhs: number | NumVec) {\n  if (typeof lhs === 'number' && typeof rhs === 'number') {\n    return (lhs / rhs);\n  }\n  if (typeof lhs === 'number' && isVecInstance(rhs)) {\n    return VectorOps.divMixed[rhs.kind](rhs, lhs);\n  }\n  if (isVecInstance(lhs) && typeof rhs === 'number') {\n    return VectorOps.divMixed[lhs.kind](lhs, rhs);\n  }\n  if (isVecInstance(lhs) && isVecInstance(rhs)) {\n    return VectorOps.div[lhs.kind](lhs, rhs);\n  }\n\n  throw new Error('Div called with invalid arguments.');\n}\n\nexport const div = createDualImpl(\n  // CPU implementation\n  cpuDiv,\n  // GPU implementation\n  (lhs, rhs) => {\n    if (isSnippetNumeric(lhs) && isSnippetNumeric(rhs)) {\n      return snip(`(f32(${lhs.value}) / ${rhs.value})`, f32);\n    }\n    return snip(`(${lhs.value} / ${rhs.value})`, lhs.dataType);\n  },\n  'div',\n);\n\nexport const abs = createDualImpl(\n  // CPU implementation\n  <T extends NumVec | number>(value: T): T => {\n    if (typeof value === 'number') {\n      return Math.abs(value) as T;\n    }\n    return VectorOps.abs[value.kind](value) as T;\n  },\n  // GPU implementation\n  (value) => snip(`abs(${value.value})`, value.dataType),\n  'abs',\n);\n\nexport const atan2 = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(y: T, x: T): T => {\n    if (typeof y === 'number' && typeof x === 'number') {\n      return Math.atan2(y, x) as T;\n    }\n    return VectorOps.atan2[(y as AnyFloatVecInstance).kind](\n      y as never,\n      x as never,\n    ) as T;\n  },\n  // GPU implementation\n  (y, x) => snip(`atan2(${y.value}, ${x.value})`, y.dataType),\n  'atan2',\n);\n\nexport const acos = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(value: T): T => {\n    if (typeof value === 'number') {\n      return Math.acos(value) as T;\n    }\n    return VectorOps.acos[value.kind](value) as T;\n  },\n  // GPU implementation\n  (value) => snip(`acos(${value.value})`, value.dataType),\n  'acos',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#acosh-builtin\n */\nexport const acosh = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(value: T): T => {\n    if (typeof value === 'number') {\n      return Math.acosh(value) as T;\n    }\n    return VectorOps.acosh[value.kind](value) as T;\n  },\n  // GPU implementation\n  (value) => snip(`acosh(${value.value})`, value.dataType),\n  'acosh',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#asin-builtin\n */\nexport const asin = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(value: T): T => {\n    if (typeof value === 'number') {\n      return Math.asin(value) as T;\n    }\n    return VectorOps.asin[value.kind](value) as T;\n  },\n  // GPU implementation\n  (value) => snip(`asin(${value.value})`, value.dataType),\n  'asin',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#ceil-builtin\n */\nexport const ceil = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(value: T): T => {\n    if (typeof value === 'number') {\n      return Math.ceil(value) as T;\n    }\n    return VectorOps.ceil[value.kind](value) as T;\n  },\n  // GPU implementation\n  (value) => snip(`ceil(${value.value})`, value.dataType),\n  'ceil',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#clamp\n */\nexport const clamp = createDualImpl(\n  // CPU implementation\n  <T extends NumVec | number>(value: T, low: T, high: T): T => {\n    if (typeof value === 'number') {\n      return Math.min(Math.max(low as number, value), high as number) as T;\n    }\n    return VectorOps.clamp[value.kind](\n      value,\n      low as NumVec,\n      high as NumVec,\n    ) as T;\n  },\n  // GPU implementation\n  (value, low, high) =>\n    snip(`clamp(${value.value}, ${low.value}, ${high.value})`, value.dataType),\n  'clamp',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#cos-builtin\n */\nexport const cos = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(value: T): T => {\n    if (typeof value === 'number') {\n      return Math.cos(value) as T;\n    }\n    return VectorOps.cos[value.kind](value) as T;\n  },\n  // GPU implementation\n  (value) => snip(`cos(${value.value})`, value.dataType),\n  'cos',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#cosh-builtin\n */\nexport const cosh = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(value: T): T => {\n    if (typeof value === 'number') {\n      return Math.cosh(value) as T;\n    }\n    return VectorOps.cosh[value.kind](value) as T;\n  },\n  // GPU implementation\n  (value) => snip(`cosh(${value.value})`, value.dataType),\n  'cosh',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#cross-builtin\n */\nexport const cross = createDualImpl(\n  // CPU implementation\n  <T extends v3f | v3h>(a: T, b: T): T => VectorOps.cross[a.kind](a, b),\n  // GPU implementation\n  (a, b) => snip(`cross(${a.value}, ${b.value})`, a.dataType),\n  'cross',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#dot-builtin\n */\nexport const dot = createDualImpl(\n  // CPU implementation\n  <T extends NumVec>(lhs: T, rhs: T): number =>\n    VectorOps.dot[lhs.kind](lhs, rhs),\n  // GPU implementation\n  (lhs, rhs) => snip(`dot(${lhs.value}, ${rhs.value})`, f32),\n  'dot',\n);\n\nexport const normalize = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance>(v: T): T => VectorOps.normalize[v.kind](v),\n  // GPU implementation\n  (v) => snip(`normalize(${v.value})`, v.dataType),\n  'normalize',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#floor-builtin\n */\nexport const floor = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(value: T): T => {\n    if (typeof value === 'number') {\n      return Math.floor(value) as T;\n    }\n    return VectorOps.floor[value.kind](value) as T;\n  },\n  // GPU implementation\n  (value) => snip(`floor(${value.value})`, value.dataType),\n  'floor',\n);\n\nexport const fract = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(a: T): T => {\n    if (typeof a === 'number') {\n      return (a - Math.floor(a)) as T;\n    }\n    return VectorOps.fract[a.kind](a) as T;\n  },\n  // GPU implementation\n  (a) => snip(`fract(${a.value})`, a.dataType),\n  'fract',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#length-builtin\n */\nexport const length = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(value: T): number => {\n    if (typeof value === 'number') {\n      return Math.abs(value);\n    }\n    return VectorOps.length[value.kind](value);\n  },\n  // GPU implementation\n  (value) => snip(`length(${value.value})`, f32),\n  'length',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#log-builtin\n */\nexport const log = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(value: T): T => {\n    if (typeof value === 'number') {\n      return Math.log(value) as T;\n    }\n    return VectorOps.log[value.kind](value) as T;\n  },\n  // GPU implementation\n  (value) => snip(`log(${value.value})`, value.dataType),\n  'log',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#log2-builtin\n */\nexport const log2 = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(value: T): T => {\n    if (typeof value === 'number') {\n      return Math.log2(value) as T;\n    }\n    return VectorOps.log2[value.kind](value) as T;\n  },\n  // GPU implementation\n  (value) => snip(`log2(${value.value})`, value.dataType),\n  'log2',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#max-float-builtin\n */\nexport const max = createDualImpl(\n  // CPU implementation\n  <T extends NumVec | number>(a: T, b: T): T => {\n    if (typeof a === 'number') {\n      return Math.max(a, b as number) as T;\n    }\n    return VectorOps.max[a.kind](a, b as NumVec) as T;\n  },\n  // GPU implementation\n  (a, b) => snip(`max(${a.value}, ${b.value})`, a.dataType),\n  'max',\n  'coerce',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#min-float-builtin\n */\nexport const min = createDualImpl(\n  // CPU implementation\n  <T extends NumVec | number>(a: T, b: T): T => {\n    if (typeof a === 'number') {\n      return Math.min(a, b as number) as T;\n    }\n    return VectorOps.min[a.kind](a, b as NumVec) as T;\n  },\n  // GPU implementation\n  (a, b) => snip(`min(${a.value}, ${b.value})`, a.dataType),\n  'min',\n  'coerce',\n);\n\nexport const sign = createDualImpl(\n  // CPU implementation\n  //         \\/ specifically no unsigned variants\n  <T extends v2f | v2h | v2i | v3f | v3h | v3i | v4f | v4h | v4i | number>(\n    e: T,\n  ): T => {\n    if (typeof e === 'number') {\n      return Math.sign(e) as T;\n    }\n    return VectorOps.sign[e.kind](e) as T;\n  },\n  // GPU implementation\n  (e) => snip(`sign(${e.value})`, e.dataType),\n  'sign',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#sin-builtin\n */\nexport const sin = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(value: T): T => {\n    if (typeof value === 'number') {\n      return Math.sin(value) as T;\n    }\n    return VectorOps.sin[value.kind](value) as T;\n  },\n  // GPU implementation\n  (value) => snip(`sin(${value.value})`, value.dataType),\n  'sin',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#exp-builtin\n */\nexport const exp = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(value: T): T => {\n    if (typeof value === 'number') {\n      return Math.exp(value) as T;\n    }\n    return VectorOps.exp[value.kind](value) as T;\n  },\n  // GPU implementation\n  (value) => snip(`exp(${value.value})`, value.dataType),\n  'exp',\n);\n\n/**\n * @privateRemarks\n * https://www.w3.org/TR/WGSL/#exp2-builtin\n */\nexport const exp2 = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(value: T): T => {\n    if (typeof value === 'number') {\n      return (2 ** value) as T;\n    }\n    return VectorOps.exp2[value.kind](value) as T;\n  },\n  // GPU implementation\n  (value) => snip(`exp2(${value.value})`, value.dataType),\n  'exp2',\n);\n\ntype PowOverload = {\n  (base: number, exponent: number): number;\n  <T extends AnyFloatVecInstance>(base: T, exponent: T): T;\n};\n\nexport const pow: PowOverload = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(base: T, exponent: T): T => {\n    if (typeof base === 'number' && typeof exponent === 'number') {\n      return (base ** exponent) as T;\n    }\n    if (\n      typeof base === 'object' &&\n      typeof exponent === 'object' &&\n      'kind' in base &&\n      'kind' in exponent\n    ) {\n      return VectorOps.pow[base.kind](base, exponent) as T;\n    }\n    throw new Error('Invalid arguments to pow()');\n  },\n  // GPU implementation\n  (base, exponent) =>\n    snip(`pow(${base.value}, ${exponent.value})`, base.dataType),\n  'pow',\n);\n\ntype MixOverload = {\n  (e1: number, e2: number, e3: number): number;\n  <T extends AnyFloatVecInstance>(e1: T, e2: T, e3: number): T;\n  <T extends AnyFloatVecInstance>(e1: T, e2: T, e3: T): T;\n};\n\nexport const mix: MixOverload = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(e1: T, e2: T, e3: T | number): T => {\n    if (typeof e1 === 'number') {\n      if (typeof e3 !== 'number' || typeof e2 !== 'number') {\n        throw new Error(\n          'When e1 and e2 are numbers, the blend factor must be a number.',\n        );\n      }\n      return (e1 * (1 - e3) + e2 * e3) as T;\n    }\n\n    if (typeof e1 === 'number' || typeof e2 === 'number') {\n      throw new Error('e1 and e2 need to both be vectors of the same kind.');\n    }\n\n    return VectorOps.mix[e1.kind](e1, e2, e3) as T;\n  },\n  // GPU implementation\n  (e1, e2, e3) =>\n    snip(`mix(${e1.value}, ${e2.value}, ${e3.value})`, e1.dataType),\n  'mix',\n);\n\nexport const reflect = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance>(e1: T, e2: T): T =>\n    sub(e1, mul(2 * dot(e2, e1), e2)),\n  // GPU implementation\n  (e1, e2) => snip(`reflect(${e1.value}, ${e2.value})`, e1.dataType),\n  'reflect',\n);\n\nexport const distance = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(a: T, b: T): number => {\n    if (typeof a === 'number' && typeof b === 'number') {\n      return Math.abs(a - b);\n    }\n    return length(\n      sub(a as AnyFloatVecInstance, b as AnyFloatVecInstance),\n    ) as number;\n  },\n  // GPU implementation\n  (a, b) => snip(`distance(${a.value}, ${b.value})`, f32),\n  'distance',\n);\n\nexport const neg = createDualImpl(\n  // CPU implementation\n  <T extends NumVec | number>(value: T): T => {\n    if (typeof value === 'number') {\n      return -value as T;\n    }\n    return VectorOps.neg[value.kind](value) as T;\n  },\n  // GPU implementation\n  (value) => snip(`-(${value.value})`, value.dataType),\n  'neg',\n);\n\nexport const sqrt = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(value: T): T => {\n    if (typeof value === 'number') {\n      return Math.sqrt(value) as T;\n    }\n    return VectorOps.sqrt[value.kind](value) as T;\n  },\n  // GPU implementation\n  (value) => snip(`sqrt(${value.value})`, value.dataType),\n  'sqrt',\n);\n\nexport const tanh = createDualImpl(\n  // CPU implementation\n  <T extends AnyFloatVecInstance | number>(value: T): T => {\n    if (typeof value === 'number') {\n      return Math.tanh(value) as T;\n    }\n    return VectorOps.tanh[value.kind](value) as T;\n  },\n  // GPU implementation\n  (value) => snip(`tanh(${value.value})`, value.dataType),\n  'tanh',\n);\n"],"mappings":"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G,CAAC,EAAE,EAChBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAChBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAClBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EACdpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAChBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAChBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAClBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EACdpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAChBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAChBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAClBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EACdpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAChBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAChBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAClBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EACdpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAChBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAChBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAClBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EACdpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAChBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAChBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAClBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EACdpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAChBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAChBpB,EAAG,CAAC,EAAE,EAAIoB,EAAG,CAAC,EAAE,EAClBpB,EAAG,CAAC,EAAE,E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","names":["lengthVec2","v","lengthVec3","lengthVec4","dotVec2","lhs","rhs","dotVec3","dotVec4","clamp","value","low","high","unary2f","op","a","vec2f","unary2h","vec2h","unary2i","vec2i","unary2u","vec2u","unary3f","vec3f","unary3h","vec3h","unary3i","vec3i","unary3u","vec3u","unary4f","vec4f","unary4h","vec4h","unary4i","vec4i","unary4u","vec4u","unary2x2f","a_","mat2x2f","unary3x3f","mat3x3f","unary4x4f","mat4x4f","binaryComponentWise2f","b","binaryComponentWise2h","binaryComponentWise2i","binaryComponentWise2u","binaryComponentWise3f","binaryComponentWise3h","binaryComponentWise3i","binaryComponentWise3u","binaryComponentWise4f","binaryComponentWise4h","binaryComponentWise4i","binaryComponentWise4u","binaryComponentWise2x2f","b_","binaryComponentWise3x3f","binaryComponentWise4x4f","NumberOps","VectorOps","e1","e2","vec2b","vec3b","vec4b","e","s","m","m_","len","base","exponent","e3","val","f","t","c","isSnippetNumeric","snippet","isNumericSchema","schema","type","$internal","cpuAdd","lhs","rhs","isVecInstance","VectorOps","isMatInstance","add","createDualImpl","snip","cpuSub","mul","sub","cpuMul","isFloat32VecInstance","returnType","cpuDiv","div","f32","abs","value","atan2","y","x","acos","acosh","asin","ceil","clamp","low","high","cos","cosh","cross","a","b","dot","normalize","v","floor","fract","length","log","log2","max","min","sign","sin","exp","exp2","pow","base","exponent","mix","e1","e2","e3","reflect","distance","neg","sqrt","tanh"]}