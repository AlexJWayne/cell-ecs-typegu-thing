{"version":3,"sources":["../package.json","../src/shared/symbols.ts","../src/shared/env.ts","../src/shared/meta.ts","../src/errors.ts","../src/data/wgslTypes.ts","../src/shared/vertexFormat.ts","../src/data/dataTypes.ts","../src/gpuMode.ts","../src/shared/generators.ts","../src/data/numeric.ts","../src/data/vectorImpl.ts","../src/data/vector.ts","../src/data/matrix.ts","../src/data/ptr.ts"],"sourcesContent":["{\n  \"name\": \"typegpu\",\n  \"private\": true,\n  \"version\": \"0.6.0\",\n  \"description\": \"A thin layer between JS and WebGPU/WGSL that improves development experience and allows for faster iteration.\",\n  \"license\": \"MIT\",\n  \"type\": \"module\",\n  \"exports\": {\n    \"./package.json\": \"./package.json\",\n    \".\": \"./src/index.ts\",\n    \"./data\": \"./src/data/index.ts\",\n    \"./std\": \"./src/std/index.ts\"\n  },\n  \"publishConfig\": {\n    \"directory\": \"dist\",\n    \"linkDirectory\": false,\n    \"main\": \"./dist/index.js\",\n    \"types\": \"./dist/index.d.ts\",\n    \"exports\": {\n      \"./package.json\": \"./dist/package.json\",\n      \".\": {\n        \"types\": \"./dist/index.d.ts\",\n        \"module\": \"./dist/index.js\",\n        \"import\": \"./dist/index.js\",\n        \"default\": \"./dist/index.cjs\"\n      },\n      \"./data\": {\n        \"types\": \"./dist/data/index.d.ts\",\n        \"module\": \"./dist/data/index.js\",\n        \"import\": \"./dist/data/index.js\",\n        \"default\": \"./dist/data/index.cjs\"\n      },\n      \"./std\": {\n        \"types\": \"./dist/std/index.d.ts\",\n        \"module\": \"./dist/std/index.js\",\n        \"import\": \"./dist/std/index.js\",\n        \"default\": \"./dist/std/index.cjs\"\n      }\n    }\n  },\n  \"sideEffects\": false,\n  \"scripts\": {\n    \"build\": \"tsup\",\n    \"test:types\": \"pnpm tsc --p ./tsconfig.test.json --noEmit\",\n    \"prepublishOnly\": \"tgpu-dev-cli prepack\"\n  },\n  \"engines\": {\n    \"node\": \">=12.20.0\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/software-mansion/TypeGPU.git\"\n  },\n  \"keywords\": [\n    \"webgpu\",\n    \"wgpu\",\n    \"wgsl\",\n    \"typescript\",\n    \"compute\",\n    \"shader\",\n    \"shaders\",\n    \"gpgpu\"\n  ],\n  \"bugs\": {\n    \"url\": \"https://github.com/software-mansion/TypeGPU/issues\"\n  },\n  \"homepage\": \"https://typegpu.com\",\n  \"devDependencies\": {\n    \"@ark/attest\": \"^0.46.0\",\n    \"@typegpu/tgpu-dev-cli\": \"workspace:*\",\n    \"@webgpu/types\": \"catalog:types\",\n    \"arktype\": \"catalog:\",\n    \"jiti\": \"catalog:build\",\n    \"tsup\": \"catalog:build\",\n    \"typescript\": \"catalog:types\",\n    \"unplugin-typegpu\": \"workspace:*\",\n    \"wesl\": \"0.6.7\",\n    \"wgpu-matrix\": \"catalog:example\"\n  },\n  \"packageManager\": \"pnpm@10.4.1+sha512.c753b6c3ad7afa13af388fa6d808035a008e30ea9993f58c6663e2bc5ff21679aa834db094987129aa4d488b86df57f7b634981b2f827cdcacc698cc0cfb88af\",\n  \"dependencies\": {\n    \"tinyest\": \"workspace:~0.1.1\",\n    \"typed-binary\": \"^4.3.1\"\n  }\n}\n","// The version is inlined during build-time 🎉\n// It helps us identify problems when two versions of\n// TypeGPU are used at the same time.\nimport { version } from '../../package.json';\n\nexport const $internal = Symbol(`typegpu:${version}:$internal`);\n/**\n * A value's data type as seen by the WGSL generator\n */\nexport const $wgslDataType = Symbol(`typegpu:${version}:$wgslDataType`);\n/**\n * The getter to the value of this resource, accessible on the GPU\n */\nexport const $gpuValueOf = Symbol(`typegpu:${version}:$gpuValueOf`);\nexport const $getNameForward = Symbol(`typegpu:${version}:$getNameForward`);\n/**\n * Marks an object with slot-value bindings\n */\nexport const $providing = Symbol(`typegpu:${version}:$providing`);\n\n//\n// Type tokens\n//\n\n/**\n * Type token for the inferred (CPU & GPU) representation of a resource\n */\nexport const $repr = Symbol(`typegpu:${version}:$repr`);\n/**\n * Type token for the inferred (GPU-side) representation of a resource\n * If present, it shadows the value of `$repr` for GPU-side inference.\n */\nexport const $gpuRepr = Symbol(`typegpu:${version}:$gpuRepr`);\n/**\n * Type token for the inferred partial representation of a resource.\n * If present, it shadows the value of `$repr` for use in partial IO.\n */\nexport const $reprPartial = Symbol(`typegpu:${version}:$reprPartial`);\n/**\n * Type token holding schemas that are identical in memory layout.\n */\nexport const $memIdent = Symbol(`typegpu:${version}:$memIdent`);\n","/**\n * This can be used to branch functionality between \"dev\" and \"prod\" modes, so that our\n * library can omit doing unnecessary work once it's out in the wild\n *\n * Even though the value of this constant uses Node.js specific APIs, pretty much every\n * bundler replaces the expression below with either `development` or `production`\n */\nexport const DEV = globalThis.process.env.NODE_ENV === 'development';\n\nexport const TEST = globalThis.process.env.NODE_ENV === 'test';\n","import type { Block, FuncParameter } from 'tinyest';\nimport { $getNameForward, $internal } from './symbols.ts';\nimport { DEV, TEST } from './env.ts';\n\nexport interface MetaData {\n  name?: string | undefined;\n  ast?: {\n    v: number;\n    params: FuncParameter[];\n    body: Block;\n    externalNames: string[];\n  } | undefined;\n  externals?: Record<string, unknown> | undefined;\n}\n\n/**\n * Don't use or you WILL get fired from your job.\n *\n * The information that this type describes is additional\n * properties that we add onto `globalThis`, used by tools\n * like `unplugin-typegpu` or our test suite.\n *\n * @internal\n */\nexport type INTERNAL_GlobalExt = typeof globalThis & {\n  __TYPEGPU_META__: WeakMap<object, MetaData>;\n  __TYPEGPU_AUTONAME__: <T>(exp: T, label: string) => T;\n  __TYPEGPU_MEASURE_PERF__?: boolean | undefined;\n  __TYPEGPU_PERF_RECORDS__?: Map<string, unknown[]> | undefined;\n};\n\nObject.assign(globalThis, {\n  '__TYPEGPU_AUTONAME__': <T>(exp: T, label: string): T =>\n    isNamable(exp) &&\n      (exp as unknown as { [$internal]: unknown })?.[$internal] && !getName(exp)\n      ? exp.$name(label)\n      : exp,\n});\n\nconst globalWithMeta = globalThis as INTERNAL_GlobalExt;\n\n/**\n * Performance measurements are only enabled in dev & test environments for now\n */\nexport const PERF = (DEV || TEST) && ({\n      get enabled() {\n        return !!globalWithMeta.__TYPEGPU_MEASURE_PERF__;\n      },\n      record(name: string, data: unknown) {\n        // biome-ignore lint/suspicious/noAssignInExpressions: it's fine\n        const records = (globalWithMeta.__TYPEGPU_PERF_RECORDS__ ??= new Map());\n        let entries = records.get(name);\n        if (!entries) {\n          entries = [];\n          records.set(name, entries);\n        }\n        entries.push(data);\n      },\n    }) || undefined;\n\nfunction isForwarded(value: unknown): value is { [$getNameForward]: unknown } {\n  return !!(value as { [$getNameForward]?: unknown })?.[$getNameForward];\n}\n\nexport function getName(definition: unknown): string | undefined {\n  if (isForwarded(definition)) {\n    return getName(definition[$getNameForward]);\n  }\n  return getMetaData(definition)?.name;\n}\n\nexport function setName(definition: object, name: string): void {\n  setMetaData(definition, { name });\n}\n\n/**\n * Can be assigned a name. Not to be confused with\n * being able to HAVE a name.\n * The `$name` function should use `setName` to rename the object itself,\n * or rename the object `$getNameForward` symbol points to instead if applicable.\n */\nexport interface TgpuNamable {\n  $name(label: string): this;\n}\n\nexport function isNamable(value: unknown): value is TgpuNamable {\n  return !!(value as TgpuNamable)?.$name;\n}\n\nexport function getMetaData(\n  definition: unknown,\n): MetaData | undefined {\n  return globalWithMeta.__TYPEGPU_META__.get(\n    // it's fine, if it's not an object, the get will return undefined\n    definition as object,\n  );\n}\n\nexport function setMetaData(definition: object, metaData: object) {\n  globalWithMeta.__TYPEGPU_META__ ??= new WeakMap();\n  const map = globalWithMeta.__TYPEGPU_META__;\n  map.set(definition, { ...map.get(definition), ...metaData });\n}\n","import type { TgpuBuffer } from './core/buffer/buffer.ts';\nimport type { TgpuSlot } from './core/slot/slotTypes.ts';\nimport type { TgpuVertexLayout } from './core/vertexLayout/vertexLayout.ts';\nimport type { AnyData, Disarray } from './data/dataTypes.ts';\nimport type { WgslArray } from './data/wgslTypes.ts';\nimport { getName } from './shared/meta.ts';\nimport { DEV } from './shared/env.ts';\nimport type { TgpuBindGroupLayout } from './tgpuBindGroupLayout.ts';\n\nconst prefix = 'Invariant failed';\n\n/**\n * Inspired by: https://github.com/alexreardon/tiny-invariant/blob/master/src/tiny-invariant.ts\n */\nexport function invariant(\n  condition: unknown,\n  message?: string | (() => string),\n): asserts condition {\n  if (condition) {\n    // Condition passed\n    return;\n  }\n\n  // In production we strip the message but still throw\n  if (!DEV) {\n    throw new Error(prefix);\n  }\n\n  // When not in production we allow the message to pass through\n  // *This block will be removed in production builds*\n\n  const provided = typeof message === 'function' ? message() : message;\n\n  // Options:\n  // 1. message provided: `${prefix}: ${provided}`\n  // 2. message not provided: prefix\n  const value = provided ? `${prefix}: ${provided}` : prefix;\n  throw new Error(value);\n}\n\n/**\n * An error that happens during resolution of WGSL code.\n * Contains a trace of all ancestor resolvables in\n * which this error originated.\n *\n * @category Errors\n */\nexport class ResolutionError extends Error {\n  constructor(\n    public readonly cause: unknown,\n    public readonly trace: unknown[],\n  ) {\n    let entries = trace.map((ancestor) => `- ${ancestor}`);\n\n    // Showing only the root and leaf nodes.\n    if (entries.length > 20) {\n      entries = [...entries.slice(0, 11), '...', ...entries.slice(-10)];\n    }\n\n    super(\n      `Resolution of the following tree failed: \\n${entries.join('\\n')}: ${\n        cause && typeof cause === 'object' && 'message' in cause\n          ? cause.message\n          : cause\n      }`,\n    );\n\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, ResolutionError.prototype);\n  }\n\n  appendToTrace(ancestor: unknown): ResolutionError {\n    const newTrace = [ancestor, ...this.trace];\n\n    return new ResolutionError(this.cause, newTrace);\n  }\n}\n\n/**\n * @category Errors\n */\nexport class MissingSlotValueError extends Error {\n  constructor(public readonly slot: TgpuSlot<unknown>) {\n    super(`Missing value for '${slot}'`);\n\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, MissingSlotValueError.prototype);\n  }\n}\n\n/**\n * @category Errors\n */\nexport class NotUniformError extends Error {\n  constructor(value: TgpuBuffer<AnyData>) {\n    super(\n      `Buffer '${\n        getName(value) ?? '<unnamed>'\n      }' is not bindable as a uniform. Use .$usage('uniform') to allow it.`,\n    );\n\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, NotUniformError.prototype);\n  }\n}\n\nexport class MissingLinksError extends Error {\n  constructor(fnLabel: string | undefined, externalNames: string[]) {\n    super(\n      `The function '${\n        fnLabel ?? '<unnamed>'\n      }' is missing links to the following external values: ${externalNames}.`,\n    );\n\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, MissingLinksError.prototype);\n  }\n}\n\nexport class MissingBindGroupsError extends Error {\n  constructor(layouts: Iterable<TgpuBindGroupLayout>) {\n    super(\n      `Missing bind groups for layouts: '${\n        [...layouts].map((layout) => getName(layout) ?? '<unnamed>').join(', ')\n      }'. Please provide it using pipeline.with(layout, bindGroup).(...)`,\n    );\n\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, MissingBindGroupsError.prototype);\n  }\n}\n\nexport class MissingVertexBuffersError extends Error {\n  constructor(layouts: Iterable<TgpuVertexLayout<WgslArray | Disarray>>) {\n    super(\n      `Missing vertex buffers for layouts: '${\n        [...layouts].map((layout) => getName(layout) ?? '<unnamed>').join(', ')\n      }'. Please provide it using pipeline.with(layout, buffer).(...)`,\n    );\n\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, MissingVertexBuffersError.prototype);\n  }\n}\n","import type { TgpuNamable } from '../shared/meta.ts';\nimport type {\n  Infer,\n  InferGPU,\n  InferGPURecord,\n  InferPartial,\n  InferPartialRecord,\n  InferRecord,\n  MemIdentity,\n  MemIdentityRecord,\n} from '../shared/repr.ts';\nimport type {\n  $gpuRepr,\n  $memIdent,\n  $repr,\n  $reprPartial,\n} from '../shared/symbols.ts';\nimport { $internal, $wgslDataType } from '../shared/symbols.ts';\nimport type { Prettify } from '../shared/utilityTypes.ts';\n\ntype DecoratedLocation<T extends BaseData> = Decorated<T, Location[]>;\n\nexport interface NumberArrayView {\n  readonly length: number;\n  [n: number]: number;\n  [Symbol.iterator]: () => Iterator<number>;\n}\n\nexport interface BaseData {\n  readonly [$internal]: true;\n  readonly type: string;\n  readonly [$repr]: unknown;\n}\n\nexport function hasInternalDataType(\n  value: unknown,\n): value is { [$wgslDataType]: BaseData } {\n  return !!(value as { [$wgslDataType]: BaseData })?.[$wgslDataType];\n}\n\nexport type ExtractTypeLabel<T extends BaseData> = T['type'];\n\n// #region Instance Types\n\n/**\n * Represents a 64-bit integer.\n */\nexport interface AbstractInt {\n  readonly [$internal]: true;\n  readonly type: 'abstractInt';\n  readonly [$repr]: number;\n}\n\n/**\n * Represents a 64-bit IEEE 754 floating point number.\n */\nexport interface AbstractFloat {\n  readonly [$internal]: true;\n  readonly type: 'abstractFloat';\n  readonly [$repr]: number;\n}\n\nexport interface Void {\n  readonly [$internal]: true;\n  readonly type: 'void';\n  // biome-ignore lint/suspicious/noConfusingVoidType: <void is void>\n  readonly [$repr]: void;\n}\nexport const Void = {\n  [$internal]: true,\n  type: 'void',\n} as Void;\n\ninterface Swizzle2<T2, T3, T4> {\n  readonly xx: T2;\n  readonly xy: T2;\n  readonly yx: T2;\n  readonly yy: T2;\n\n  readonly xxx: T3;\n  readonly xxy: T3;\n  readonly xyx: T3;\n  readonly xyy: T3;\n  readonly yxx: T3;\n  readonly yxy: T3;\n  readonly yyx: T3;\n  readonly yyy: T3;\n\n  readonly xxxx: T4;\n  readonly xxxy: T4;\n  readonly xxyx: T4;\n  readonly xxyy: T4;\n  readonly xyxx: T4;\n  readonly xyxy: T4;\n  readonly xyyx: T4;\n  readonly xyyy: T4;\n  readonly yxxx: T4;\n  readonly yxxy: T4;\n  readonly yxyx: T4;\n  readonly yxyy: T4;\n  readonly yyxx: T4;\n  readonly yyxy: T4;\n  readonly yyyx: T4;\n  readonly yyyy: T4;\n}\n\ninterface Swizzle3<T2, T3, T4> extends Swizzle2<T2, T3, T4> {\n  readonly xz: T2;\n  readonly yz: T2;\n  readonly zx: T2;\n  readonly zy: T2;\n  readonly zz: T2;\n\n  readonly xxz: T3;\n  readonly xyz: T3;\n  readonly xzx: T3;\n  readonly xzy: T3;\n  readonly xzz: T3;\n  readonly yxz: T3;\n  readonly yyz: T3;\n  readonly yzx: T3;\n  readonly yzy: T3;\n  readonly yzz: T3;\n  readonly zxx: T3;\n  readonly zxy: T3;\n  readonly zxz: T3;\n  readonly zyx: T3;\n  readonly zyy: T3;\n  readonly zyz: T3;\n  readonly zzx: T3;\n  readonly zzy: T3;\n  readonly zzz: T3;\n\n  readonly xxxz: T4;\n  readonly xxyz: T4;\n  readonly xxzx: T4;\n  readonly xxzy: T4;\n  readonly xxzz: T4;\n  readonly xyxz: T4;\n  readonly xyyz: T4;\n  readonly xyzx: T4;\n  readonly xyzy: T4;\n  readonly xyzz: T4;\n  readonly xzxx: T4;\n  readonly xzxy: T4;\n  readonly xzxz: T4;\n  readonly xzyx: T4;\n  readonly xzyy: T4;\n  readonly xzyz: T4;\n  readonly xzzx: T4;\n  readonly xzzy: T4;\n  readonly xzzz: T4;\n  readonly yxxz: T4;\n  readonly yxyz: T4;\n  readonly yxzx: T4;\n  readonly yxzy: T4;\n  readonly yxzz: T4;\n  readonly yyxz: T4;\n  readonly yyyz: T4;\n  readonly yyzx: T4;\n  readonly yyzy: T4;\n  readonly yyzz: T4;\n  readonly yzxx: T4;\n  readonly yzxy: T4;\n  readonly yzxz: T4;\n  readonly yzyx: T4;\n  readonly yzyy: T4;\n  readonly yzyz: T4;\n  readonly yzzx: T4;\n  readonly yzzy: T4;\n  readonly yzzz: T4;\n  readonly zxxx: T4;\n  readonly zxxy: T4;\n  readonly zxxz: T4;\n  readonly zxyx: T4;\n  readonly zxyy: T4;\n  readonly zxyz: T4;\n  readonly zxzx: T4;\n  readonly zxzy: T4;\n  readonly zxzz: T4;\n  readonly zyxx: T4;\n  readonly zyxy: T4;\n  readonly zyxz: T4;\n  readonly zyyx: T4;\n  readonly zyyy: T4;\n  readonly zyyz: T4;\n  readonly zyzx: T4;\n  readonly zyzy: T4;\n  readonly zyzz: T4;\n  readonly zzxx: T4;\n  readonly zzxy: T4;\n  readonly zzxz: T4;\n  readonly zzyx: T4;\n  readonly zzyy: T4;\n  readonly zzyz: T4;\n  readonly zzzx: T4;\n  readonly zzzy: T4;\n  readonly zzzz: T4;\n}\n\ninterface Swizzle4<T2, T3, T4> extends Swizzle3<T2, T3, T4> {\n  readonly yw: T2;\n  readonly zw: T2;\n  readonly wx: T2;\n  readonly wy: T2;\n  readonly wz: T2;\n  readonly ww: T2;\n\n  readonly xxw: T3;\n  readonly xyw: T3;\n  readonly xzw: T3;\n  readonly xwx: T3;\n  readonly xwy: T3;\n  readonly xwz: T3;\n  readonly xww: T3;\n  readonly yxw: T3;\n  readonly yyw: T3;\n  readonly yzw: T3;\n  readonly ywx: T3;\n  readonly ywy: T3;\n  readonly ywz: T3;\n  readonly yww: T3;\n  readonly zxw: T3;\n  readonly zyw: T3;\n  readonly zzw: T3;\n  readonly zwx: T3;\n  readonly zwy: T3;\n  readonly zwz: T3;\n  readonly zww: T3;\n  readonly wxx: T3;\n  readonly wxz: T3;\n  readonly wxy: T3;\n  readonly wyy: T3;\n  readonly wyz: T3;\n  readonly wzz: T3;\n  readonly wwx: T3;\n  readonly wwy: T3;\n  readonly wwz: T3;\n  readonly www: T3;\n\n  readonly xxxw: T4;\n  readonly xxyw: T4;\n  readonly xxzw: T4;\n  readonly xxwx: T4;\n  readonly xxwy: T4;\n  readonly xxwz: T4;\n  readonly xxww: T4;\n  readonly xyxw: T4;\n  readonly xyyw: T4;\n  readonly xyzw: T4;\n  readonly xywx: T4;\n  readonly xywy: T4;\n  readonly xywz: T4;\n  readonly xyww: T4;\n  readonly xzxw: T4;\n  readonly xzyw: T4;\n  readonly xzzw: T4;\n  readonly xzwx: T4;\n  readonly xzwy: T4;\n  readonly xzwz: T4;\n  readonly xzww: T4;\n  readonly xwxx: T4;\n  readonly xwxy: T4;\n  readonly xwxz: T4;\n  readonly xwyy: T4;\n  readonly xwyz: T4;\n  readonly xwzz: T4;\n  readonly xwwx: T4;\n  readonly xwwy: T4;\n  readonly xwwz: T4;\n  readonly xwww: T4;\n  readonly yxxw: T4;\n  readonly yxyw: T4;\n  readonly yxzw: T4;\n  readonly yxwx: T4;\n  readonly yxwy: T4;\n  readonly yxwz: T4;\n  readonly yxww: T4;\n  readonly yyxw: T4;\n  readonly yyyw: T4;\n  readonly yyzw: T4;\n  readonly yywx: T4;\n  readonly yywy: T4;\n  readonly yywz: T4;\n  readonly yyww: T4;\n  readonly yzxw: T4;\n  readonly yzyw: T4;\n  readonly yzzw: T4;\n  readonly yzwx: T4;\n  readonly yzwy: T4;\n  readonly yzwz: T4;\n  readonly yzww: T4;\n  readonly ywxx: T4;\n  readonly ywxy: T4;\n  readonly ywxz: T4;\n  readonly ywxw: T4;\n  readonly ywyy: T4;\n  readonly ywyz: T4;\n  readonly ywzz: T4;\n  readonly ywwx: T4;\n  readonly ywwy: T4;\n  readonly ywwz: T4;\n  readonly ywww: T4;\n  readonly zxxw: T4;\n  readonly zxyw: T4;\n  readonly zxzw: T4;\n  readonly zxwx: T4;\n  readonly zxwy: T4;\n  readonly zxwz: T4;\n  readonly zxww: T4;\n  readonly zyxw: T4;\n  readonly zyyw: T4;\n  readonly zyzw: T4;\n  readonly zywx: T4;\n  readonly zywy: T4;\n  readonly zywz: T4;\n  readonly zyww: T4;\n  readonly zzxw: T4;\n  readonly zzyw: T4;\n  readonly zzzw: T4;\n  readonly zzwx: T4;\n  readonly zzwy: T4;\n  readonly zzwz: T4;\n  readonly zzww: T4;\n  readonly zwxx: T4;\n  readonly zwxy: T4;\n  readonly zwxz: T4;\n  readonly zwxw: T4;\n  readonly zwyy: T4;\n  readonly zwyz: T4;\n  readonly zwzz: T4;\n  readonly zwwx: T4;\n  readonly zwwy: T4;\n  readonly zwwz: T4;\n  readonly zwww: T4;\n  readonly wxxx: T4;\n  readonly wxxy: T4;\n  readonly wxxz: T4;\n  readonly wxxw: T4;\n  readonly wxyx: T4;\n  readonly wxyy: T4;\n  readonly wxyz: T4;\n  readonly wxyw: T4;\n  readonly wxzx: T4;\n  readonly wxzy: T4;\n  readonly wxzz: T4;\n  readonly wxzw: T4;\n  readonly wxwx: T4;\n  readonly wxwy: T4;\n  readonly wxwz: T4;\n  readonly wxww: T4;\n  readonly wyxx: T4;\n  readonly wyxy: T4;\n  readonly wyxz: T4;\n  readonly wyxw: T4;\n  readonly wyyy: T4;\n  readonly wyyz: T4;\n  readonly wyzw: T4;\n  readonly wywx: T4;\n  readonly wywy: T4;\n  readonly wywz: T4;\n  readonly wyww: T4;\n  readonly wzxx: T4;\n  readonly wzxy: T4;\n  readonly wzxz: T4;\n  readonly wzxw: T4;\n  readonly wzyy: T4;\n  readonly wzyz: T4;\n  readonly wzzy: T4;\n  readonly wzzw: T4;\n  readonly wzwx: T4;\n  readonly wzwy: T4;\n  readonly wzwz: T4;\n  readonly wzww: T4;\n  readonly wwxx: T4;\n  readonly wwxy: T4;\n  readonly wwxz: T4;\n  readonly wwxw: T4;\n  readonly wwyy: T4;\n  readonly wwyz: T4;\n  readonly wwzz: T4;\n  readonly wwwx: T4;\n  readonly wwwy: T4;\n  readonly wwwz: T4;\n  readonly wwww: T4;\n}\n\ntype Tuple2<S> = [S, S];\ntype Tuple3<S> = [S, S, S];\ntype Tuple4<S> = [S, S, S, S];\n\n/**\n * Interface representing its WGSL vector type counterpart: vec2f or vec2<f32>.\n * A vector with 2 elements of type f32\n */\nexport interface v2f extends Tuple2<number>, Swizzle2<v2f, v3f, v4f> {\n  readonly [$internal]: true;\n  /** use to distinguish between vectors of the same size on the type level */\n  readonly kind: 'vec2f';\n  x: number;\n  y: number;\n}\n\n/**\n * Interface representing its WGSL vector type counterpart: vec2h or vec2<f16>.\n * A vector with 2 elements of type f16\n */\nexport interface v2h extends Tuple2<number>, Swizzle2<v2h, v3h, v4h> {\n  readonly [$internal]: true;\n  /** use to distinguish between vectors of the same size on the type level */\n  readonly kind: 'vec2h';\n  x: number;\n  y: number;\n}\n\n/**\n * Interface representing its WGSL vector type counterpart: vec2i or vec2<i32>.\n * A vector with 2 elements of type i32\n */\nexport interface v2i extends Tuple2<number>, Swizzle2<v2i, v3i, v4i> {\n  readonly [$internal]: true;\n  /** use to distinguish between vectors of the same size on the type level */\n  readonly kind: 'vec2i';\n  x: number;\n  y: number;\n}\n\n/**\n * Interface representing its WGSL vector type counterpart: vec2u or vec2<u32>.\n * A vector with 2 elements of type u32\n */\nexport interface v2u extends Tuple2<number>, Swizzle2<v2u, v3u, v4u> {\n  readonly [$internal]: true;\n  /** use to distinguish between vectors of the same size on the type level */\n  readonly kind: 'vec2u';\n  x: number;\n  y: number;\n}\n\n/**\n * Interface representing its WGSL vector type counterpart: `vec2<bool>`.\n * A vector with 2 elements of type `bool`\n */\nexport interface v2b extends Tuple2<boolean>, Swizzle2<v2b, v3b, v4b> {\n  readonly [$internal]: true;\n  /** use to distinguish between vectors of the same size on the type level */\n  readonly kind: 'vec2<bool>';\n  x: boolean;\n  y: boolean;\n}\n\n/**\n * Interface representing its WGSL vector type counterpart: vec3f or vec3<f32>.\n * A vector with 3 elements of type f32\n */\nexport interface v3f extends Tuple3<number>, Swizzle3<v2f, v3f, v4f> {\n  readonly [$internal]: true;\n  /** use to distinguish between vectors of the same size on the type level */\n  readonly kind: 'vec3f';\n  x: number;\n  y: number;\n  z: number;\n}\n\n/**\n * Interface representing its WGSL vector type counterpart: vec3h or vec3<f16>.\n * A vector with 3 elements of type f16\n */\nexport interface v3h extends Tuple3<number>, Swizzle3<v2h, v3h, v4h> {\n  readonly [$internal]: true;\n  /** use to distinguish between vectors of the same size on the type level */\n  readonly kind: 'vec3h';\n  x: number;\n  y: number;\n  z: number;\n}\n\n/**\n * Interface representing its WGSL vector type counterpart: vec3i or vec3<i32>.\n * A vector with 3 elements of type i32\n */\nexport interface v3i extends Tuple3<number>, Swizzle3<v2i, v3i, v4i> {\n  readonly [$internal]: true;\n  /** use to distinguish between vectors of the same size on the type level */\n  readonly kind: 'vec3i';\n  x: number;\n  y: number;\n  z: number;\n}\n\n/**\n * Interface representing its WGSL vector type counterpart: vec3u or vec3<u32>.\n * A vector with 3 elements of type u32\n */\nexport interface v3u extends Tuple3<number>, Swizzle3<v2u, v3u, v4u> {\n  readonly [$internal]: true;\n  /** use to distinguish between vectors of the same size on the type level */\n  readonly kind: 'vec3u';\n  x: number;\n  y: number;\n  z: number;\n}\n\n/**\n * Interface representing its WGSL vector type counterpart: `vec3<bool>`.\n * A vector with 3 elements of type `bool`\n */\nexport interface v3b extends Tuple3<boolean>, Swizzle3<v2b, v3b, v4b> {\n  readonly [$internal]: true;\n  /** use to distinguish between vectors of the same size on the type level */\n  readonly kind: 'vec3<bool>';\n  x: boolean;\n  y: boolean;\n  z: boolean;\n}\n\n/**\n * Interface representing its WGSL vector type counterpart: vec4f or vec4<f32>.\n * A vector with 4 elements of type f32\n */\nexport interface v4f extends Tuple4<number>, Swizzle4<v2f, v3f, v4f> {\n  readonly [$internal]: true;\n  /** use to distinguish between vectors of the same size on the type level */\n  readonly kind: 'vec4f';\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n}\n\n/**\n * Interface representing its WGSL vector type counterpart: vec4h or vec4<f16>.\n * A vector with 4 elements of type f16\n */\nexport interface v4h extends Tuple4<number>, Swizzle4<v2h, v3h, v4h> {\n  readonly [$internal]: true;\n  /** use to distinguish between vectors of the same size on the type level */\n  readonly kind: 'vec4h';\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n}\n\n/**\n * Interface representing its WGSL vector type counterpart: vec4i or vec4<i32>.\n * A vector with 4 elements of type i32\n */\nexport interface v4i extends Tuple4<number>, Swizzle4<v2i, v3i, v4i> {\n  readonly [$internal]: true;\n  /** use to distinguish between vectors of the same size on the type level */\n  readonly kind: 'vec4i';\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n}\n\n/**\n * Interface representing its WGSL vector type counterpart: vec4u or vec4<u32>.\n * A vector with 4 elements of type u32\n */\nexport interface v4u extends Tuple4<number>, Swizzle4<v2u, v3u, v4u> {\n  readonly [$internal]: true;\n  /** use to distinguish between vectors of the same size on the type level */\n  readonly kind: 'vec4u';\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n}\n\n/**\n * Interface representing its WGSL vector type counterpart: `vec4<bool>`.\n * A vector with 4 elements of type `bool`\n */\nexport interface v4b extends Tuple4<boolean>, Swizzle4<v2b, v3b, v4b> {\n  readonly [$internal]: true;\n  /** use to distinguish between vectors of the same size on the type level */\n  readonly kind: 'vec4<bool>';\n  x: boolean;\n  y: boolean;\n  z: boolean;\n  w: boolean;\n}\n\nexport type AnyFloat32VecInstance = v2f | v3f | v4f;\n\nexport type AnyFloatVecInstance = v2f | v2h | v3f | v3h | v4f | v4h;\n\nexport type AnyIntegerVecInstance = v2i | v2u | v3i | v3u | v4i | v4u;\n\nexport type AnyBooleanVecInstance = v2b | v3b | v4b;\n\nexport type AnyNumericVec2Instance = v2f | v2h | v2i | v2u;\nexport type AnyNumericVec3Instance = v3f | v3h | v3i | v3u;\nexport type AnyNumericVec4Instance = v4f | v4h | v4i | v4u;\n\nexport type AnyNumericVecInstance =\n  | AnyNumericVec2Instance\n  | AnyNumericVec3Instance\n  | AnyNumericVec4Instance;\n\nexport type AnyVec2Instance = v2f | v2h | v2i | v2u | v2b;\nexport type AnyVec3Instance = v3f | v3h | v3i | v3u | v3b;\nexport type AnyVec4Instance = v4f | v4h | v4i | v4u | v4b;\n\nexport type AnyVecInstance =\n  | AnyVec2Instance\n  | AnyVec3Instance\n  | AnyVec4Instance;\n\nexport type VecKind = AnyVecInstance['kind'];\n\nexport interface matBase<TColumn> extends NumberArrayView {\n  readonly [$internal]: true;\n  readonly columns: readonly TColumn[];\n}\n\n/**\n * Interface representing its WGSL matrix type counterpart: mat2x2\n * A matrix with 2 rows and 2 columns, with elements of type `TColumn`\n */\nexport interface mat2x2<TColumn> extends matBase<TColumn> {\n  readonly length: 4;\n  readonly kind: string;\n  /* override */ readonly columns: readonly [TColumn, TColumn];\n  [n: number]: number;\n}\n\n/**\n * Interface representing its WGSL matrix type counterpart: mat2x2f or mat2x2<f32>\n * A matrix with 2 rows and 2 columns, with elements of type d.f32\n */\nexport interface m2x2f extends mat2x2<v2f> {\n  readonly kind: 'mat2x2f';\n}\n\n/**\n * Interface representing its WGSL matrix type counterpart: mat3x3\n * A matrix with 3 rows and 3 columns, with elements of type `TColumn`\n */\nexport interface mat3x3<TColumn> extends matBase<TColumn> {\n  readonly length: 12;\n  readonly kind: string;\n  /* override */ readonly columns: readonly [TColumn, TColumn, TColumn];\n  [n: number]: number;\n}\n\n/**\n * Interface representing its WGSL matrix type counterpart: mat3x3f or mat3x3<f32>\n * A matrix with 3 rows and 3 columns, with elements of type d.f32\n */\nexport interface m3x3f extends mat3x3<v3f> {\n  readonly kind: 'mat3x3f';\n}\n\n/**\n * Interface representing its WGSL matrix type counterpart: mat4x4\n * A matrix with 4 rows and 4 columns, with elements of type `TColumn`\n */\nexport interface mat4x4<TColumn> extends matBase<TColumn> {\n  readonly length: 16;\n  readonly kind: string;\n  /* override */ readonly columns: readonly [\n    TColumn,\n    TColumn,\n    TColumn,\n    TColumn,\n  ];\n  [n: number]: number;\n}\n\n/**\n * Interface representing its WGSL matrix type counterpart: mat4x4f or mat4x4<f32>\n * A matrix with 4 rows and 4 columns, with elements of type d.f32\n */\nexport interface m4x4f extends mat4x4<v4f> {\n  readonly kind: 'mat4x4f';\n}\n\nexport type AnyMatInstance = m2x2f | m3x3f | m4x4f;\n\nexport type vBaseForMat<T extends AnyMatInstance> = T extends m2x2f ? v2f\n  : T extends m3x3f ? v3f\n  : v4f;\n\nexport type mBaseForVec<T extends AnyVecInstance> = T extends v2f ? m2x2f\n  : T extends v3f ? m3x3f\n  : T extends v4f ? m4x4f\n  : never;\n\n// #endregion\n\n// #region WGSL Schema Types\n\n/**\n * Boolean schema representing a single WGSL bool value.\n * Cannot be used inside buffers as it is not host-shareable.\n */\nexport interface Bool {\n  readonly [$internal]: true;\n  readonly type: 'bool';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: boolean;\n  // ---\n\n  (v?: number | boolean): boolean;\n}\n\n/**\n * 32-bit float schema representing a single WGSL f32 value.\n */\nexport interface F32 {\n  readonly [$internal]: true;\n  readonly type: 'f32';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: number;\n  // ---\n\n  (v?: number | boolean): number;\n}\n\n/**\n * 16-bit float schema representing a single WGSL f16 value.\n */\nexport interface F16 {\n  readonly [$internal]: true;\n  readonly type: 'f16';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: number;\n  // ---\n\n  (v?: number | boolean): number;\n}\n\n/**\n * Signed 32-bit integer schema representing a single WGSL i32 value.\n */\nexport interface I32 {\n  readonly [$internal]: true;\n  readonly type: 'i32';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: number;\n  readonly [$memIdent]: I32 | Atomic<I32> | DecoratedLocation<I32>;\n  // ---\n\n  (v?: number | boolean): number;\n}\n\n/**\n * Unsigned 32-bit integer schema representing a single WGSL u32 value.\n */\nexport interface U32 {\n  readonly [$internal]: true;\n  readonly type: 'u32';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: number;\n  readonly [$memIdent]: U32 | Atomic<U32> | DecoratedLocation<U32>;\n  // ---\n\n  (v?: number | boolean): number;\n}\n\n/**\n * Unsigned 16-bit integer schema used exclusively for index buffer schemas.\n */\nexport interface U16 {\n  readonly [$internal]: true;\n  readonly type: 'u16';\n  readonly [$repr]: number;\n}\n\n/**\n * Type of the `d.vec2f` object/function: vector data type schema/constructor\n */\nexport interface Vec2f {\n  readonly [$internal]: true;\n  readonly type: 'vec2f';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: v2f;\n  // ---\n\n  (x: number, y: number): v2f;\n  (xy: number): v2f;\n  (): v2f;\n  (v: AnyNumericVec2Instance): v2f;\n}\n\n/**\n * Type of the `d.vec2h` object/function: vector data type schema/constructor\n */\nexport interface Vec2h {\n  readonly [$internal]: true;\n  readonly type: 'vec2h';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: v2h;\n  // ---\n\n  (x: number, y: number): v2h;\n  (xy: number): v2h;\n  (): v2h;\n  (v: AnyNumericVec2Instance): v2h;\n}\n\n/**\n * Type of the `d.vec2i` object/function: vector data type schema/constructor\n */\nexport interface Vec2i {\n  readonly [$internal]: true;\n  readonly type: 'vec2i';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: v2i;\n  // ---\n\n  (x: number, y: number): v2i;\n  (xy: number): v2i;\n  (): v2i;\n  (v: AnyNumericVec2Instance): v2i;\n}\n\n/**\n * Type of the `d.vec2u` object/function: vector data type schema/constructor\n */\nexport interface Vec2u {\n  readonly [$internal]: true;\n  readonly type: 'vec2u';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: v2u;\n  // ---\n\n  (x: number, y: number): v2u;\n  (xy: number): v2u;\n  (): v2u;\n  (v: AnyNumericVec2Instance): v2u;\n}\n\n/**\n * Type of the `d.vec2b` object/function: vector data type schema/constructor\n * Cannot be used inside buffers as it is not host-shareable.\n */\nexport interface Vec2b {\n  readonly [$internal]: true;\n  readonly type: 'vec2<bool>';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: v2b;\n  // ---\n\n  (x: boolean, y: boolean): v2b;\n  (xy: boolean): v2b;\n  (): v2b;\n  (v: v2b): v2b;\n}\n\n/**\n * Type of the `d.vec3f` object/function: vector data type schema/constructor\n */\nexport interface Vec3f {\n  readonly [$internal]: true;\n  readonly type: 'vec3f';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: v3f;\n  // ---\n\n  (x: number, y: number, z: number): v3f;\n  (xyz: number): v3f;\n  (): v3f;\n  (v: AnyNumericVec3Instance): v3f;\n  (v0: AnyNumericVec2Instance, z: number): v3f;\n  (x: number, v0: AnyNumericVec2Instance): v3f;\n}\n\n/**\n * Type of the `d.vec3h` object/function: vector data type schema/constructor\n */\nexport interface Vec3h {\n  readonly [$internal]: true;\n  readonly type: 'vec3h';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: v3h;\n  // ---\n\n  (x: number, y: number, z: number): v3h;\n  (xyz: number): v3h;\n  (): v3h;\n  (v: AnyNumericVec3Instance): v3h;\n  (v0: AnyNumericVec2Instance, z: number): v3h;\n  (x: number, v0: AnyNumericVec2Instance): v3h;\n}\n\n/**\n * Type of the `d.vec3i` object/function: vector data type schema/constructor\n */\nexport interface Vec3i {\n  readonly [$internal]: true;\n  readonly type: 'vec3i';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: v3i;\n  // ---\n\n  (x: number, y: number, z: number): v3i;\n  (xyz: number): v3i;\n  (): v3i;\n  (v: AnyNumericVec3Instance): v3i;\n  (v0: AnyNumericVec2Instance, z: number): v3i;\n  (x: number, v0: AnyNumericVec2Instance): v3i;\n}\n\n/**\n * Type of the `d.vec3u` object/function: vector data type schema/constructor\n */\nexport interface Vec3u {\n  readonly [$internal]: true;\n  readonly type: 'vec3u';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: v3u;\n  // ---\n\n  (x: number, y: number, z: number): v3u;\n  (xyz: number): v3u;\n  (): v3u;\n  (v: AnyNumericVec3Instance): v3u;\n  (v0: AnyNumericVec2Instance, z: number): v3u;\n  (x: number, v0: AnyNumericVec2Instance): v3u;\n}\n\n/**\n * Type of the `d.vec3b` object/function: vector data type schema/constructor\n * Cannot be used inside buffers as it is not host-shareable.\n */\nexport interface Vec3b {\n  readonly [$internal]: true;\n  readonly type: 'vec3<bool>';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: v3b;\n  // ---\n\n  (x: boolean, y: boolean, z: boolean): v3b;\n  (xyz: boolean): v3b;\n  (): v3b;\n  (v: v3b): v3b;\n  (v0: v2b, z: boolean): v3b;\n  (x: boolean, v0: v2b): v3b;\n}\n\n/**\n * Type of the `d.vec4f` object/function: vector data type schema/constructor\n */\nexport interface Vec4f {\n  readonly [$internal]: true;\n  readonly type: 'vec4f';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: v4f;\n  // ---\n\n  (x: number, y: number, z: number, w: number): v4f;\n  (xyzw: number): v4f;\n  (): v4f;\n  (v: AnyNumericVec4Instance): v4f;\n  (v0: AnyNumericVec3Instance, w: number): v4f;\n  (x: number, v0: AnyNumericVec3Instance): v4f;\n  (v0: AnyNumericVec2Instance, v1: AnyNumericVec2Instance): v4f;\n  (v0: AnyNumericVec2Instance, z: number, w: number): v4f;\n  (x: number, v0: AnyNumericVec2Instance, z: number): v4f;\n  (x: number, y: number, v0: AnyNumericVec2Instance): v4f;\n}\n\n/**\n * Type of the `d.vec4h` object/function: vector data type schema/constructor\n */\nexport interface Vec4h {\n  readonly [$internal]: true;\n  readonly type: 'vec4h';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: v4h;\n  // ---\n\n  (x: number, y: number, z: number, w: number): v4h;\n  (xyzw: number): v4h;\n  (): v4h;\n  (v: AnyNumericVec4Instance): v4h;\n  (v0: AnyNumericVec3Instance, w: number): v4h;\n  (x: number, v0: AnyNumericVec3Instance): v4h;\n  (v0: AnyNumericVec2Instance, v1: AnyNumericVec2Instance): v4h;\n  (v0: AnyNumericVec2Instance, z: number, w: number): v4h;\n  (x: number, v0: AnyNumericVec2Instance, z: number): v4h;\n  (x: number, y: number, v0: AnyNumericVec2Instance): v4h;\n}\n\n/**\n * Type of the `d.vec4i` object/function: vector data type schema/constructor\n */\nexport interface Vec4i {\n  readonly [$internal]: true;\n  readonly type: 'vec4i';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: v4i;\n  // ---\n\n  (x: number, y: number, z: number, w: number): v4i;\n  (xyzw: number): v4i;\n  (): v4i;\n  (v: AnyNumericVec4Instance): v4i;\n  (v0: AnyNumericVec3Instance, w: number): v4i;\n  (x: number, v0: AnyNumericVec3Instance): v4i;\n  (v0: AnyNumericVec2Instance, v1: AnyNumericVec2Instance): v4i;\n  (v0: AnyNumericVec2Instance, z: number, w: number): v4i;\n  (x: number, v0: AnyNumericVec2Instance, z: number): v4i;\n  (x: number, y: number, v0: AnyNumericVec2Instance): v4i;\n}\n\n/**\n * Type of the `d.vec4u` object/function: vector data type schema/constructor\n */\nexport interface Vec4u {\n  readonly [$internal]: true;\n  readonly type: 'vec4u';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: v4u;\n  // ---\n\n  (x: number, y: number, z: number, w: number): v4u;\n  (xyzw: number): v4u;\n  (): v4u;\n  (v: AnyNumericVec4Instance): v4u;\n  (v0: AnyNumericVec3Instance, w: number): v4u;\n  (x: number, v0: AnyNumericVec3Instance): v4u;\n  (v0: AnyNumericVec2Instance, v1: AnyNumericVec2Instance): v4u;\n  (v0: AnyNumericVec2Instance, z: number, w: number): v4u;\n  (x: number, v0: AnyNumericVec2Instance, z: number): v4u;\n  (x: number, y: number, v0: AnyNumericVec2Instance): v4u;\n}\n\n/**\n * Type of the `d.vec4b` object/function: vector data type schema/constructor\n * Cannot be used inside buffers as it is not host-shareable.\n */\nexport interface Vec4b {\n  readonly [$internal]: true;\n  readonly type: 'vec4<bool>';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: v4b;\n  // ---\n\n  (x: boolean, y: boolean, z: boolean, w: boolean): v4b;\n  (xyzw: boolean): v4b;\n  (): v4b;\n  (v: v4b): v4b;\n  (v0: v3b, w: boolean): v4b;\n  (x: boolean, v0: v3b): v4b;\n  (v0: v2b, v1: v2b): v4b;\n  (v0: v2b, z: boolean, w: boolean): v4b;\n  (x: boolean, v0: v2b, z: boolean): v4b;\n  (x: boolean, y: boolean, v0: v2b): v4b;\n}\n\n/**\n * Type of the `d.mat2x2f` object/function: matrix data type schema/constructor\n */\nexport interface Mat2x2f {\n  readonly [$internal]: true;\n  readonly type: 'mat2x2f';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: m2x2f;\n  // ---\n\n  (...elements: [number, number, number, number]): m2x2f;\n  (...columns: [v2f, v2f]): m2x2f;\n  (): m2x2f;\n  identity(): m2x2f;\n}\n\n/**\n * Type of the `d.mat3x3f` object/function: matrix data type schema/constructor\n */\nexport interface Mat3x3f {\n  readonly [$internal]: true;\n  readonly type: 'mat3x3f';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: m3x3f;\n  // ---\n\n  // deno-fmt-ignore\n  (...elements: [number, number, number, number, number, number, number, number, number]): m3x3f;\n  (...columns: [v3f, v3f, v3f]): m3x3f;\n  (): m3x3f;\n  identity(): m3x3f;\n}\n\n/**\n * Type of the `d.mat4x4f` object/function: matrix data type schema/constructor\n */\nexport interface Mat4x4f {\n  readonly [$internal]: true;\n  readonly type: 'mat4x4f';\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: m4x4f;\n  // ---\n\n  // deno-fmt-ignore\n  (...elements: [number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]): m4x4f;\n  (...columns: [v4f, v4f, v4f, v4f]): m4x4f;\n  (): m4x4f;\n  identity(): m4x4f;\n  translation(vec: v3f): m4x4f;\n  scaling(vec: v3f): m4x4f;\n  rotationX(angle: number): m4x4f;\n  rotationY(angle: number): m4x4f;\n  rotationZ(angle: number): m4x4f;\n}\n\n/**\n * Array schema constructed via `d.arrayOf` function.\n *\n * Responsible for handling reading and writing array values\n * between binary and JS representation. Takes into account\n * the `byteAlignment` requirement of its elementType.\n */\nexport interface WgslArray<TElement extends BaseData = BaseData> {\n  readonly [$internal]: true;\n  readonly type: 'array';\n  readonly elementCount: number;\n  readonly elementType: TElement;\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: Infer<TElement>[];\n  readonly [$gpuRepr]: InferGPU<TElement>[];\n  readonly [$reprPartial]:\n    | { idx: number; value: InferPartial<TElement> }[]\n    | undefined;\n  readonly [$memIdent]: WgslArray<MemIdentity<TElement>>;\n  // ---\n}\n\n/**\n * Struct schema constructed via `d.struct` function.\n *\n * Responsible for handling reading and writing struct values\n * between binary and JS representation. Takes into account\n * the `byteAlignment` requirement of its members.\n */\nexport interface WgslStruct<\n  TProps extends Record<string, BaseData> = Record<string, BaseData>,\n> extends TgpuNamable {\n  (props: Prettify<InferRecord<TProps>>): Prettify<InferRecord<TProps>>;\n  readonly [$internal]: true;\n  readonly type: 'struct';\n  readonly propTypes: TProps;\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: Prettify<InferRecord<TProps>>;\n  readonly [$gpuRepr]: Prettify<InferGPURecord<TProps>>;\n  readonly [$memIdent]: WgslStruct<Prettify<MemIdentityRecord<TProps>>>;\n  readonly [$reprPartial]:\n    | Prettify<Partial<InferPartialRecord<TProps>>>\n    | undefined;\n  // ---\n}\n\n// biome-ignore lint/suspicious/noExplicitAny: <we need the type to be broader than WgslStruct<Record<string, BaseWgslData>>\nexport type AnyWgslStruct = WgslStruct<any>;\n\nexport type AddressSpace =\n  | 'uniform'\n  | 'storage'\n  | 'workgroup'\n  | 'private'\n  | 'function'\n  | 'handle';\nexport type Access = 'read' | 'write' | 'read-write';\n\nexport interface Ptr<\n  TAddr extends AddressSpace = AddressSpace,\n  TInner extends BaseData = BaseData, // can also be sampler or texture (╯'□')╯︵ ┻━┻\n  TAccess extends Access = Access,\n> {\n  readonly [$internal]: true;\n  readonly type: 'ptr';\n  readonly inner: TInner;\n  readonly addressSpace: TAddr;\n  readonly access: TAccess;\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: Infer<TInner>;\n  // ---\n}\n\n/**\n * Schema representing the `atomic<...>` WGSL data type.\n */\nexport interface Atomic<TInner extends U32 | I32 = U32 | I32> {\n  readonly [$internal]: true;\n  readonly type: 'atomic';\n  readonly inner: TInner;\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: Infer<TInner>;\n  readonly [$gpuRepr]: TInner extends U32 ? atomicU32 : atomicI32;\n  readonly [$memIdent]: MemIdentity<TInner>;\n  // ---\n}\n\nexport interface atomicU32 {\n  readonly [$internal]: true;\n  readonly type: 'atomicU32';\n}\n\nexport interface atomicI32 {\n  readonly [$internal]: true;\n  readonly type: 'atomicI32';\n}\n\nexport interface Align<T extends number> {\n  readonly [$internal]: true;\n  readonly type: '@align';\n  readonly value: T;\n}\n\nexport interface Size<T extends number> {\n  readonly [$internal]: true;\n  readonly type: '@size';\n  readonly value: T;\n}\n\nexport interface Location<T extends number = number> {\n  readonly [$internal]: true;\n  readonly type: '@location';\n  readonly value: T;\n}\n\nexport type PerspectiveOrLinearInterpolationType = `${\n  | 'perspective'\n  | 'linear'}${'' | ', center' | ', centroid' | ', sample'}`;\nexport type FlatInterpolationType = `flat${'' | ', first' | ', either'}`;\nexport type InterpolationType =\n  | PerspectiveOrLinearInterpolationType\n  | FlatInterpolationType;\n\nexport interface Interpolate<T extends InterpolationType = InterpolationType> {\n  readonly [$internal]: true;\n  readonly type: '@interpolate';\n  readonly value: T;\n}\n\nexport interface Builtin<T extends string> {\n  readonly [$internal]: true;\n  readonly type: '@builtin';\n  readonly value: T;\n}\n\nexport interface Decorated<\n  TInner extends BaseData = BaseData,\n  TAttribs extends unknown[] = unknown[],\n> {\n  readonly [$internal]: true;\n  readonly type: 'decorated';\n  readonly inner: TInner;\n  readonly attribs: TAttribs;\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: Infer<TInner>;\n  readonly [$gpuRepr]: InferGPU<TInner>;\n  readonly [$reprPartial]: InferPartial<TInner>;\n  readonly [$memIdent]: TAttribs extends Location[]\n    ? MemIdentity<TInner> | Decorated<MemIdentity<TInner>, TAttribs>\n    : Decorated<MemIdentity<TInner>, TAttribs>;\n  // ---\n}\n\nexport const wgslTypeLiterals = [\n  'bool',\n  'f32',\n  'f16',\n  'i32',\n  'u32',\n  'u16',\n  'vec2f',\n  'vec2h',\n  'vec2i',\n  'vec2u',\n  'vec2<bool>',\n  'vec3f',\n  'vec3h',\n  'vec3i',\n  'vec3u',\n  'vec3<bool>',\n  'vec4f',\n  'vec4h',\n  'vec4i',\n  'vec4u',\n  'vec4<bool>',\n  'mat2x2f',\n  'mat3x3f',\n  'mat4x4f',\n  'struct',\n  'array',\n  'ptr',\n  'atomic',\n  'decorated',\n  'abstractInt',\n  'abstractFloat',\n  'void',\n] as const;\n\nexport type WgslTypeLiteral = (typeof wgslTypeLiterals)[number];\n\nexport type PerspectiveOrLinearInterpolatableBaseType =\n  | F32\n  | F16\n  | Vec2f\n  | Vec2h\n  | Vec3f\n  | Vec3h\n  | Vec4f\n  | Vec4h;\n\nexport type PerspectiveOrLinearInterpolatableData =\n  | PerspectiveOrLinearInterpolatableBaseType\n  | Decorated<PerspectiveOrLinearInterpolatableBaseType>;\n\nexport type FlatInterpolatableAdditionalBaseType =\n  | I32\n  | U32\n  | Vec2i\n  | Vec2u\n  | Vec3i\n  | Vec3u\n  | Vec4i\n  | Vec4u;\n\nexport type FlatInterpolatableData =\n  | PerspectiveOrLinearInterpolatableData\n  | FlatInterpolatableAdditionalBaseType\n  | Decorated<FlatInterpolatableAdditionalBaseType>;\n\nexport type ScalarData =\n  | Bool\n  | F32\n  | F16\n  | I32\n  | U32\n  | AbstractInt\n  | AbstractFloat;\n\nexport type AnyWgslData =\n  | Bool\n  | F32\n  | F16\n  | I32\n  | U32\n  | U16\n  | Vec2f\n  | Vec2h\n  | Vec2i\n  | Vec2u\n  | Vec2b\n  | Vec3f\n  | Vec3h\n  | Vec3i\n  | Vec3u\n  | Vec3b\n  | Vec4f\n  | Vec4h\n  | Vec4i\n  | Vec4u\n  | Vec4b\n  | Mat2x2f\n  | Mat3x3f\n  | Mat4x4f\n  | AnyWgslStruct\n  | WgslArray\n  | Ptr\n  | Atomic<U32>\n  | Atomic<I32>\n  | Decorated\n  | AbstractInt\n  | AbstractFloat\n  | Void;\n\n// #endregion\n\nexport function isVecInstance(value: unknown): value is AnyVecInstance {\n  const v = value as AnyVecInstance | undefined;\n  return !!v?.[$internal] &&\n    typeof v.kind?.startsWith === 'function' &&\n    v.kind.startsWith('vec');\n}\n\nexport function isVec2(value: unknown): value is Vec2f | Vec2h | Vec2i | Vec2u {\n  const v = value as AnyWgslData | undefined;\n  return !!v?.[$internal] &&\n    typeof v.type?.startsWith === 'function' &&\n    v.type.startsWith?.('vec2');\n}\n\nexport function isVec3(value: unknown): value is Vec3f | Vec3h | Vec3i | Vec3u {\n  const v = value as AnyWgslData | undefined;\n  return !!v?.[$internal] &&\n    typeof v.type?.startsWith === 'function' &&\n    v.type.startsWith('vec3');\n}\n\nexport function isVec4(value: unknown): value is Vec4f | Vec4h | Vec4i | Vec4u {\n  const v = value as AnyWgslData | undefined;\n  return !!v?.[$internal] &&\n    typeof v.type?.startsWith === 'function' &&\n    v.type.startsWith('vec4');\n}\n\nexport function isVec(\n  value: unknown,\n): value is\n  | Vec2f\n  | Vec2h\n  | Vec2i\n  | Vec2u\n  | Vec3f\n  | Vec3h\n  | Vec3i\n  | Vec3u\n  | Vec4f\n  | Vec4h\n  | Vec4i\n  | Vec4u {\n  return isVec2(value) || isVec3(value) || isVec4(value);\n}\n\nexport function isMatInstance(value: unknown): value is AnyMatInstance {\n  const v = value as AnyMatInstance | undefined;\n  return !!v?.[$internal] &&\n    typeof v.kind?.startsWith === 'function' &&\n    v.kind.startsWith('mat');\n}\n\nexport function isMat2x2f(value: unknown): value is Mat2x2f {\n  return (\n    (value as AnyWgslData)?.[$internal] &&\n    (value as AnyWgslData)?.type === 'mat2x2f'\n  );\n}\n\nexport function isMat3x3f(value: unknown): value is Mat3x3f {\n  return (\n    (value as AnyWgslData)?.[$internal] &&\n    (value as AnyWgslData)?.type === 'mat3x3f'\n  );\n}\n\nexport function isMat4x4f(value: unknown): value is Mat4x4f {\n  return (\n    (value as AnyWgslData)?.[$internal] &&\n    (value as AnyWgslData)?.type === 'mat4x4f'\n  );\n}\n\nexport function isMat(value: unknown): value is Mat2x2f | Mat3x3f | Mat4x4f {\n  return isMat2x2f(value) || isMat3x3f(value) || isMat4x4f(value);\n}\n\nexport function isFloat32VecInstance(\n  element: number | AnyVecInstance | AnyMatInstance,\n): element is AnyFloat32VecInstance {\n  return isVecInstance(element) &&\n    ['vec2f', 'vec3f', 'vec4f'].includes(element.kind);\n}\n\nexport function isWgslData(value: unknown): value is AnyWgslData {\n  return (\n    (value as AnyWgslData)?.[$internal] &&\n    wgslTypeLiterals.includes((value as AnyWgslData)?.type)\n  );\n}\n\n/**\n * Checks whether passed in value is an array schema,\n * as opposed to, e.g., a disarray schema.\n *\n * Array schemas can be used to describe uniform and storage buffers,\n * whereas disarray schemas cannot.\n *\n * @example\n * isWgslArray(d.arrayOf(d.u32, 4)) // true\n * isWgslArray(d.disarray(d.u32, 4)) // false\n * isWgslArray(d.vec3f) // false\n */\nexport function isWgslArray<T extends WgslArray>(\n  schema: T | unknown,\n): schema is T {\n  return (schema as T)?.[$internal] && (schema as T)?.type === 'array';\n}\n\n/**\n * Checks whether passed in value is a struct schema,\n * as opposed to, e.g., an unstruct schema.\n *\n * Struct schemas can be used to describe uniform and storage buffers,\n * whereas unstruct schemas cannot.\n *\n * @example\n * isWgslStruct(d.struct({ a: d.u32 })) // true\n * isWgslStruct(d.unstruct({ a: d.u32 })) // false\n * isWgslStruct(d.vec3f) // false\n */\nexport function isWgslStruct<T extends WgslStruct>(\n  schema: T | unknown,\n): schema is T {\n  return (schema as T)?.[$internal] && (schema as T)?.type === 'struct';\n}\n\n/**\n * Checks whether passed in value is a pointer ('function' scope) schema.\n *\n * @example\n * isPtrFn(d.ptrFn(d.f32)) // true\n * isPtrFn(d.f32) // false\n */\nexport function isPtr<T extends Ptr>(schema: T | unknown): schema is T {\n  return (schema as T)?.[$internal] && (schema as T)?.type === 'ptr';\n}\n\n/**\n * Checks whether the passed in value is an atomic schema.\n *\n * @example\n * isAtomic(d.atomic(d.u32)) // true\n * isAtomic(d.u32) // false\n */\nexport function isAtomic<T extends Atomic<U32 | I32>>(\n  schema: T | unknown,\n): schema is T {\n  return (schema as T)?.[$internal] && (schema as T)?.type === 'atomic';\n}\n\nexport function isAlignAttrib<T extends Align<number>>(\n  value: unknown | T,\n): value is T {\n  return (value as T)?.[$internal] && (value as T)?.type === '@align';\n}\n\nexport function isSizeAttrib<T extends Size<number>>(\n  value: unknown | T,\n): value is T {\n  return (value as T)?.[$internal] && (value as T)?.type === '@size';\n}\n\nexport function isLocationAttrib<T extends Location<number>>(\n  value: unknown | T,\n): value is T {\n  return (value as T)?.[$internal] && (value as T)?.type === '@location';\n}\n\nexport function isInterpolateAttrib<T extends Interpolate<InterpolationType>>(\n  value: unknown | T,\n): value is T {\n  return (value as T)?.[$internal] && (value as T)?.type === '@interpolate';\n}\n\nexport function isBuiltinAttrib<T extends Builtin<string>>(\n  value: unknown | T,\n): value is T {\n  return (value as T)?.[$internal] && (value as T)?.type === '@builtin';\n}\n\nexport function isDecorated<T extends Decorated>(\n  value: unknown | T,\n): value is T {\n  return (value as T)?.[$internal] && (value as T)?.type === 'decorated';\n}\n\nexport function isAbstractFloat(value: unknown): value is AbstractFloat {\n  return (\n    (value as AbstractFloat)?.[$internal] &&\n    (value as AbstractFloat).type === 'abstractFloat'\n  );\n}\n\nexport function isAbstractInt(value: unknown): value is AbstractInt {\n  return (\n    (value as AbstractInt)?.[$internal] &&\n    (value as AbstractInt).type === 'abstractInt'\n  );\n}\n\nexport function isVoid(value: unknown): value is Void {\n  return (value as Void)?.[$internal] && (value as Void).type === 'void';\n}\n","export const vertexFormats = [\n  'uint8',\n  'uint8x2',\n  'uint8x4',\n  'sint8',\n  'sint8x2',\n  'sint8x4',\n  'unorm8',\n  'unorm8x2',\n  'unorm8x4',\n  'snorm8',\n  'snorm8x2',\n  'snorm8x4',\n  'uint16',\n  'uint16x2',\n  'uint16x4',\n  'sint16',\n  'sint16x2',\n  'sint16x4',\n  'unorm16',\n  'unorm16x2',\n  'unorm16x4',\n  'snorm16',\n  'snorm16x2',\n  'snorm16x4',\n  'float16',\n  'float16x2',\n  'float16x4',\n  'float32',\n  'float32x2',\n  'float32x3',\n  'float32x4',\n  'uint32',\n  'uint32x2',\n  'uint32x3',\n  'uint32x4',\n  'sint32',\n  'sint32x2',\n  'sint32x3',\n  'sint32x4',\n  'unorm10-10-10-2',\n  'unorm8x4-bgra',\n] as const;\n\nexport type VertexFormat = (typeof vertexFormats)[number];\n\nexport const kindToDefaultFormatMap = {\n  f32: 'float32',\n  vec2f: 'float32x2',\n  vec3f: 'float32x3',\n  vec4f: 'float32x4',\n  f16: 'float16',\n  vec2h: 'float16x2',\n  // vec3h has no direct equivalent in the spec\n  vec4h: 'float16x4',\n  u32: 'uint32',\n  vec2u: 'uint32x2',\n  vec3u: 'uint32x3',\n  vec4u: 'uint32x4',\n  i32: 'sint32',\n  vec2i: 'sint32x2',\n  vec3i: 'sint32x3',\n  vec4i: 'sint32x4',\n} as const;\n\nexport type KindToDefaultFormatMap = typeof kindToDefaultFormatMap;\n\nexport interface TgpuVertexAttrib<TFormat extends VertexFormat = VertexFormat> {\n  readonly format: TFormat;\n  readonly offset: number;\n}\n\nexport type AnyVertexAttribs =\n  | Record<string, TgpuVertexAttrib>\n  | TgpuVertexAttrib;\n\n/**\n * All vertex attribute formats that can be interpreted as\n * an single or multi component u32 in a shader.\n * https://www.w3.org/TR/webgpu/#vertex-formats\n */\ntype U32CompatibleFormats =\n  | TgpuVertexAttrib<'uint8'>\n  | TgpuVertexAttrib<'uint8x2'>\n  | TgpuVertexAttrib<'uint8x4'>\n  | TgpuVertexAttrib<'uint16'>\n  | TgpuVertexAttrib<'uint16x2'>\n  | TgpuVertexAttrib<'uint16x4'>\n  | TgpuVertexAttrib<'uint32'>\n  | TgpuVertexAttrib<'uint32x2'>\n  | TgpuVertexAttrib<'uint32x3'>\n  | TgpuVertexAttrib<'uint32x4'>;\n\n/**\n * All vertex attribute formats that can be interpreted as\n * an single or multi component i32 in a shader.\n * https://www.w3.org/TR/webgpu/#vertex-formats\n */\ntype I32CompatibleFormats =\n  | TgpuVertexAttrib<'sint8'>\n  | TgpuVertexAttrib<'sint8x2'>\n  | TgpuVertexAttrib<'sint8x4'>\n  | TgpuVertexAttrib<'sint16'>\n  | TgpuVertexAttrib<'sint16x2'>\n  | TgpuVertexAttrib<'sint16x4'>\n  | TgpuVertexAttrib<'sint32'>\n  | TgpuVertexAttrib<'sint32x2'>\n  | TgpuVertexAttrib<'sint32x3'>\n  | TgpuVertexAttrib<'sint32x4'>;\n\n/**\n * All vertex attribute formats that can be interpreted as\n * an single or multi component f32 in a shader.\n * https://www.w3.org/TR/webgpu/#vertex-formats\n */\ntype F32CompatibleFormats =\n  | TgpuVertexAttrib<'unorm8'>\n  | TgpuVertexAttrib<'unorm8x2'>\n  | TgpuVertexAttrib<'unorm8x4'>\n  | TgpuVertexAttrib<'snorm8'>\n  | TgpuVertexAttrib<'snorm8x2'>\n  | TgpuVertexAttrib<'snorm8x4'>\n  | TgpuVertexAttrib<'unorm16'>\n  | TgpuVertexAttrib<'unorm16x2'>\n  | TgpuVertexAttrib<'unorm16x4'>\n  | TgpuVertexAttrib<'snorm16'>\n  | TgpuVertexAttrib<'snorm16x2'>\n  | TgpuVertexAttrib<'snorm16x4'>\n  | TgpuVertexAttrib<'float16'>\n  | TgpuVertexAttrib<'float16x2'>\n  | TgpuVertexAttrib<'float16x4'>\n  | TgpuVertexAttrib<'float32'>\n  | TgpuVertexAttrib<'float32x2'>\n  | TgpuVertexAttrib<'float32x3'>\n  | TgpuVertexAttrib<'float32x4'>\n  | TgpuVertexAttrib<'unorm10-10-10-2'>\n  | TgpuVertexAttrib<'unorm8x4-bgra'>;\n\n/**\n * All vertex attribute formats that can be interpreted as\n * a single or multi component f16 in a shader. (same as f32 on the shader side)\n * https://www.w3.org/TR/webgpu/#vertex-formats\n */\ntype F16CompatibleFormats = F32CompatibleFormats;\n\nexport type KindToAcceptedAttribMap = {\n  u32: U32CompatibleFormats;\n  vec2u: U32CompatibleFormats;\n  vec3u: U32CompatibleFormats;\n  vec4u: U32CompatibleFormats;\n\n  i32: I32CompatibleFormats;\n  vec2i: I32CompatibleFormats;\n  vec3i: I32CompatibleFormats;\n  vec4i: I32CompatibleFormats;\n\n  f16: F16CompatibleFormats;\n  vec2h: F16CompatibleFormats;\n  vec3h: F16CompatibleFormats;\n  vec4h: F16CompatibleFormats;\n\n  f32: F32CompatibleFormats;\n  vec2f: F32CompatibleFormats;\n  vec3f: F32CompatibleFormats;\n  vec4f: F32CompatibleFormats;\n};\n","import type { TgpuNamable } from '../shared/meta.ts';\nimport type {\n  Infer,\n  InferGPURecord,\n  InferPartial,\n  InferPartialRecord,\n  InferRecord,\n  MemIdentityRecord,\n} from '../shared/repr.ts';\nimport { $internal } from '../shared/symbols.ts';\nimport type {\n  $gpuRepr,\n  $memIdent,\n  $repr,\n  $reprPartial,\n} from '../shared/symbols.ts';\nimport type { Prettify } from '../shared/utilityTypes.ts';\nimport { vertexFormats } from '../shared/vertexFormat.ts';\nimport type { FnArgsConversionHint } from '../types.ts';\nimport type { PackedData } from './vertexFormatData.ts';\nimport * as wgsl from './wgslTypes.ts';\n\nexport type TgpuDualFn<TImpl extends (...args: never[]) => unknown> =\n  & TImpl\n  & {\n    [$internal]: {\n      implementation: TImpl | string;\n      argTypes: FnArgsConversionHint;\n    };\n  };\n\n/**\n * Array schema constructed via `d.disarrayOf` function.\n *\n * Useful for defining vertex buffers.\n * Elements in the schema are not aligned in respect to their `byteAlignment`,\n * unless they are explicitly decorated with the custom align attribute\n * via `d.align` function.\n */\nexport interface Disarray<TElement extends wgsl.BaseData = wgsl.BaseData> {\n  readonly [$internal]: true;\n  readonly type: 'disarray';\n  readonly elementCount: number;\n  readonly elementType: TElement;\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: Infer<TElement>[];\n  readonly [$reprPartial]:\n    | { idx: number; value: InferPartial<TElement> }[]\n    | undefined;\n  // ---\n}\n\n/**\n * Struct schema constructed via `d.unstruct` function.\n *\n * Useful for defining vertex buffers, as the standard layout restrictions do not apply.\n * Members are not aligned in respect to their `byteAlignment`,\n * unless they are explicitly decorated with the custom align attribute\n * via `d.align` function.\n */\nexport interface Unstruct<\n  TProps extends Record<string, wgsl.BaseData> = Record<string, wgsl.BaseData>,\n> extends TgpuNamable {\n  readonly [$internal]: true;\n  (props: Prettify<InferRecord<TProps>>): Prettify<InferRecord<TProps>>;\n  readonly type: 'unstruct';\n  readonly propTypes: TProps;\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: Prettify<InferRecord<TProps>>;\n  readonly [$gpuRepr]: Prettify<InferGPURecord<TProps>>;\n  readonly [$memIdent]: Unstruct<Prettify<MemIdentityRecord<TProps>>>;\n  readonly [$reprPartial]:\n    | Prettify<Partial<InferPartialRecord<TProps>>>\n    | undefined;\n  // ---\n}\n\n// biome-ignore lint/suspicious/noExplicitAny: <we need the type to be broader than Unstruct<Record<string, BaseData>>\nexport type AnyUnstruct = Unstruct<any>;\n\nexport interface LooseDecorated<\n  TInner extends wgsl.BaseData = wgsl.BaseData,\n  TAttribs extends unknown[] = unknown[],\n> {\n  readonly [$internal]: true;\n  readonly type: 'loose-decorated';\n  readonly inner: TInner;\n  readonly attribs: TAttribs;\n\n  // Type-tokens, not available at runtime\n  readonly [$repr]: Infer<TInner>;\n  // ---\n}\n\nconst looseTypeLiterals = [\n  'unstruct',\n  'disarray',\n  'loose-decorated',\n  ...vertexFormats,\n] as const;\n\nexport type LooseTypeLiteral = (typeof looseTypeLiterals)[number];\n\nexport type AnyLooseData = Disarray | AnyUnstruct | LooseDecorated | PackedData;\n\nexport function isLooseData(data: unknown): data is AnyLooseData {\n  return (\n    (data as AnyLooseData)?.[$internal] &&\n    looseTypeLiterals.includes((data as AnyLooseData)?.type)\n  );\n}\n\n/**\n * Checks whether the passed in value is a disarray schema,\n * as opposed to, e.g., a regular array schema.\n *\n * Array schemas can be used to describe uniform and storage buffers,\n * whereas disarray schemas cannot. Disarrays are useful for\n * defining vertex buffers instead.\n *\n * @example\n * isDisarray(d.arrayOf(d.u32, 4)) // false\n * isDisarray(d.disarrayOf(d.u32, 4)) // true\n * isDisarray(d.vec3f) // false\n */\nexport function isDisarray<T extends Disarray>(\n  schema: T | unknown,\n): schema is T {\n  return (schema as T)?.[$internal] && (schema as T)?.type === 'disarray';\n}\n\n/**\n * Checks whether passed in value is a unstruct schema,\n * as opposed to, e.g., a struct schema.\n *\n * Struct schemas can be used to describe uniform and storage buffers,\n * whereas unstruct schemas cannot. Unstructs are useful for\n * defining vertex buffers instead.\n *\n * @example\n * isUnstruct(d.struct({ a: d.u32 })) // false\n * isUnstruct(d.unstruct({ a: d.u32 })) // true\n * isUnstruct(d.vec3f) // false\n */\nexport function isUnstruct<T extends Unstruct>(\n  schema: T | unknown,\n): schema is T {\n  return (schema as T)?.[$internal] && (schema as T)?.type === 'unstruct';\n}\n\nexport function isLooseDecorated<T extends LooseDecorated>(\n  value: T | unknown,\n): value is T {\n  return (value as T)?.[$internal] && (value as T)?.type === 'loose-decorated';\n}\n\nexport function getCustomAlignment(data: wgsl.BaseData): number | undefined {\n  return (data as unknown as wgsl.Decorated | LooseDecorated).attribs?.find(\n    wgsl.isAlignAttrib,\n  )?.value;\n}\n\nexport function getCustomSize(data: wgsl.BaseData): number | undefined {\n  return (data as unknown as wgsl.Decorated | LooseDecorated).attribs?.find(\n    wgsl.isSizeAttrib,\n  )?.value;\n}\n\nexport function getCustomLocation(data: wgsl.BaseData): number | undefined {\n  return (data as unknown as wgsl.Decorated | LooseDecorated).attribs?.find(\n    wgsl.isLocationAttrib,\n  )?.value;\n}\n\nexport function isData(value: unknown): value is AnyData {\n  return wgsl.isWgslData(value) || isLooseData(value);\n}\n\nexport type AnyData = wgsl.AnyWgslData | AnyLooseData;\nexport type AnyConcreteData = Exclude<\n  AnyData,\n  wgsl.AbstractInt | wgsl.AbstractFloat | wgsl.Void\n>;\n\nexport interface UnknownData {\n  readonly type: 'unknown';\n}\n\nexport const UnknownData = {\n  type: 'unknown' as const,\n  toString() {\n    return 'unknown';\n  },\n} as UnknownData;\n\nexport interface Snippet {\n  readonly value: unknown;\n  readonly dataType: AnyData | UnknownData;\n}\n\nclass SnippetImpl implements Snippet {\n  constructor(\n    readonly value: unknown,\n    readonly dataType: AnyData | UnknownData,\n  ) {}\n}\n\nexport function snip(value: unknown, dataType: AnyData | UnknownData): Snippet {\n  return new SnippetImpl(\n    value,\n    // We don't care about attributes in snippet land, so we discard that information.\n    dataType.type === 'decorated' || dataType.type === 'loose-decorated'\n      ? dataType.inner as AnyData\n      : dataType,\n  );\n}\n\nexport function isSnippet(value: unknown): value is Snippet {\n  return value instanceof SnippetImpl;\n}\n\nexport type UnwrapDecorated<TData extends wgsl.BaseData> = TData extends {\n  readonly type: 'decorated';\n  readonly inner: infer TInner;\n} ? TInner extends wgsl.BaseData ? UnwrapDecorated<TInner>\n  : TData\n  : TData;\n\nexport type HasNestedType<TData extends [wgsl.BaseData], TType extends string> =\n  UnwrapDecorated<TData[0]> extends { readonly type: TType } ? true\n    : UnwrapDecorated<TData[0]> extends {\n      readonly type: 'array';\n      readonly elementType: infer TElement;\n    }\n      ? TElement extends wgsl.BaseData\n        ? UnwrapDecorated<TElement> extends { readonly type: TType } ? true\n        : HasNestedType<[TElement], TType>\n      : false\n    : UnwrapDecorated<TData[0]> extends\n      { readonly type: 'struct'; readonly propTypes: infer TProps }\n      ? TProps extends Record<string, wgsl.BaseData> ? true extends {\n          [K in keyof TProps]: UnwrapDecorated<TProps[K]> extends\n            { readonly type: TType } ? true\n            : HasNestedType<[TProps[K]], TType>;\n        }[keyof TProps] ? true\n        : false\n      : false\n    : false;\n","import { invariant } from './errors.ts';\nimport type { ResolutionCtx } from './types.ts';\n\nlet resolutionCtx: ResolutionCtx | null = null;\n\nconst CPUMode = Symbol('CPU');\nconst GPUMode = Symbol('GPU');\n\nexport const RuntimeMode = {\n  CPU: CPUMode,\n  GPU: GPUMode,\n} as const;\n\nconst resolutionModeStack: (typeof CPUMode | typeof GPUMode)[] = [];\n\nexport function provideCtx<T>(ctx: ResolutionCtx, callback: () => T): T {\n  invariant(resolutionCtx === null, 'Cannot nest context providers');\n\n  resolutionCtx = ctx;\n  try {\n    return callback();\n  } finally {\n    resolutionCtx = null;\n  }\n}\n\nexport function getResolutionCtx(): ResolutionCtx | null {\n  return resolutionCtx;\n}\n\nexport function pushMode(mode: typeof CPUMode | typeof GPUMode) {\n  resolutionModeStack.push(mode);\n}\n\nexport function popMode(expected?: typeof CPUMode | typeof GPUMode) {\n  const mode = resolutionModeStack.pop();\n  if (expected !== undefined) {\n    invariant(mode === expected, 'Unexpected mode');\n  }\n}\n\nexport const inGPUMode = () =>\n  resolutionModeStack.length > 0 &&\n  resolutionModeStack[resolutionModeStack.length - 1] === RuntimeMode.GPU;\n","import type { Snippet, TgpuDualFn } from '../data/dataTypes.ts';\nimport { inGPUMode } from '../gpuMode.ts';\nimport type { FnArgsConversionHint } from '../types.ts';\nimport { $internal } from './symbols.ts';\nimport { setName } from './meta.ts';\n\n/**\n * Yields values in the sequence 0,1,2..∞ except for the ones in the `excluded` set.\n */\nexport function* naturalsExcept(\n  excluded: Set<number>,\n): Generator<number, number, unknown> {\n  let next = 0;\n\n  while (true) {\n    if (!excluded.has(next)) {\n      yield next;\n    }\n\n    next++;\n  }\n}\n\ntype MapValueToSnippet<T> = { [K in keyof T]: Snippet };\n\nexport function createDualImpl<T extends (...args: never[]) => unknown>(\n  jsImpl: T,\n  gpuImpl: (...args: MapValueToSnippet<Parameters<T>>) => Snippet,\n  name: string,\n  argTypes?: FnArgsConversionHint,\n): TgpuDualFn<T> {\n  const impl = ((...args: Parameters<T>) => {\n    if (inGPUMode()) {\n      return gpuImpl(...(args as MapValueToSnippet<Parameters<T>>)) as Snippet;\n    }\n    return jsImpl(...args);\n  }) as T;\n\n  (impl as TgpuDualFn<T>)[$internal] = {\n    implementation: jsImpl,\n    argTypes,\n  };\n\n  setName(impl, name);\n\n  return impl as TgpuDualFn<T>;\n}\n","import { createDualImpl } from '../shared/generators.ts';\nimport { $internal } from '../shared/symbols.ts';\nimport { snip } from './dataTypes.ts';\nimport type {\n  AbstractFloat,\n  AbstractInt,\n  Bool,\n  F16,\n  F32,\n  I32,\n  U16,\n  U32,\n} from './wgslTypes.ts';\n\nexport const abstractInt = {\n  [$internal]: true,\n  type: 'abstractInt',\n} as AbstractInt;\n\nexport const abstractFloat = {\n  [$internal]: true,\n  type: 'abstractFloat',\n} as AbstractFloat;\n\nconst boolCast = createDualImpl(\n  // CPU implementation\n  (v?: number | boolean) => {\n    if (v === undefined) {\n      return false;\n    }\n    if (typeof v === 'boolean') {\n      return v;\n    }\n    return !!v;\n  },\n  // GPU implementation\n  (v) => snip(`bool(${v?.value ?? ''})`, bool),\n  'boolCast',\n);\n\n/**\n * A schema that represents a boolean value. (equivalent to `bool` in WGSL)\n *\n * Can also be called to cast a value to a bool in accordance with WGSL casting rules.\n *\n * @example\n * const value = bool(); // false\n * @example\n * const value = bool(0); // false\n * @example\n * const value = bool(-0); // false\n * @example\n * const value = bool(21.37); // true\n */\nexport const bool: Bool = Object.assign(boolCast, {\n  type: 'bool',\n}) as unknown as Bool;\n\nconst u32Cast = createDualImpl(\n  // CPU implementation\n  (v?: number | boolean) => {\n    if (v === undefined) {\n      return 0;\n    }\n    if (typeof v === 'boolean') {\n      return v ? 1 : 0;\n    }\n    return (v & 0xffffffff) >>> 0;\n  },\n  // GPU implementation\n  (v) => snip(`u32(${v?.value ?? ''})`, u32),\n  'u32Cast',\n);\n\n/**\n * A schema that represents an unsigned 32-bit integer value. (equivalent to `u32` in WGSL)\n *\n * Can also be called to cast a value to an u32 in accordance with WGSL casting rules.\n *\n * @example\n * const value = u32(); // 0\n * @example\n * const value = u32(7); // 7\n * @example\n * const value = u32(3.14); // 3\n * @example\n * const value = u32(-1); // 4294967295\n * @example\n * const value = u32(-3.1); // 0\n */\nexport const u32: U32 = Object.assign(u32Cast, {\n  type: 'u32',\n}) as unknown as U32;\n\nconst i32Cast = createDualImpl(\n  // CPU implementation\n  (v?: number | boolean) => {\n    if (v === undefined) {\n      return 0;\n    }\n    if (typeof v === 'boolean') {\n      return v ? 1 : 0;\n    }\n    return v | 0;\n  },\n  // GPU implementation\n  (v) => snip(`i32(${v?.value ?? ''})`, i32),\n  'i32Cast',\n);\n\nexport const u16: U16 = {\n  [$internal]: true,\n  type: 'u16',\n} as U16;\n\n/**\n * A schema that represents a signed 32-bit integer value. (equivalent to `i32` in WGSL)\n *\n * Can also be called to cast a value to an i32 in accordance with WGSL casting rules.\n *\n * @example\n * const value = i32(); // 0\n * @example\n * const value = i32(3.14); // 3\n * @example\n * const value = i32(-3.9); // -3\n * @example\n * const value = i32(10000000000) // 1410065408\n */\nexport const i32: I32 = Object.assign(i32Cast, {\n  type: 'i32',\n}) as unknown as I32;\n\nconst f32Cast = createDualImpl(\n  // CPU implementation\n  (v?: number | boolean) => {\n    if (v === undefined) {\n      return 0;\n    }\n    if (typeof v === 'boolean') {\n      return v ? 1 : 0;\n    }\n    return Math.fround(v);\n  },\n  // GPU implementation\n  (v) => snip(`f32(${v?.value ?? ''})`, f32),\n  'f32Cast',\n);\n\n/**\n * A schema that represents a 32-bit float value. (equivalent to `f32` in WGSL)\n *\n * Can also be called to cast a value to an f32.\n *\n * @example\n * const value = f32(); // 0\n * @example\n * const value = f32(1.23); // 1.23\n * @example\n * const value = f32(true); // 1\n */\nexport const f32: F32 = Object.assign(f32Cast, {\n  type: 'f32',\n}) as unknown as F32;\n\n// helpers for floating point conversion\nconst buf32 = new ArrayBuffer(4);\nconst f32arr = new Float32Array(buf32);\nconst u32arr = new Uint32Array(buf32);\n\n/**\n * Convert a JavaScript number (treated as float32) to **binary16** bit pattern.\n * @param x 32-bit floating-point value\n * @returns 16-bit half-precision encoding (stored in a JS number)\n */\nexport function toHalfBits(x: number): number {\n  f32arr[0] = x; // Write value; shared buffer now contains raw bits.\n  const bits = u32arr[0] as number; // Read those bits as unsigned int.\n\n  // 1. Extract sign, exponent, and mantissa from the 32‑bit layout.\n  const sign = (bits >>> 31) & 0x1; // Bit 31 is the sign.\n  let exp = (bits >>> 23) & 0xff; // Bits 30‑23 form the biased exponent.\n  let mant = bits & 0x7fffff; // Bits 22‑0 are the significand.\n\n  // 2. Handle special values (NaN, ±∞) before re‑biasing.\n  if (exp === 0xff) {\n    // Preserve the quiet‑NaN bit if mant≠0; otherwise this is ±∞.\n    return (sign << 15) | 0x7c00 | (mant ? 0x0200 : 0);\n  }\n\n  // 3. Re‑bias the exponent from 127 → 15 (binary32 → binary16).\n  exp = exp - 127 + 15;\n\n  // 4. Underflow: exponent ≤ 0 yields sub‑normals or signed zero.\n  if (exp <= 0) {\n    // If we need to shift more than 10 places, the value rounds to ±0.\n    if (exp < -10) {\n      return sign << 15;\n    }\n\n    // Produce a sub‑normal: prepend the hidden 1, right‑shift, then round.\n    mant = (mant | 0x800000) >> (1 - exp);\n    mant = (mant + 0x1000) >> 13; // Round‑to‑nearest‑even at bit 10.\n    return (sign << 15) | mant;\n  }\n\n  // 5. Overflow: if the biased exponent is 31 (0x1f) or higher, the number\n  //    cannot be represented in half precision, so we return ±∞.\n  if (exp >= 0x1f) {\n    return (sign << 15) | 0x7c00; // ±∞\n  }\n\n  // 6. Normalised number: round mantissa and pack sign|exp|mant.\n  mant = mant + 0x1000; // Add rounding bias at bit 12.\n  if (mant & 0x800000) { // The carry propagated out of the top bit; mantissa overflowed.\n    mant = 0; // Rounded up to 1.0 × 2^(exp+1).\n    ++exp; // Increment exponent (may overflow to ±∞).\n    if (exp >= 0x1f) {\n      return (sign << 15) | 0x7c00;\n    }\n  }\n\n  return (sign << 15) | (exp << 10) | (mant >> 13);\n}\n\n/**\n * Convert a **binary16** encoded bit pattern back to JavaScript number.\n * @param h 16-bit half-precision bits\n * @returns JavaScript number (64-bit float) with same numerical value\n */\nexport function fromHalfBits(h: number): number {\n  const sign = (h & 0x8000) ? -1 : 1; // Sign multiplier (preserves −0).\n  const exp = (h >> 10) & 0x1f; // 5‑bit exponent.\n  const mant = h & 0x03ff; // 10‑bit significand.\n\n  // 1. Zero and sub‑normals.\n  if (exp === 0) {\n    return mant ? sign * mant * 2 ** -24 : sign * 0;\n  }\n\n  // 2. Special cases (exp == 31).\n  if (exp === 0x1f) {\n    return mant\n      ? Number.NaN\n      : (sign === 1 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY);\n  }\n\n  // 3. Normalised numbers.\n  return sign * (1 + mant / 1024) * 2 ** (exp - 15);\n}\n\nfunction roundToF16(x: number): number {\n  return fromHalfBits(toHalfBits(x));\n}\n\nconst f16Cast = createDualImpl(\n  // CPU implementation\n  (v?: number | boolean) => {\n    if (v === undefined) {\n      return 0;\n    }\n    if (typeof v === 'boolean') {\n      return v ? 1 : 0;\n    }\n    return roundToF16(v);\n  },\n  // GPU implementation\n  // TODO: make usage of f16() in GPU mode check for feature availability and throw if not available\n  (v) => snip(`f16(${v?.value ?? ''})`, f16),\n  'f16Cast',\n);\n\n/**\n * A schema that represents a 16-bit float value. (equivalent to `f16` in WGSL)\n *\n * Can also be called to cast a value to an f16.\n *\n * @example\n * const value = f16(); // 0\n * @example\n * const value = f32(1.23); // 1.23\n * @example\n * const value = f16(true); // 1\n * @example\n * const value = f16(21877.5); // 21872\n */\nexport const f16: F16 = Object.assign(f16Cast, {\n  type: 'f16',\n}) as unknown as F16;\n","import { $internal } from '../shared/symbols.ts';\nimport type { SelfResolvable } from '../types.ts';\nimport { bool, f16, f32, i32, u32 } from './numeric.ts';\nimport type { VecKind } from './wgslTypes.ts';\n\n// deno-fmt-ignore\nexport abstract class VecBase<S> extends Array implements SelfResolvable {\n  public readonly [$internal] = true;\n  abstract get kind(): VecKind;\n  abstract getElementSchema(): (v?: S) => S;\n\n\n  abstract get _Vec2(): new (\n    x: S,\n    y: S,\n  ) => Vec2<S>;\n  abstract get _Vec3(): new (\n    x: S,\n    y: S,\n    z: S,\n  ) => Vec3<S>;\n  abstract get _Vec4(): new (\n    x: S,\n    y: S,\n    z: S,\n    w: S,\n  ) => Vec4<S>;\n\n  '~resolve'(): string {\n    return `${this.kind}(${this.join(', ')})`;\n  }\n\n  toString() {\n    return this['~resolve']();\n  }\n\n  get xx() { return new this._Vec2(this[0], this[0]); }\n  get xy() { return new this._Vec2(this[0], this[1]); }\n  get xz() { return new this._Vec2(this[0], this[2]); }\n  get xw() { return new this._Vec2(this[0], this[3]); }\n  get yx() { return new this._Vec2(this[1], this[0]); }\n  get yy() { return new this._Vec2(this[1], this[1]); }\n  get yz() { return new this._Vec2(this[1], this[2]); }\n  get yw() { return new this._Vec2(this[1], this[3]); }\n  get zx() { return new this._Vec2(this[2], this[0]); }\n  get zy() { return new this._Vec2(this[2], this[1]); }\n  get zz() { return new this._Vec2(this[2], this[2]); }\n  get zw() { return new this._Vec2(this[2], this[3]); }\n  get wx() { return new this._Vec2(this[3], this[0]); }\n  get wy() { return new this._Vec2(this[3], this[1]); }\n  get wz() { return new this._Vec2(this[3], this[2]); }\n  get ww() { return new this._Vec2(this[3], this[3]); }\n  get xxx() { return new this._Vec3(this[0], this[0], this[0]); }\n  get xxy() { return new this._Vec3(this[0], this[0], this[1]); }\n  get xxz() { return new this._Vec3(this[0], this[0], this[2]); }\n  get xxw() { return new this._Vec3(this[0], this[0], this[3]); }\n  get xyx() { return new this._Vec3(this[0], this[1], this[0]); }\n  get xyy() { return new this._Vec3(this[0], this[1], this[1]); }\n  get xyz() { return new this._Vec3(this[0], this[1], this[2]); }\n  get xyw() { return new this._Vec3(this[0], this[1], this[3]); }\n  get xzx() { return new this._Vec3(this[0], this[2], this[0]); }\n  get xzy() { return new this._Vec3(this[0], this[2], this[1]); }\n  get xzz() { return new this._Vec3(this[0], this[2], this[2]); }\n  get xzw() { return new this._Vec3(this[0], this[2], this[3]); }\n  get xwx() { return new this._Vec3(this[0], this[3], this[0]); }\n  get xwy() { return new this._Vec3(this[0], this[3], this[1]); }\n  get xwz() { return new this._Vec3(this[0], this[3], this[2]); }\n  get xww() { return new this._Vec3(this[0], this[3], this[3]); }\n  get yxx() { return new this._Vec3(this[1], this[0], this[0]); }\n  get yxy() { return new this._Vec3(this[1], this[0], this[1]); }\n  get yxz() { return new this._Vec3(this[1], this[0], this[2]); }\n  get yxw() { return new this._Vec3(this[1], this[0], this[3]); }\n  get yyx() { return new this._Vec3(this[1], this[1], this[0]); }\n  get yyy() { return new this._Vec3(this[1], this[1], this[1]); }\n  get yyz() { return new this._Vec3(this[1], this[1], this[2]); }\n  get yyw() { return new this._Vec3(this[1], this[1], this[3]); }\n  get yzx() { return new this._Vec3(this[1], this[2], this[0]); }\n  get yzy() { return new this._Vec3(this[1], this[2], this[1]); }\n  get yzz() { return new this._Vec3(this[1], this[2], this[2]); }\n  get yzw() { return new this._Vec3(this[1], this[2], this[3]); }\n  get ywx() { return new this._Vec3(this[1], this[3], this[0]); }\n  get ywy() { return new this._Vec3(this[1], this[3], this[1]); }\n  get ywz() { return new this._Vec3(this[1], this[3], this[2]); }\n  get yww() { return new this._Vec3(this[1], this[3], this[3]); }\n  get zxx() { return new this._Vec3(this[2], this[0], this[0]); }\n  get zxy() { return new this._Vec3(this[2], this[0], this[1]); }\n  get zxz() { return new this._Vec3(this[2], this[0], this[2]); }\n  get zxw() { return new this._Vec3(this[2], this[0], this[3]); }\n  get zyx() { return new this._Vec3(this[2], this[1], this[0]); }\n  get zyy() { return new this._Vec3(this[2], this[1], this[1]); }\n  get zyz() { return new this._Vec3(this[2], this[1], this[2]); }\n  get zyw() { return new this._Vec3(this[2], this[1], this[3]); }\n  get zzx() { return new this._Vec3(this[2], this[2], this[0]); }\n  get zzy() { return new this._Vec3(this[2], this[2], this[1]); }\n  get zzz() { return new this._Vec3(this[2], this[2], this[2]); }\n  get zzw() { return new this._Vec3(this[2], this[2], this[3]); }\n  get zwx() { return new this._Vec3(this[2], this[3], this[0]); }\n  get zwy() { return new this._Vec3(this[2], this[3], this[1]); }\n  get zwz() { return new this._Vec3(this[2], this[3], this[2]); }\n  get zww() { return new this._Vec3(this[2], this[3], this[3]); }\n  get wxx() { return new this._Vec3(this[3], this[0], this[0]); }\n  get wxy() { return new this._Vec3(this[3], this[0], this[1]); }\n  get wxz() { return new this._Vec3(this[3], this[0], this[2]); }\n  get wxw() { return new this._Vec3(this[3], this[0], this[3]); }\n  get wyx() { return new this._Vec3(this[3], this[1], this[0]); }\n  get wyy() { return new this._Vec3(this[3], this[1], this[1]); }\n  get wyz() { return new this._Vec3(this[3], this[1], this[2]); }\n  get wyw() { return new this._Vec3(this[3], this[1], this[3]); }\n  get wzx() { return new this._Vec3(this[3], this[2], this[0]); }\n  get wzy() { return new this._Vec3(this[3], this[2], this[1]); }\n  get wzz() { return new this._Vec3(this[3], this[2], this[2]); }\n  get wzw() { return new this._Vec3(this[3], this[2], this[3]); }\n  get wwx() { return new this._Vec3(this[3], this[3], this[0]); }\n  get wwy() { return new this._Vec3(this[3], this[3], this[1]); }\n  get wwz() { return new this._Vec3(this[3], this[3], this[2]); }\n  get www() { return new this._Vec3(this[3], this[3], this[3]); }\n  get xxxx() { return new this._Vec4(this[0], this[0], this[0], this[0]); }\n  get xxxy() { return new this._Vec4(this[0], this[0], this[0], this[1]); }\n  get xxxz() { return new this._Vec4(this[0], this[0], this[0], this[2]); }\n  get xxxw() { return new this._Vec4(this[0], this[0], this[0], this[3]); }\n  get xxyx() { return new this._Vec4(this[0], this[0], this[1], this[0]); }\n  get xxyy() { return new this._Vec4(this[0], this[0], this[1], this[1]); }\n  get xxyz() { return new this._Vec4(this[0], this[0], this[1], this[2]); }\n  get xxyw() { return new this._Vec4(this[0], this[0], this[1], this[3]); }\n  get xxzx() { return new this._Vec4(this[0], this[0], this[2], this[0]); }\n  get xxzy() { return new this._Vec4(this[0], this[0], this[2], this[1]); }\n  get xxzz() { return new this._Vec4(this[0], this[0], this[2], this[2]); }\n  get xxzw() { return new this._Vec4(this[0], this[0], this[2], this[3]); }\n  get xxwx() { return new this._Vec4(this[0], this[0], this[3], this[0]); }\n  get xxwy() { return new this._Vec4(this[0], this[0], this[3], this[1]); }\n  get xxwz() { return new this._Vec4(this[0], this[0], this[3], this[2]); }\n  get xxww() { return new this._Vec4(this[0], this[0], this[3], this[3]); }\n  get xyxx() { return new this._Vec4(this[0], this[1], this[0], this[0]); }\n  get xyxy() { return new this._Vec4(this[0], this[1], this[0], this[1]); }\n  get xyxz() { return new this._Vec4(this[0], this[1], this[0], this[2]); }\n  get xyxw() { return new this._Vec4(this[0], this[1], this[0], this[3]); }\n  get xyyx() { return new this._Vec4(this[0], this[1], this[1], this[0]); }\n  get xyyy() { return new this._Vec4(this[0], this[1], this[1], this[1]); }\n  get xyyz() { return new this._Vec4(this[0], this[1], this[1], this[2]); }\n  get xyyw() { return new this._Vec4(this[0], this[1], this[1], this[3]); }\n  get xyzx() { return new this._Vec4(this[0], this[1], this[2], this[0]); }\n  get xyzy() { return new this._Vec4(this[0], this[1], this[2], this[1]); }\n  get xyzz() { return new this._Vec4(this[0], this[1], this[2], this[2]); }\n  get xyzw() { return new this._Vec4(this[0], this[1], this[2], this[3]); }\n  get xywx() { return new this._Vec4(this[0], this[1], this[3], this[0]); }\n  get xywy() { return new this._Vec4(this[0], this[1], this[3], this[1]); }\n  get xywz() { return new this._Vec4(this[0], this[1], this[3], this[2]); }\n  get xyww() { return new this._Vec4(this[0], this[1], this[3], this[3]); }\n  get xzxx() { return new this._Vec4(this[0], this[2], this[0], this[0]); }\n  get xzxy() { return new this._Vec4(this[0], this[2], this[0], this[1]); }\n  get xzxz() { return new this._Vec4(this[0], this[2], this[0], this[2]); }\n  get xzxw() { return new this._Vec4(this[0], this[2], this[0], this[3]); }\n  get xzyx() { return new this._Vec4(this[0], this[2], this[1], this[0]); }\n  get xzyy() { return new this._Vec4(this[0], this[2], this[1], this[1]); }\n  get xzyz() { return new this._Vec4(this[0], this[2], this[1], this[2]); }\n  get xzyw() { return new this._Vec4(this[0], this[2], this[1], this[3]); }\n  get xzzx() { return new this._Vec4(this[0], this[2], this[2], this[0]); }\n  get xzzy() { return new this._Vec4(this[0], this[2], this[2], this[1]); }\n  get xzzz() { return new this._Vec4(this[0], this[2], this[2], this[2]); }\n  get xzzw() { return new this._Vec4(this[0], this[2], this[2], this[3]); }\n  get xzwx() { return new this._Vec4(this[0], this[2], this[3], this[0]); }\n  get xzwy() { return new this._Vec4(this[0], this[2], this[3], this[1]); }\n  get xzwz() { return new this._Vec4(this[0], this[2], this[3], this[2]); }\n  get xzww() { return new this._Vec4(this[0], this[2], this[3], this[3]); }\n  get xwxx() { return new this._Vec4(this[0], this[3], this[0], this[0]); }\n  get xwxy() { return new this._Vec4(this[0], this[3], this[0], this[1]); }\n  get xwxz() { return new this._Vec4(this[0], this[3], this[0], this[2]); }\n  get xwxw() { return new this._Vec4(this[0], this[3], this[0], this[3]); }\n  get xwyx() { return new this._Vec4(this[0], this[3], this[1], this[0]); }\n  get xwyy() { return new this._Vec4(this[0], this[3], this[1], this[1]); }\n  get xwyz() { return new this._Vec4(this[0], this[3], this[1], this[2]); }\n  get xwyw() { return new this._Vec4(this[0], this[3], this[1], this[3]); }\n  get xwzx() { return new this._Vec4(this[0], this[3], this[2], this[0]); }\n  get xwzy() { return new this._Vec4(this[0], this[3], this[2], this[1]); }\n  get xwzz() { return new this._Vec4(this[0], this[3], this[2], this[2]); }\n  get xwzw() { return new this._Vec4(this[0], this[3], this[2], this[3]); }\n  get xwwx() { return new this._Vec4(this[0], this[3], this[3], this[0]); }\n  get xwwy() { return new this._Vec4(this[0], this[3], this[3], this[1]); }\n  get xwwz() { return new this._Vec4(this[0], this[3], this[3], this[2]); }\n  get xwww() { return new this._Vec4(this[0], this[3], this[3], this[3]); }\n  get yxxx() { return new this._Vec4(this[1], this[0], this[0], this[0]); }\n  get yxxy() { return new this._Vec4(this[1], this[0], this[0], this[1]); }\n  get yxxz() { return new this._Vec4(this[1], this[0], this[0], this[2]); }\n  get yxxw() { return new this._Vec4(this[1], this[0], this[0], this[3]); }\n  get yxyx() { return new this._Vec4(this[1], this[0], this[1], this[0]); }\n  get yxyy() { return new this._Vec4(this[1], this[0], this[1], this[1]); }\n  get yxyz() { return new this._Vec4(this[1], this[0], this[1], this[2]); }\n  get yxyw() { return new this._Vec4(this[1], this[0], this[1], this[3]); }\n  get yxzx() { return new this._Vec4(this[1], this[0], this[2], this[0]); }\n  get yxzy() { return new this._Vec4(this[1], this[0], this[2], this[1]); }\n  get yxzz() { return new this._Vec4(this[1], this[0], this[2], this[2]); }\n  get yxzw() { return new this._Vec4(this[1], this[0], this[2], this[3]); }\n  get yxwx() { return new this._Vec4(this[1], this[0], this[3], this[0]); }\n  get yxwy() { return new this._Vec4(this[1], this[0], this[3], this[1]); }\n  get yxwz() { return new this._Vec4(this[1], this[0], this[3], this[2]); }\n  get yxww() { return new this._Vec4(this[1], this[0], this[3], this[3]); }\n  get yyxx() { return new this._Vec4(this[1], this[1], this[0], this[0]); }\n  get yyxy() { return new this._Vec4(this[1], this[1], this[0], this[1]); }\n  get yyxz() { return new this._Vec4(this[1], this[1], this[0], this[2]); }\n  get yyxw() { return new this._Vec4(this[1], this[1], this[0], this[3]); }\n  get yyyx() { return new this._Vec4(this[1], this[1], this[1], this[0]); }\n  get yyyy() { return new this._Vec4(this[1], this[1], this[1], this[1]); }\n  get yyyz() { return new this._Vec4(this[1], this[1], this[1], this[2]); }\n  get yyyw() { return new this._Vec4(this[1], this[1], this[1], this[3]); }\n  get yyzx() { return new this._Vec4(this[1], this[1], this[2], this[0]); }\n  get yyzy() { return new this._Vec4(this[1], this[1], this[2], this[1]); }\n  get yyzz() { return new this._Vec4(this[1], this[1], this[2], this[2]); }\n  get yyzw() { return new this._Vec4(this[1], this[1], this[2], this[3]); }\n  get yywx() { return new this._Vec4(this[1], this[1], this[3], this[0]); }\n  get yywy() { return new this._Vec4(this[1], this[1], this[3], this[1]); }\n  get yywz() { return new this._Vec4(this[1], this[1], this[3], this[2]); }\n  get yyww() { return new this._Vec4(this[1], this[1], this[3], this[3]); }\n  get yzxx() { return new this._Vec4(this[1], this[2], this[0], this[0]); }\n  get yzxy() { return new this._Vec4(this[1], this[2], this[0], this[1]); }\n  get yzxz() { return new this._Vec4(this[1], this[2], this[0], this[2]); }\n  get yzxw() { return new this._Vec4(this[1], this[2], this[0], this[3]); }\n  get yzyx() { return new this._Vec4(this[1], this[2], this[1], this[0]); }\n  get yzyy() { return new this._Vec4(this[1], this[2], this[1], this[1]); }\n  get yzyz() { return new this._Vec4(this[1], this[2], this[1], this[2]); }\n  get yzyw() { return new this._Vec4(this[1], this[2], this[1], this[3]); }\n  get yzzx() { return new this._Vec4(this[1], this[2], this[2], this[0]); }\n  get yzzy() { return new this._Vec4(this[1], this[2], this[2], this[1]); }\n  get yzzz() { return new this._Vec4(this[1], this[2], this[2], this[2]); }\n  get yzzw() { return new this._Vec4(this[1], this[2], this[2], this[3]); }\n  get yzwx() { return new this._Vec4(this[1], this[2], this[3], this[0]); }\n  get yzwy() { return new this._Vec4(this[1], this[2], this[3], this[1]); }\n  get yzwz() { return new this._Vec4(this[1], this[2], this[3], this[2]); }\n  get yzww() { return new this._Vec4(this[1], this[2], this[3], this[3]); }\n  get ywxx() { return new this._Vec4(this[1], this[3], this[0], this[0]); }\n  get ywxy() { return new this._Vec4(this[1], this[3], this[0], this[1]); }\n  get ywxz() { return new this._Vec4(this[1], this[3], this[0], this[2]); }\n  get ywxw() { return new this._Vec4(this[1], this[3], this[0], this[3]); }\n  get ywyx() { return new this._Vec4(this[1], this[3], this[1], this[0]); }\n  get ywyy() { return new this._Vec4(this[1], this[3], this[1], this[1]); }\n  get ywyz() { return new this._Vec4(this[1], this[3], this[1], this[2]); }\n  get ywyw() { return new this._Vec4(this[1], this[3], this[1], this[3]); }\n  get ywzx() { return new this._Vec4(this[1], this[3], this[2], this[0]); }\n  get ywzy() { return new this._Vec4(this[1], this[3], this[2], this[1]); }\n  get ywzz() { return new this._Vec4(this[1], this[3], this[2], this[2]); }\n  get ywzw() { return new this._Vec4(this[1], this[3], this[2], this[3]); }\n  get ywwx() { return new this._Vec4(this[1], this[3], this[3], this[0]); }\n  get ywwy() { return new this._Vec4(this[1], this[3], this[3], this[1]); }\n  get ywwz() { return new this._Vec4(this[1], this[3], this[3], this[2]); }\n  get ywww() { return new this._Vec4(this[1], this[3], this[3], this[3]); }\n  get zxxx() { return new this._Vec4(this[2], this[0], this[0], this[0]); }\n  get zxxy() { return new this._Vec4(this[2], this[0], this[0], this[1]); }\n  get zxxz() { return new this._Vec4(this[2], this[0], this[0], this[2]); }\n  get zxxw() { return new this._Vec4(this[2], this[0], this[0], this[3]); }\n  get zxyx() { return new this._Vec4(this[2], this[0], this[1], this[0]); }\n  get zxyy() { return new this._Vec4(this[2], this[0], this[1], this[1]); }\n  get zxyz() { return new this._Vec4(this[2], this[0], this[1], this[2]); }\n  get zxyw() { return new this._Vec4(this[2], this[0], this[1], this[3]); }\n  get zxzx() { return new this._Vec4(this[2], this[0], this[2], this[0]); }\n  get zxzy() { return new this._Vec4(this[2], this[0], this[2], this[1]); }\n  get zxzz() { return new this._Vec4(this[2], this[0], this[2], this[2]); }\n  get zxzw() { return new this._Vec4(this[2], this[0], this[2], this[3]); }\n  get zxwx() { return new this._Vec4(this[2], this[0], this[3], this[0]); }\n  get zxwy() { return new this._Vec4(this[2], this[0], this[3], this[1]); }\n  get zxwz() { return new this._Vec4(this[2], this[0], this[3], this[2]); }\n  get zxww() { return new this._Vec4(this[2], this[0], this[3], this[3]); }\n  get zyxx() { return new this._Vec4(this[2], this[1], this[0], this[0]); }\n  get zyxy() { return new this._Vec4(this[2], this[1], this[0], this[1]); }\n  get zyxz() { return new this._Vec4(this[2], this[1], this[0], this[2]); }\n  get zyxw() { return new this._Vec4(this[2], this[1], this[0], this[3]); }\n  get zyyx() { return new this._Vec4(this[2], this[1], this[1], this[0]); }\n  get zyyy() { return new this._Vec4(this[2], this[1], this[1], this[1]); }\n  get zyyz() { return new this._Vec4(this[2], this[1], this[1], this[2]); }\n  get zyyw() { return new this._Vec4(this[2], this[1], this[1], this[3]); }\n  get zyzx() { return new this._Vec4(this[2], this[1], this[2], this[0]); }\n  get zyzy() { return new this._Vec4(this[2], this[1], this[2], this[1]); }\n  get zyzz() { return new this._Vec4(this[2], this[1], this[2], this[2]); }\n  get zyzw() { return new this._Vec4(this[2], this[1], this[2], this[3]); }\n  get zywx() { return new this._Vec4(this[2], this[1], this[3], this[0]); }\n  get zywy() { return new this._Vec4(this[2], this[1], this[3], this[1]); }\n  get zywz() { return new this._Vec4(this[2], this[1], this[3], this[2]); }\n  get zyww() { return new this._Vec4(this[2], this[1], this[3], this[3]); }\n  get zzxx() { return new this._Vec4(this[2], this[2], this[0], this[0]); }\n  get zzxy() { return new this._Vec4(this[2], this[2], this[0], this[1]); }\n  get zzxz() { return new this._Vec4(this[2], this[2], this[0], this[2]); }\n  get zzxw() { return new this._Vec4(this[2], this[2], this[0], this[3]); }\n  get zzyx() { return new this._Vec4(this[2], this[2], this[1], this[0]); }\n  get zzyy() { return new this._Vec4(this[2], this[2], this[1], this[1]); }\n  get zzyz() { return new this._Vec4(this[2], this[2], this[1], this[2]); }\n  get zzyw() { return new this._Vec4(this[2], this[2], this[1], this[3]); }\n  get zzzx() { return new this._Vec4(this[2], this[2], this[2], this[0]); }\n  get zzzy() { return new this._Vec4(this[2], this[2], this[2], this[1]); }\n  get zzzz() { return new this._Vec4(this[2], this[2], this[2], this[2]); }\n  get zzzw() { return new this._Vec4(this[2], this[2], this[2], this[3]); }\n  get zzwx() { return new this._Vec4(this[2], this[2], this[3], this[0]); }\n  get zzwy() { return new this._Vec4(this[2], this[2], this[3], this[1]); }\n  get zzwz() { return new this._Vec4(this[2], this[2], this[3], this[2]); }\n  get zzww() { return new this._Vec4(this[2], this[2], this[3], this[3]); }\n  get zwxx() { return new this._Vec4(this[2], this[3], this[0], this[0]); }\n  get zwxy() { return new this._Vec4(this[2], this[3], this[0], this[1]); }\n  get zwxz() { return new this._Vec4(this[2], this[3], this[0], this[2]); }\n  get zwxw() { return new this._Vec4(this[2], this[3], this[0], this[3]); }\n  get zwyx() { return new this._Vec4(this[2], this[3], this[1], this[0]); }\n  get zwyy() { return new this._Vec4(this[2], this[3], this[1], this[1]); }\n  get zwyz() { return new this._Vec4(this[2], this[3], this[1], this[2]); }\n  get zwyw() { return new this._Vec4(this[2], this[3], this[1], this[3]); }\n  get zwzx() { return new this._Vec4(this[2], this[3], this[2], this[0]); }\n  get zwzy() { return new this._Vec4(this[2], this[3], this[2], this[1]); }\n  get zwzz() { return new this._Vec4(this[2], this[3], this[2], this[2]); }\n  get zwzw() { return new this._Vec4(this[2], this[3], this[2], this[3]); }\n  get zwwx() { return new this._Vec4(this[2], this[3], this[3], this[0]); }\n  get zwwy() { return new this._Vec4(this[2], this[3], this[3], this[1]); }\n  get zwwz() { return new this._Vec4(this[2], this[3], this[3], this[2]); }\n  get zwww() { return new this._Vec4(this[2], this[3], this[3], this[3]); }\n  get wxxx() { return new this._Vec4(this[3], this[0], this[0], this[0]); }\n  get wxxy() { return new this._Vec4(this[3], this[0], this[0], this[1]); }\n  get wxxz() { return new this._Vec4(this[3], this[0], this[0], this[2]); }\n  get wxxw() { return new this._Vec4(this[3], this[0], this[0], this[3]); }\n  get wxyx() { return new this._Vec4(this[3], this[0], this[1], this[0]); }\n  get wxyy() { return new this._Vec4(this[3], this[0], this[1], this[1]); }\n  get wxyz() { return new this._Vec4(this[3], this[0], this[1], this[2]); }\n  get wxyw() { return new this._Vec4(this[3], this[0], this[1], this[3]); }\n  get wxzx() { return new this._Vec4(this[3], this[0], this[2], this[0]); }\n  get wxzy() { return new this._Vec4(this[3], this[0], this[2], this[1]); }\n  get wxzz() { return new this._Vec4(this[3], this[0], this[2], this[2]); }\n  get wxzw() { return new this._Vec4(this[3], this[0], this[2], this[3]); }\n  get wxwx() { return new this._Vec4(this[3], this[0], this[3], this[0]); }\n  get wxwy() { return new this._Vec4(this[3], this[0], this[3], this[1]); }\n  get wxwz() { return new this._Vec4(this[3], this[0], this[3], this[2]); }\n  get wxww() { return new this._Vec4(this[3], this[0], this[3], this[3]); }\n  get wyxx() { return new this._Vec4(this[3], this[1], this[0], this[0]); }\n  get wyxy() { return new this._Vec4(this[3], this[1], this[0], this[1]); }\n  get wyxz() { return new this._Vec4(this[3], this[1], this[0], this[2]); }\n  get wyxw() { return new this._Vec4(this[3], this[1], this[0], this[3]); }\n  get wyyx() { return new this._Vec4(this[3], this[1], this[1], this[0]); }\n  get wyyy() { return new this._Vec4(this[3], this[1], this[1], this[1]); }\n  get wyyz() { return new this._Vec4(this[3], this[1], this[1], this[2]); }\n  get wyyw() { return new this._Vec4(this[3], this[1], this[1], this[3]); }\n  get wyzx() { return new this._Vec4(this[3], this[1], this[2], this[0]); }\n  get wyzy() { return new this._Vec4(this[3], this[1], this[2], this[1]); }\n  get wyzz() { return new this._Vec4(this[3], this[1], this[2], this[2]); }\n  get wyzw() { return new this._Vec4(this[3], this[1], this[2], this[3]); }\n  get wywx() { return new this._Vec4(this[3], this[1], this[3], this[0]); }\n  get wywy() { return new this._Vec4(this[3], this[1], this[3], this[1]); }\n  get wywz() { return new this._Vec4(this[3], this[1], this[3], this[2]); }\n  get wyww() { return new this._Vec4(this[3], this[1], this[3], this[3]); }\n  get wzxx() { return new this._Vec4(this[3], this[2], this[0], this[0]); }\n  get wzxy() { return new this._Vec4(this[3], this[2], this[0], this[1]); }\n  get wzxz() { return new this._Vec4(this[3], this[2], this[0], this[2]); }\n  get wzxw() { return new this._Vec4(this[3], this[2], this[0], this[3]); }\n  get wzyx() { return new this._Vec4(this[3], this[2], this[1], this[0]); }\n  get wzyy() { return new this._Vec4(this[3], this[2], this[1], this[1]); }\n  get wzyz() { return new this._Vec4(this[3], this[2], this[1], this[2]); }\n  get wzyw() { return new this._Vec4(this[3], this[2], this[1], this[3]); }\n  get wzzx() { return new this._Vec4(this[3], this[2], this[2], this[0]); }\n  get wzzy() { return new this._Vec4(this[3], this[2], this[2], this[1]); }\n  get wzzz() { return new this._Vec4(this[3], this[2], this[2], this[2]); }\n  get wzzw() { return new this._Vec4(this[3], this[2], this[2], this[3]); }\n  get wzwx() { return new this._Vec4(this[3], this[2], this[3], this[0]); }\n  get wzwy() { return new this._Vec4(this[3], this[2], this[3], this[1]); }\n  get wzwz() { return new this._Vec4(this[3], this[2], this[3], this[2]); }\n  get wzww() { return new this._Vec4(this[3], this[2], this[3], this[3]); }\n  get wwxx() { return new this._Vec4(this[3], this[3], this[0], this[0]); }\n  get wwxy() { return new this._Vec4(this[3], this[3], this[0], this[1]); }\n  get wwxz() { return new this._Vec4(this[3], this[3], this[0], this[2]); }\n  get wwxw() { return new this._Vec4(this[3], this[3], this[0], this[3]); }\n  get wwyx() { return new this._Vec4(this[3], this[3], this[1], this[0]); }\n  get wwyy() { return new this._Vec4(this[3], this[3], this[1], this[1]); }\n  get wwyz() { return new this._Vec4(this[3], this[3], this[1], this[2]); }\n  get wwyw() { return new this._Vec4(this[3], this[3], this[1], this[3]); }\n  get wwzx() { return new this._Vec4(this[3], this[3], this[2], this[0]); }\n  get wwzy() { return new this._Vec4(this[3], this[3], this[2], this[1]); }\n  get wwzz() { return new this._Vec4(this[3], this[3], this[2], this[2]); }\n  get wwzw() { return new this._Vec4(this[3], this[3], this[2], this[3]); }\n  get wwwx() { return new this._Vec4(this[3], this[3], this[3], this[0]); }\n  get wwwy() { return new this._Vec4(this[3], this[3], this[3], this[1]); }\n  get wwwz() { return new this._Vec4(this[3], this[3], this[3], this[2]); }\n  get wwww() { return new this._Vec4(this[3], this[3], this[3], this[3]); }\n}\n\ntype Tuple2<S> = [S, S];\ntype Tuple3<S> = [S, S, S];\ntype Tuple4<S> = [S, S, S, S];\n\nabstract class Vec2<S> extends VecBase<S> implements Tuple2<S> {\n  declare readonly length = 2;\n\n  e0: S;\n  e1: S;\n\n  constructor(x?: S, y?: S) {\n    super(2);\n    this.e0 = this.getElementSchema()(x);\n    this.e1 = this.getElementSchema()(y ?? x);\n  }\n\n  get [0]() {\n    return this.e0;\n  }\n\n  get [1]() {\n    return this.e1;\n  }\n\n  set [0](value: S) {\n    this.e0 = this.getElementSchema()(value);\n  }\n\n  set [1](value: S) {\n    this.e1 = this.getElementSchema()(value);\n  }\n\n  get x() {\n    return this[0];\n  }\n\n  get y() {\n    return this[1];\n  }\n\n  set x(value: S) {\n    this[0] = this.getElementSchema()(value);\n  }\n\n  set y(value: S) {\n    this[1] = this.getElementSchema()(value);\n  }\n}\n\nabstract class Vec3<S> extends VecBase<S> implements Tuple3<S> {\n  declare readonly length = 3;\n\n  e0: S;\n  e1: S;\n  e2: S;\n\n  constructor(x?: S, y?: S, z?: S) {\n    super(3);\n    this.e0 = this.getElementSchema()(x);\n    this.e1 = this.getElementSchema()(y ?? x);\n    this.e2 = this.getElementSchema()(z ?? x);\n  }\n\n  get [0]() {\n    return this.e0;\n  }\n\n  get [1]() {\n    return this.e1;\n  }\n\n  get [2]() {\n    return this.e2;\n  }\n\n  set [0](value: S) {\n    this.e0 = this.getElementSchema()(value);\n  }\n\n  set [1](value: S) {\n    this.e1 = this.getElementSchema()(value);\n  }\n\n  set [2](value: S) {\n    this.e2 = this.getElementSchema()(value);\n  }\n\n  get x() {\n    return this[0];\n  }\n\n  get y() {\n    return this[1];\n  }\n\n  get z() {\n    return this[2];\n  }\n\n  set x(value: S) {\n    this[0] = this.getElementSchema()(value);\n  }\n\n  set y(value: S) {\n    this[1] = this.getElementSchema()(value);\n  }\n\n  set z(value: S) {\n    this[2] = this.getElementSchema()(value);\n  }\n}\n\nabstract class Vec4<S> extends VecBase<S> implements Tuple4<S> {\n  declare readonly length = 4;\n\n  e0: S;\n  e1: S;\n  e2: S;\n  e3: S;\n\n  constructor(x?: S, y?: S, z?: S, w?: S) {\n    super(4);\n    this.e0 = this.getElementSchema()(x);\n    this.e1 = this.getElementSchema()(y ?? x);\n    this.e2 = this.getElementSchema()(z ?? x);\n    this.e3 = this.getElementSchema()(w ?? x);\n  }\n\n  get [0]() {\n    return this.e0;\n  }\n\n  get [1]() {\n    return this.e1;\n  }\n\n  get [2]() {\n    return this.e2;\n  }\n\n  get [3]() {\n    return this.e3;\n  }\n\n  set [0](value: S) {\n    this.e0 = this.getElementSchema()(value);\n  }\n\n  set [1](value: S) {\n    this.e1 = this.getElementSchema()(value);\n  }\n\n  set [2](value: S) {\n    this.e2 = this.getElementSchema()(value);\n  }\n\n  set [3](value: S) {\n    this.e3 = this.getElementSchema()(value);\n  }\n\n  get x() {\n    return this[0];\n  }\n\n  get y() {\n    return this[1];\n  }\n\n  get z() {\n    return this[2];\n  }\n\n  get w() {\n    return this[3];\n  }\n\n  set x(value: S) {\n    this[0] = value;\n  }\n\n  set y(value: S) {\n    this[1] = value;\n  }\n\n  set z(value: S) {\n    this[2] = value;\n  }\n\n  set w(value: S) {\n    this[3] = value;\n  }\n}\n\nexport class Vec2fImpl extends Vec2<number> {\n  getElementSchema() {\n    return f32;\n  }\n  get kind() {\n    return 'vec2f' as const;\n  }\n\n  get _Vec2() {\n    return Vec2fImpl;\n  }\n  get _Vec3() {\n    return Vec3fImpl;\n  }\n  get _Vec4() {\n    return Vec4fImpl;\n  }\n}\n\nexport class Vec2hImpl extends Vec2<number> {\n  getElementSchema() {\n    return f16;\n  }\n  get kind() {\n    return 'vec2h' as const;\n  }\n\n  get _Vec2() {\n    return Vec2hImpl;\n  }\n  get _Vec3() {\n    return Vec3hImpl;\n  }\n  get _Vec4() {\n    return Vec4hImpl;\n  }\n}\n\nexport class Vec2iImpl extends Vec2<number> {\n  getElementSchema() {\n    return i32;\n  }\n  get kind() {\n    return 'vec2i' as const;\n  }\n\n  get _Vec2() {\n    return Vec2iImpl;\n  }\n  get _Vec3() {\n    return Vec3iImpl;\n  }\n  get _Vec4() {\n    return Vec4iImpl;\n  }\n}\n\nexport class Vec2uImpl extends Vec2<number> {\n  getElementSchema() {\n    return u32;\n  }\n  get kind() {\n    return 'vec2u' as const;\n  }\n\n  get _Vec2() {\n    return Vec2uImpl;\n  }\n  get _Vec3() {\n    return Vec3uImpl;\n  }\n  get _Vec4() {\n    return Vec4uImpl;\n  }\n}\n\nexport class Vec2bImpl extends Vec2<boolean> {\n  getElementSchema() {\n    return bool;\n  }\n  get kind() {\n    return 'vec2<bool>' as const;\n  }\n\n  get _Vec2() {\n    return Vec2bImpl;\n  }\n  get _Vec3() {\n    return Vec3bImpl;\n  }\n  get _Vec4() {\n    return Vec4bImpl;\n  }\n}\n\nexport class Vec3fImpl extends Vec3<number> {\n  getElementSchema() {\n    return f32;\n  }\n  get kind() {\n    return 'vec3f' as const;\n  }\n\n  get _Vec2() {\n    return Vec2fImpl;\n  }\n  get _Vec3() {\n    return Vec3fImpl;\n  }\n  get _Vec4() {\n    return Vec4fImpl;\n  }\n}\n\nexport class Vec3hImpl extends Vec3<number> {\n  getElementSchema() {\n    return f16;\n  }\n  get kind() {\n    return 'vec3h' as const;\n  }\n\n  get _Vec2() {\n    return Vec2hImpl;\n  }\n  get _Vec3() {\n    return Vec3hImpl;\n  }\n  get _Vec4() {\n    return Vec4hImpl;\n  }\n}\n\nexport class Vec3iImpl extends Vec3<number> {\n  getElementSchema() {\n    return i32;\n  }\n  get kind() {\n    return 'vec3i' as const;\n  }\n\n  get _Vec2() {\n    return Vec2iImpl;\n  }\n  get _Vec3() {\n    return Vec3iImpl;\n  }\n  get _Vec4() {\n    return Vec4iImpl;\n  }\n}\n\nexport class Vec3uImpl extends Vec3<number> {\n  getElementSchema() {\n    return u32;\n  }\n  get kind() {\n    return 'vec3u' as const;\n  }\n\n  get _Vec2() {\n    return Vec2uImpl;\n  }\n  get _Vec3() {\n    return Vec3uImpl;\n  }\n  get _Vec4() {\n    return Vec4uImpl;\n  }\n}\n\nexport class Vec3bImpl extends Vec3<boolean> {\n  getElementSchema() {\n    return bool;\n  }\n  get kind() {\n    return 'vec3<bool>' as const;\n  }\n\n  get _Vec2() {\n    return Vec2bImpl;\n  }\n  get _Vec3() {\n    return Vec3bImpl;\n  }\n  get _Vec4() {\n    return Vec4bImpl;\n  }\n}\n\nexport class Vec4fImpl extends Vec4<number> {\n  getElementSchema() {\n    return f32;\n  }\n  get kind() {\n    return 'vec4f' as const;\n  }\n\n  get _Vec2() {\n    return Vec2fImpl;\n  }\n  get _Vec3() {\n    return Vec3fImpl;\n  }\n  get _Vec4() {\n    return Vec4fImpl;\n  }\n}\n\nexport class Vec4hImpl extends Vec4<number> {\n  getElementSchema() {\n    return f16;\n  }\n  get kind() {\n    return 'vec4h' as const;\n  }\n\n  get _Vec2() {\n    return Vec2hImpl;\n  }\n  get _Vec3() {\n    return Vec3hImpl;\n  }\n  get _Vec4() {\n    return Vec4hImpl;\n  }\n}\n\nexport class Vec4iImpl extends Vec4<number> {\n  getElementSchema() {\n    return i32;\n  }\n  get kind() {\n    return 'vec4i' as const;\n  }\n\n  get _Vec2() {\n    return Vec2iImpl;\n  }\n  get _Vec3() {\n    return Vec3iImpl;\n  }\n  get _Vec4() {\n    return Vec4iImpl;\n  }\n}\n\nexport class Vec4uImpl extends Vec4<number> {\n  getElementSchema() {\n    return u32;\n  }\n  get kind() {\n    return 'vec4u' as const;\n  }\n\n  get _Vec2() {\n    return Vec2uImpl;\n  }\n  get _Vec3() {\n    return Vec3uImpl;\n  }\n  get _Vec4() {\n    return Vec4uImpl;\n  }\n}\n\nexport class Vec4bImpl extends Vec4<boolean> {\n  getElementSchema() {\n    return bool;\n  }\n  get kind() {\n    return 'vec4<bool>' as const;\n  }\n\n  get _Vec2() {\n    return Vec2bImpl;\n  }\n  get _Vec3() {\n    return Vec3bImpl;\n  }\n  get _Vec4() {\n    return Vec4bImpl;\n  }\n}\n","import { createDualImpl } from '../shared/generators.ts';\nimport { $repr } from '../shared/symbols.ts';\nimport { snip } from './dataTypes.ts';\nimport { bool, f16, f32, i32, u32 } from './numeric.ts';\nimport {\n  Vec2bImpl,\n  Vec2fImpl,\n  Vec2hImpl,\n  Vec2iImpl,\n  Vec2uImpl,\n  Vec3bImpl,\n  Vec3fImpl,\n  Vec3hImpl,\n  Vec3iImpl,\n  Vec3uImpl,\n  Vec4bImpl,\n  Vec4fImpl,\n  Vec4hImpl,\n  Vec4iImpl,\n  Vec4uImpl,\n  type VecBase,\n} from './vectorImpl.ts';\nimport type {\n  AnyVecInstance,\n  AnyWgslData,\n  Decorated,\n  Vec2b,\n  Vec2f,\n  Vec2h,\n  Vec2i,\n  Vec2u,\n  Vec3b,\n  Vec3f,\n  Vec3h,\n  Vec3i,\n  Vec3u,\n  Vec4b,\n  Vec4f,\n  Vec4h,\n  Vec4i,\n  Vec4u,\n} from './wgslTypes.ts';\nimport { isDecorated, isVec } from './wgslTypes.ts';\n\n// ----------\n// Public API\n// ----------\n\n/**\n * Schema representing vec2f - a vector with 2 elements of type f32.\n * Also a constructor function for this vector value.\n *\n * @example\n * const vector = d.vec2f(); // (0.0, 0.0)\n * const vector = d.vec2f(1); // (1.0, 1.0)\n * const vector = d.vec2f(0.5, 0.1); // (0.5, 0.1)\n *\n * @example\n * const buffer = root.createBuffer(d.vec2f, d.vec2f(0, 1)); // buffer holding a d.vec2f value, with an initial value of vec2f(0, 1);\n */\nexport const vec2f = makeVecSchema(Vec2fImpl) as Vec2f;\n\n/**\n * Schema representing vec2h - a vector with 2 elements of type f16.\n * Also a constructor function for this vector value.\n *\n * @example\n * const vector = d.vec2h(); // (0.0, 0.0)\n * const vector = d.vec2h(1); // (1.0, 1.0)\n * const vector = d.vec2h(0.5, 0.1); // (0.5, 0.1)\n *\n * @example\n * const buffer = root.createBuffer(d.vec2h, d.vec2h(0, 1)); // buffer holding a d.vec2h value, with an initial value of vec2h(0, 1);\n */\nexport const vec2h = makeVecSchema(Vec2hImpl) as Vec2h;\n\n/**\n * Schema representing vec2i - a vector with 2 elements of type i32.\n * Also a constructor function for this vector value.\n *\n * @example\n * const vector = d.vec2i(); // (0, 0)\n * const vector = d.vec2i(1); // (1, 1)\n * const vector = d.vec2i(-1, 1); // (-1, 1)\n *\n * @example\n * const buffer = root.createBuffer(d.vec2i, d.vec2i(0, 1)); // buffer holding a d.vec2i value, with an initial value of vec2i(0, 1);\n */\nexport const vec2i = makeVecSchema(Vec2iImpl) as Vec2i;\n\n/**\n * Schema representing vec2u - a vector with 2 elements of type u32.\n * Also a constructor function for this vector value.\n *\n * @example\n * const vector = d.vec2u(); // (0, 0)\n * const vector = d.vec2u(1); // (1, 1)\n * const vector = d.vec2u(1, 2); // (1, 2)\n *\n * @example\n * const buffer = root.createBuffer(d.vec2u, d.vec2u(0, 1)); // buffer holding a d.vec2u value, with an initial value of vec2u(0, 1);\n */\nexport const vec2u = makeVecSchema(Vec2uImpl) as Vec2u;\n\n/**\n * Schema representing `vec2<bool>` - a vector with 2 elements of type `bool`.\n * Also a constructor function for this vector value.\n *\n * @example\n * const vector = d.vec2b(); // (false, false)\n * const vector = d.vec2b(true); // (true, true)\n * const vector = d.vec2b(false, true); // (false, true)\n */\nexport const vec2b = makeVecSchema(Vec2bImpl) as Vec2b;\n\n/**\n * Schema representing vec3f - a vector with 3 elements of type f32.\n * Also a constructor function for this vector value.\n *\n * @example\n * const vector = d.vec3f(); // (0.0, 0.0, 0.0)\n * const vector = d.vec3f(1); // (1.0, 1.0, 1.0)\n * const vector = d.vec3f(1, 2, 3.5); // (1.0, 2.0, 3.5)\n *\n * @example\n * const buffer = root.createBuffer(d.vec3f, d.vec3f(0, 1, 2)); // buffer holding a d.vec3f value, with an initial value of vec3f(0, 1, 2);\n */\nexport const vec3f = makeVecSchema(Vec3fImpl) as Vec3f;\n\n/**\n * Schema representing vec3h - a vector with 3 elements of type f16.\n * Also a constructor function for this vector value.\n *\n * @example\n * const vector = d.vec3h(); // (0.0, 0.0, 0.0)\n * const vector = d.vec3h(1); // (1.0, 1.0, 1.0)\n * const vector = d.vec3h(1, 2, 3.5); // (1.0, 2.0, 3.5)\n *\n * @example\n * const buffer = root.createBuffer(d.vec3h, d.vec3h(0, 1, 2)); // buffer holding a d.vec3h value, with an initial value of vec3h(0, 1, 2);\n */\nexport const vec3h = makeVecSchema(Vec3hImpl) as Vec3h;\n\n/**\n * Schema representing vec3i - a vector with 3 elements of type i32.\n * Also a constructor function for this vector value.\n *\n * @example\n * const vector = d.vec3i(); // (0, 0, 0)\n * const vector = d.vec3i(1); // (1, 1, 1)\n * const vector = d.vec3i(1, 2, -3); // (1, 2, -3)\n *\n * @example\n * const buffer = root.createBuffer(d.vec3i, d.vec3i(0, 1, 2)); // buffer holding a d.vec3i value, with an initial value of vec3i(0, 1, 2);\n */\nexport const vec3i = makeVecSchema(Vec3iImpl) as Vec3i;\n\n/**\n * Schema representing vec3u - a vector with 3 elements of type u32.\n * Also a constructor function for this vector value.\n *\n * @example\n * const vector = d.vec3u(); // (0, 0, 0)\n * const vector = d.vec3u(1); // (1, 1, 1)\n * const vector = d.vec3u(1, 2, 3); // (1, 2, 3)\n *\n * @example\n * const buffer = root.createBuffer(d.vec3u, d.vec3u(0, 1, 2)); // buffer holding a d.vec3u value, with an initial value of vec3u(0, 1, 2);\n */\nexport const vec3u = makeVecSchema(Vec3uImpl) as Vec3u;\n\n/**\n * Schema representing `vec3<bool>` - a vector with 3 elements of type `bool`.\n * Also a constructor function for this vector value.\n *\n * @example\n * const vector = d.vec3b(); // (false, false, false)\n * const vector = d.vec3b(true); // (true, true, true)\n * const vector = d.vec3b(false, true, false); // (false, true, false)\n */\nexport const vec3b = makeVecSchema(Vec3bImpl) as Vec3b;\n\n/**\n * Schema representing vec4f - a vector with 4 elements of type f32.\n * Also a constructor function for this vector value.\n *\n * @example\n * const vector = d.vec4f(); // (0.0, 0.0, 0.0, 0.0)\n * const vector = d.vec4f(1); // (1.0, 1.0, 1.0, 1.0)\n * const vector = d.vec4f(1, 2, 3, 4.5); // (1.0, 2.0, 3.0, 4.5)\n *\n * @example\n * const buffer = root.createBuffer(d.vec4f, d.vec4f(0, 1, 2, 3)); // buffer holding a d.vec4f value, with an initial value of vec4f(0, 1, 2, 3);\n */\nexport const vec4f = makeVecSchema(Vec4fImpl) as Vec4f;\n\n/**\n * Schema representing vec4h - a vector with 4 elements of type f16.\n * Also a constructor function for this vector value.\n *\n * @example\n * const vector = d.vec4h(); // (0.0, 0.0, 0.0, 0.0)\n * const vector = d.vec4h(1); // (1.0, 1.0, 1.0, 1.0)\n * const vector = d.vec4h(1, 2, 3, 4.5); // (1.0, 2.0, 3.0, 4.5)\n *\n * @example\n * const buffer = root.createBuffer(d.vec4h, d.vec4h(0, 1, 2, 3)); // buffer holding a d.vec4h value, with an initial value of vec4h(0, 1, 2, 3);\n */\nexport const vec4h = makeVecSchema(Vec4hImpl) as Vec4h;\n\n/**\n * Schema representing vec4i - a vector with 4 elements of type i32.\n * Also a constructor function for this vector value.\n *\n * @example\n * const vector = d.vec4i(); // (0, 0, 0, 0)\n * const vector = d.vec4i(1); // (1, 1, 1, 1)\n * const vector = d.vec4i(1, 2, 3, -4); // (1, 2, 3, -4)\n *\n * @example\n * const buffer = root.createBuffer(d.vec4i, d.vec4i(0, 1, 2, 3)); // buffer holding a d.vec4i value, with an initial value of vec4i(0, 1, 2, 3);\n */\nexport const vec4i = makeVecSchema(Vec4iImpl) as Vec4i;\n\n/**\n * Schema representing vec4u - a vector with 4 elements of type u32.\n * Also a constructor function for this vector value.\n *\n * @example\n * const vector = d.vec4u(); // (0, 0, 0, 0)\n * const vector = d.vec4u(1); // (1, 1, 1, 1)\n * const vector = d.vec4u(1, 2, 3, 4); // (1, 2, 3, 4)\n *\n * @example\n * const buffer = root.createBuffer(d.vec4u, d.vec4u(0, 1, 2, 3)); // buffer holding a d.vec4u value, with an initial value of vec4u(0, 1, 2, 3);\n */\nexport const vec4u = makeVecSchema(Vec4uImpl) as Vec4u;\n\n/**\n * Schema representing `vec4<bool>` - a vector with 4 elements of type `bool`.\n * Also a constructor function for this vector value.\n *\n * @example\n * const vector = d.vec4b(); // (false, false, false, false)\n * const vector = d.vec4b(true); // (true, true, true, true)\n * const vector = d.vec4b(false, true, false, true); // (false, true, false, true)\n */\nexport const vec4b = makeVecSchema(Vec4bImpl) as Vec4b;\n\n// --------------\n// Implementation\n// --------------\n\nconst vecTypeToConstructor = {\n  vec2f,\n  vec2h,\n  vec2i,\n  vec2u,\n  'vec2<bool>': vec2b,\n  vec3f,\n  vec3h,\n  vec3i,\n  vec3u,\n  'vec3<bool>': vec3b,\n  vec4f,\n  vec4h,\n  vec4i,\n  vec4u,\n  'vec4<bool>': vec4b,\n} as const;\n\nexport const vecTypeToPrimitive = {\n  vec2f: f32,\n  vec2h: f16,\n  vec2i: i32,\n  vec2u: u32,\n  'vec2<bool>': bool,\n  vec3f: f32,\n  vec3h: f16,\n  vec3i: i32,\n  vec3u: u32,\n  'vec3<bool>': bool,\n  vec4f: f32,\n  vec4h: f16,\n  vec4i: i32,\n  vec4u: u32,\n  'vec4<bool>': bool,\n} as const;\n\ntype VecSchemaBase<TValue> = {\n  readonly type: string;\n  readonly [$repr]: TValue;\n};\n\nfunction makeVecSchema<TValue, S extends number | boolean>(\n  VecImpl: new (...args: S[]) => VecBase<S>,\n): VecSchemaBase<TValue> & ((...args: (S | AnyVecInstance)[]) => TValue) {\n  const { kind: type, length: componentCount } = new VecImpl();\n\n  const construct = createDualImpl(\n    (...args: (S | AnyVecInstance)[]): TValue => {\n      const values = new Array(args.length);\n\n      let j = 0;\n      for (const arg of args) {\n        if (typeof arg === 'number' || typeof arg === 'boolean') {\n          values[j++] = arg;\n        } else {\n          for (let c = 0; c < arg.length; ++c) {\n            values[j++] = arg[c];\n          }\n        }\n      }\n\n      if (values.length <= 1 || values.length === componentCount) {\n        return new VecImpl(...values) as TValue;\n      }\n\n      throw new Error(\n        `'${type}' constructor called with invalid number of arguments.`,\n      );\n    },\n    (...args) =>\n      snip(\n        `${type}(${args.map((v) => v.value).join(', ')})`,\n        vecTypeToConstructor[type],\n      ),\n    type,\n    (...args) =>\n      args.map((arg) => {\n        let argType = arg.dataType;\n        if (isDecorated(argType)) {\n          argType = (argType as Decorated).inner as AnyWgslData;\n        }\n\n        return isVec(argType) ? argType : vecTypeToPrimitive[type];\n      }),\n  );\n\n  return Object.assign(construct, {\n    type,\n    [$repr]: undefined as TValue,\n  });\n}\n","import { createDualImpl } from '../shared/generators.ts';\nimport { $internal } from '../shared/symbols.ts';\nimport type { $repr } from '../shared/symbols.ts';\nimport type { SelfResolvable } from '../types.ts';\nimport { snip } from './dataTypes.ts';\nimport { vec2f, vec3f, vec4f } from './vector.ts';\nimport type {\n  AnyWgslData,\n  m2x2f,\n  m3x3f,\n  m4x4f,\n  mat2x2,\n  Mat2x2f,\n  mat3x3,\n  Mat3x3f,\n  mat4x4,\n  Mat4x4f,\n  matBase,\n  v2f,\n  v3f,\n  v4f,\n  VecKind,\n} from './wgslTypes.ts';\n\n// --------------\n// Implementation\n// --------------\n\ntype vBase = {\n  kind: VecKind;\n  length: number;\n  [n: number]: number;\n};\n\ninterface MatSchemaOptions<TType extends string, ValueType> {\n  type: TType;\n  rows: 2 | 3 | 4;\n  columns: 2 | 3 | 4;\n  makeFromElements(...elements: number[]): ValueType;\n}\n\ntype MatConstructor<\n  ValueType extends matBase<ColumnType>,\n  ColumnType extends vBase,\n> = (...args: (number | ColumnType)[]) => ValueType;\n\nfunction createMatSchema<\n  TType extends string,\n  ValueType extends matBase<ColumnType>,\n  ColumnType extends vBase,\n>(\n  options: MatSchemaOptions<TType, ValueType>,\n): { type: TType; [$repr]: ValueType } & MatConstructor<ValueType, ColumnType> {\n  const MatSchema = {\n    [$internal]: true,\n    type: options.type,\n    identity: identityFunctions[options.columns],\n    translation: options.columns === 4 ? translation4 : undefined,\n    scaling: options.columns === 4 ? scaling4 : undefined,\n    rotationX: options.columns === 4 ? rotationX4 : undefined,\n    rotationY: options.columns === 4 ? rotationY4 : undefined,\n    rotationZ: options.columns === 4 ? rotationZ4 : undefined,\n  } as unknown as AnyWgslData;\n\n  const construct = createDualImpl(\n    // CPU implementation\n    (...args: (number | ColumnType)[]): ValueType => {\n      const elements: number[] = [];\n\n      for (const arg of args) {\n        if (typeof arg === 'number') {\n          elements.push(arg);\n        } else {\n          for (let i = 0; i < arg.length; ++i) {\n            elements.push(arg[i] as number);\n          }\n        }\n      }\n\n      if (\n        elements.length !== 0 &&\n        elements.length !== options.columns * options.rows\n      ) {\n        throw new Error(\n          `'${options.type}' constructor called with invalid number of arguments.`,\n        );\n      }\n\n      for (let i = elements.length; i < options.columns * options.rows; ++i) {\n        elements.push(0);\n      }\n\n      return options.makeFromElements(...elements);\n    },\n    // GPU implementation\n    (...args) =>\n      snip(\n        `${MatSchema.type}(${args.map((v) => v.value).join(', ')})`,\n        MatSchema,\n      ),\n    MatSchema.type,\n  );\n\n  return Object.assign(construct, MatSchema) as unknown as {\n    type: TType;\n    [$repr]: ValueType;\n  } & MatConstructor<ValueType, ColumnType>;\n}\n\nabstract class mat2x2Impl<TColumn extends v2f>\n  implements mat2x2<TColumn>, SelfResolvable {\n  public readonly [$internal] = true;\n  public readonly columns: readonly [TColumn, TColumn];\n  public readonly length = 4;\n  public abstract readonly kind: string;\n  [n: number]: number;\n\n  constructor(...elements: number[]) {\n    this.columns = [\n      this.makeColumn(elements[0] as number, elements[1] as number),\n      this.makeColumn(elements[2] as number, elements[3] as number),\n    ];\n  }\n\n  abstract makeColumn(e0: number, e1: number): TColumn;\n\n  get [0]() {\n    return this.columns[0].x;\n  }\n\n  get [1]() {\n    return this.columns[0].y;\n  }\n\n  get [2]() {\n    return this.columns[1].x;\n  }\n\n  get [3]() {\n    return this.columns[1].y;\n  }\n\n  set [0](value: number) {\n    this.columns[0].x = value;\n  }\n\n  set [1](value: number) {\n    this.columns[0].y = value;\n  }\n\n  set [2](value: number) {\n    this.columns[1].x = value;\n  }\n\n  set [3](value: number) {\n    this.columns[1].y = value;\n  }\n\n  *[Symbol.iterator]() {\n    yield this[0];\n    yield this[1];\n    yield this[2];\n    yield this[3];\n  }\n\n  '~resolve'(): string {\n    return `${this.kind}(${\n      Array.from({ length: this.length })\n        .map((_, i) => this[i])\n        .join(', ')\n    })`;\n  }\n}\nclass mat2x2fImpl extends mat2x2Impl<v2f> implements m2x2f {\n  public readonly kind = 'mat2x2f';\n\n  makeColumn(e0: number, e1: number): v2f {\n    return vec2f(e0, e1);\n  }\n}\n\nabstract class mat3x3Impl<TColumn extends v3f>\n  implements mat3x3<TColumn>, SelfResolvable {\n  public readonly [$internal] = true;\n  public readonly columns: readonly [TColumn, TColumn, TColumn];\n  public readonly length = 12;\n  public abstract readonly kind: string;\n  [n: number]: number;\n\n  constructor(...elements: number[]) {\n    this.columns = [\n      this.makeColumn(\n        elements[0] as number,\n        elements[1] as number,\n        elements[2] as number,\n      ),\n      this.makeColumn(\n        elements[3] as number,\n        elements[4] as number,\n        elements[5] as number,\n      ),\n      this.makeColumn(\n        elements[6] as number,\n        elements[7] as number,\n        elements[8] as number,\n      ),\n    ];\n  }\n\n  abstract makeColumn(x: number, y: number, z: number): TColumn;\n\n  get [0]() {\n    return this.columns[0].x;\n  }\n\n  get [1]() {\n    return this.columns[0].y;\n  }\n\n  get [2]() {\n    return this.columns[0].z;\n  }\n\n  get [3]() {\n    return 0;\n  }\n\n  get [4]() {\n    return this.columns[1].x;\n  }\n\n  get [5]() {\n    return this.columns[1].y;\n  }\n\n  get [6]() {\n    return this.columns[1].z;\n  }\n\n  get [7]() {\n    return 0;\n  }\n\n  get [8]() {\n    return this.columns[2].x;\n  }\n\n  get [9]() {\n    return this.columns[2].y;\n  }\n\n  get [10]() {\n    return this.columns[2].z;\n  }\n\n  get [11]() {\n    return 0;\n  }\n\n  set [0](value: number) {\n    this.columns[0].x = value;\n  }\n\n  set [1](value: number) {\n    this.columns[0].y = value;\n  }\n\n  set [2](value: number) {\n    this.columns[0].z = value;\n  }\n\n  set [3](_: number) {}\n\n  set [4](value: number) {\n    this.columns[1].x = value;\n  }\n\n  set [5](value: number) {\n    this.columns[1].y = value;\n  }\n\n  set [6](value: number) {\n    this.columns[1].z = value;\n  }\n\n  set [7](_: number) {}\n\n  set [8](value: number) {\n    this.columns[2].x = value;\n  }\n\n  set [9](value: number) {\n    this.columns[2].y = value;\n  }\n\n  set [10](value: number) {\n    this.columns[2].z = value;\n  }\n\n  set [11](_: number) {}\n\n  *[Symbol.iterator]() {\n    for (let i = 0; i < 12; i++) {\n      yield this[i] as number;\n    }\n  }\n\n  '~resolve'(): string {\n    return `${this.kind}(${this[0]}, ${this[1]}, ${this[2]}, ${this[4]}, ${\n      this[5]\n    }, ${this[6]}, ${this[8]}, ${this[9]}, ${this[10]})`;\n  }\n}\n\nclass mat3x3fImpl extends mat3x3Impl<v3f> implements m3x3f {\n  public readonly kind = 'mat3x3f';\n  makeColumn(x: number, y: number, z: number): v3f {\n    return vec3f(x, y, z);\n  }\n}\n\nabstract class mat4x4Impl<TColumn extends v4f>\n  implements mat4x4<TColumn>, SelfResolvable {\n  public readonly [$internal] = true;\n  public readonly columns: readonly [TColumn, TColumn, TColumn, TColumn];\n  public abstract readonly kind: string;\n\n  constructor(...elements: number[]) {\n    this.columns = [\n      this.makeColumn(\n        elements[0] as number,\n        elements[1] as number,\n        elements[2] as number,\n        elements[3] as number,\n      ),\n      this.makeColumn(\n        elements[4] as number,\n        elements[5] as number,\n        elements[6] as number,\n        elements[7] as number,\n      ),\n      this.makeColumn(\n        elements[8] as number,\n        elements[9] as number,\n        elements[10] as number,\n        elements[11] as number,\n      ),\n      this.makeColumn(\n        elements[12] as number,\n        elements[13] as number,\n        elements[14] as number,\n        elements[15] as number,\n      ),\n    ];\n  }\n\n  abstract makeColumn(x: number, y: number, z: number, w: number): TColumn;\n\n  public readonly length = 16;\n  [n: number]: number;\n\n  get [0]() {\n    return this.columns[0].x;\n  }\n\n  get [1]() {\n    return this.columns[0].y;\n  }\n\n  get [2]() {\n    return this.columns[0].z;\n  }\n\n  get [3]() {\n    return this.columns[0].w;\n  }\n\n  get [4]() {\n    return this.columns[1].x;\n  }\n\n  get [5]() {\n    return this.columns[1].y;\n  }\n\n  get [6]() {\n    return this.columns[1].z;\n  }\n\n  get [7]() {\n    return this.columns[1].w;\n  }\n\n  get [8]() {\n    return this.columns[2].x;\n  }\n\n  get [9]() {\n    return this.columns[2].y;\n  }\n\n  get [10]() {\n    return this.columns[2].z;\n  }\n\n  get [11]() {\n    return this.columns[2].w;\n  }\n\n  get [12]() {\n    return this.columns[3].x;\n  }\n\n  get [13]() {\n    return this.columns[3].y;\n  }\n\n  get [14]() {\n    return this.columns[3].z;\n  }\n\n  get [15]() {\n    return this.columns[3].w;\n  }\n\n  set [0](value: number) {\n    this.columns[0].x = value;\n  }\n\n  set [1](value: number) {\n    this.columns[0].y = value;\n  }\n\n  set [2](value: number) {\n    this.columns[0].z = value;\n  }\n\n  set [3](value: number) {\n    this.columns[0].w = value;\n  }\n\n  set [4](value: number) {\n    this.columns[1].x = value;\n  }\n\n  set [5](value: number) {\n    this.columns[1].y = value;\n  }\n\n  set [6](value: number) {\n    this.columns[1].z = value;\n  }\n\n  set [7](value: number) {\n    this.columns[1].w = value;\n  }\n\n  set [8](value: number) {\n    this.columns[2].x = value;\n  }\n\n  set [9](value: number) {\n    this.columns[2].y = value;\n  }\n\n  set [10](value: number) {\n    this.columns[2].z = value;\n  }\n\n  set [11](value: number) {\n    this.columns[2].w = value;\n  }\n\n  set [12](value: number) {\n    this.columns[3].x = value;\n  }\n\n  set [13](value: number) {\n    this.columns[3].y = value;\n  }\n\n  set [14](value: number) {\n    this.columns[3].z = value;\n  }\n\n  set [15](value: number) {\n    this.columns[3].w = value;\n  }\n\n  *[Symbol.iterator]() {\n    for (let i = 0; i < 16; i++) {\n      yield this[i] as number;\n    }\n  }\n\n  '~resolve'(): string {\n    return `${this.kind}(${\n      Array.from({ length: this.length })\n        .map((_, i) => this[i])\n        .join(', ')\n    })`;\n  }\n}\n\nclass mat4x4fImpl extends mat4x4Impl<v4f> implements m4x4f {\n  public readonly kind = 'mat4x4f';\n\n  makeColumn(x: number, y: number, z: number, w: number): v4f {\n    return vec4f(x, y, z, w);\n  }\n}\n\n// ----------\n// Matrix ops\n// ----------\n\n/**\n * Returns a 2-by-2 identity matrix.\n * @returns {m2x2f} The result matrix.\n */\nexport const identity2 = createDualImpl(\n  // CPU implementation\n  () => mat2x2f(1, 0, 0, 1),\n  // GPU implementation\n  () => ({\n    value: `mat4x4f(\n      1.0, 0.0,\n      0.0, 1.0\n    )`,\n    dataType: mat2x2f,\n  }),\n  'identity2',\n);\n\n/**\n * Returns a 3-by-3 identity matrix.\n * @returns {m3x3f} The result matrix.\n */\nexport const identity3 = createDualImpl(\n  // CPU implementation\n  () => mat3x3f(1, 0, 0, 0, 1, 0, 0, 0, 1),\n  // GPU implementation\n  () => ({\n    value: `mat4x4f(\n      1.0, 0.0, 0.0,\n      0.0, 1.0, 0.0,\n      0.0, 0.0, 1.0,\n    )`,\n    dataType: mat3x3f,\n  }),\n  'identity3',\n);\n\n/**\n * Returns a 4-by-4 identity matrix.\n * @returns {m4x4f} The result matrix.\n */\nexport const identity4 = createDualImpl(\n  // CPU implementation\n  () => mat4x4f(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),\n  // GPU implementation\n  () => ({\n    value: `mat4x4f(\n      1.0, 0.0, 0.0, 0.0,\n      0.0, 1.0, 0.0, 0.0,\n      0.0, 0.0, 1.0, 0.0,\n      0.0, 0.0, 0.0, 1.0\n    )`,\n    dataType: mat4x4f,\n  }),\n  'identity4',\n);\n\nconst identityFunctions = {\n  2: identity2,\n  3: identity3,\n  4: identity4,\n};\n\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {v3f} vector - The vector by which to translate.\n * @returns {m4x4f} The translation matrix.\n */\nexport const translation4 = createDualImpl(\n  // CPU implementation\n  (vector: v3f) =>\n    // deno-fmt-ignore\n    mat4x4f(\n      1, 0, 0, 0,\n      0, 1, 0, 0,\n      0, 0, 1, 0,\n      vector.x, vector.y, vector.z, 1,\n    ),\n  // GPU implementation\n  (vector) => ({\n    value: `mat4x4f(\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0, \n        ${vector.value}.x, ${vector.value}.y, ${vector.value}.z, 1\n      )`,\n    dataType: mat4x4f,\n  }),\n  'translation4',\n);\n\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by the corresponding entry in the given vector.\n * @param {v3f} vector - A vector of three entries specifying the factor by which to scale in each dimension.\n * @returns {m4x4f} The scaling matrix.\n */\nexport const scaling4 = createDualImpl(\n  // CPU implementation\n  (vector: v3f) =>\n    // deno-fmt-ignore\n    mat4x4f(\n      vector.x, 0, 0, 0,\n      0, vector.y, 0, 0,\n      0, 0, vector.z, 0,\n      0, 0, 0, 1,\n    ),\n  // GPU implementation\n  (vector) => ({\n    value: `mat4x4f(\n        ${vector.value}.x, 0, 0, 0,\n        0, ${vector.value}.y, 0, 0,\n        0, 0, ${vector.value}.z, 0, \n        0, 0, 0, 1\n      )`,\n    dataType: mat4x4f,\n  }),\n  'scaling4',\n);\n\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angle - The angle by which to rotate (in radians).\n * @returns {m4x4f} The rotation matrix.\n */\nexport const rotationX4 = createDualImpl(\n  // CPU implementation\n  (a: number) =>\n    // deno-fmt-ignore\n    mat4x4f(\n      1, 0, 0, 0,\n      0, Math.cos(a), Math.sin(a), 0,\n      0, -Math.sin(a), Math.cos(a), 0,\n      0, 0, 0, 1,\n    ),\n  // GPU implementation\n  (a) =>\n    snip(\n      `mat4x4f(\n        1, 0, 0, 0,\n        0, cos(${a.value}), sin(${a.value}), 0,\n        0, -sin(${a.value}), cos(${a.value}), 0,\n        0, 0, 0, 1\n      )`,\n      mat4x4f,\n    ),\n  'rotationX4',\n);\n\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angle - The angle by which to rotate (in radians).\n * @returns {m4x4f} The rotation matrix.\n */\nexport const rotationY4 = createDualImpl(\n  // CPU implementation\n  (a: number) =>\n    // deno-fmt-ignore\n    mat4x4f(\n      Math.cos(a), 0, -Math.sin(a), 0,\n      0, 1, 0, 0,\n      Math.sin(a), 0, Math.cos(a), 0,\n      0, 0, 0, 1,\n    ),\n  // GPU implementation\n  (a) =>\n    snip(\n      `mat4x4f(\n        cos(${a.value}), 0, -sin(${a.value}), 0,\n        0, 1, 0, 0,\n        sin(${a.value}), 0, cos(${a.value}), 0,\n        0, 0, 0, 1\n      )`,\n      mat4x4f,\n    ),\n  'rotationY4',\n);\n\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angle - The angle by which to rotate (in radians).\n * @returns {m4x4f} The rotation matrix.\n */\nexport const rotationZ4 = createDualImpl(\n  // CPU implementation\n  (a: number) =>\n    // deno-fmt-ignore\n    mat4x4f(\n      Math.cos(a), Math.sin(a), 0, 0,\n      -Math.sin(a), Math.cos(a), 0, 0,\n      0, 0, 1, 0,\n      0, 0, 0, 1,\n    ),\n  // GPU implementation\n  (a) =>\n    snip(\n      `mat4x4f(\n        cos(${a.value}), sin(${a.value}), 0, 0,\n        -sin(${a.value}), cos(${a.value}), 0, 0,\n        0, 0, 1, 0,\n        0, 0, 0, 1\n      )`,\n      mat4x4f,\n    ),\n  'rotationZ4',\n);\n\n// ----------\n// Public API\n// ----------\n\n/**\n * Schema representing mat2x2f - a matrix with 2 rows and 2 columns, with elements of type f32.\n * Also a constructor function for this matrix type.\n *\n * @example\n * const zero2x2 = mat2x2f(); // filled with zeros\n *\n * @example\n * const mat = mat2x2f(0, 1, 2, 3);\n * mat.columns[0] // vec2f(0, 1)\n * mat.columns[1] // vec2f(2, 3)\n *\n * @example\n * const mat = mat2x2f(\n *  vec2f(0, 1), // column 0\n *  vec2f(1, 2), // column 1\n * );\n *\n * @example\n * const buffer = root.createBuffer(d.mat2x2f, d.mat2x2f(0, 1, 2, 3)); // buffer holding a d.mat2x2f value, with an initial value of ((0, 1), (2, 3))\n */\nexport const mat2x2f = createMatSchema<'mat2x2f', m2x2f, v2f>({\n  type: 'mat2x2f',\n  rows: 2,\n  columns: 2,\n  makeFromElements: (...elements: number[]) => new mat2x2fImpl(...elements),\n}) as Mat2x2f;\n\n/**\n * Schema representing mat3x3f - a matrix with 3 rows and 3 columns, with elements of type f32.\n * Also a constructor function for this matrix type.\n *\n * @example\n * const zero3x3 = mat3x3f(); // filled with zeros\n *\n * @example\n * const mat = mat3x3f(0, 1, 2, 3, 4, 5, 6, 7, 8);\n * mat.columns[0] // vec3f(0, 1, 2)\n * mat.columns[1] // vec3f(3, 4, 5)\n * mat.columns[2] // vec3f(6, 7, 8)\n *\n * @example\n * const mat = mat3x3f(\n *  vec3f(0, 1, 2), // column 0\n *  vec3f(2, 3, 4), // column 1\n *  vec3f(5, 6, 7), // column 2\n * );\n *\n * @example\n * const buffer = root.createBuffer(d.mat3x3f, d.mat3x3f()); // buffer holding a d.mat3x3f value, with an initial value of mat3x3f filled with zeros\n */\nexport const mat3x3f = createMatSchema<'mat3x3f', m3x3f, v3f>({\n  type: 'mat3x3f',\n  rows: 3,\n  columns: 3,\n  makeFromElements: (...elements: number[]) => new mat3x3fImpl(...elements),\n}) as Mat3x3f;\n\n/**\n * Schema representing mat4x4f - a matrix with 4 rows and 4 columns, with elements of type f32.\n * Also a constructor function for this matrix type.\n *\n * @example\n * const zero4x4 = mat4x4f(); // filled with zeros\n *\n * @example\n * const mat = mat4x4f(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);\n * mat.columns[0] // vec4f(0, 1, 2, 3)\n * mat.columns[1] // vec4f(4, 5, 6, 7)\n * mat.columns[2] // vec4f(8, 9, 10, 11)\n * mat.columns[3] // vec4f(12, 13, 14, 15)\n *\n * @example\n * const mat = mat4x4f(\n *  vec4f(0, 1, 2, 3),     // column 0\n *  vec4f(4, 5, 6, 7),     // column 1\n *  vec4f(8, 9, 10, 11),   // column 2\n *  vec4f(12, 13, 14, 15), // column 3\n * );\n *\n * @example\n * const buffer = root.createBuffer(d.mat4x4f, d.mat4x4f()); // buffer holding a d.mat4x4f value, with an initial value of mat4x4f filled with zeros\n */\nexport const mat4x4f = createMatSchema<'mat4x4f', m4x4f, v4f>({\n  type: 'mat4x4f',\n  rows: 4,\n  columns: 4,\n  makeFromElements: (...elements: number[]) => new mat4x4fImpl(...elements),\n}) as Mat4x4f;\n\nexport function matToArray(mat: m2x2f | m3x3f | m4x4f): number[] {\n  if (mat.kind === 'mat3x3f') {\n    return [\n      mat[0],\n      mat[1],\n      mat[2],\n      mat[4],\n      mat[5],\n      mat[6],\n      mat[8],\n      mat[9],\n      mat[10],\n    ] as number[];\n  }\n\n  return Array.from({ length: mat.length }).map((_, idx) => mat[idx] as number);\n}\n","import { $internal } from '../shared/symbols.ts';\nimport type { AnyData } from './dataTypes.ts';\nimport type { Ptr } from './wgslTypes.ts';\n\nexport function ptrFn<T extends AnyData>(\n  inner: T,\n): Ptr<'function', T, 'read-write'> {\n  return {\n    [$internal]: true,\n    type: 'ptr',\n    inner,\n    addressSpace: 'function',\n    access: 'read-write',\n  } as Ptr<'function', T, 'read-write'>;\n}\n\nexport function ptrPrivate<T extends AnyData>(\n  inner: T,\n): Ptr<'private', T, 'read-write'> {\n  return {\n    [$internal]: true,\n    type: 'ptr',\n    inner,\n    addressSpace: 'private',\n    access: 'read-write',\n  } as Ptr<'private', T, 'read-write'>;\n}\n\nexport function ptrWorkgroup<T extends AnyData>(\n  inner: T,\n): Ptr<'workgroup', T, 'read-write'> {\n  return {\n    [$internal]: true,\n    type: 'ptr',\n    inner,\n    addressSpace: 'workgroup',\n    access: 'read-write',\n  } as Ptr<'workgroup', T, 'read-write'>;\n}\n\nexport function ptrStorage<\n  T extends AnyData,\n  TAccess extends 'read' | 'read-write' = 'read',\n>(inner: T, access: TAccess = 'read' as TAccess): Ptr<'storage', T, TAccess> {\n  return {\n    [$internal]: true,\n    type: 'ptr',\n    inner,\n    addressSpace: 'storage',\n    access,\n  } as Ptr<'storage', T, TAccess>;\n}\n\nexport function ptrUniform<T extends AnyData>(\n  inner: T,\n): Ptr<'uniform', T, 'read'> {\n  return {\n    [$internal]: true,\n    type: 'ptr',\n    inner,\n    addressSpace: 'uniform',\n    access: 'read',\n  } as Ptr<'uniform', T, 'read'>;\n}\n\nexport function ptrHandle<T extends AnyData>(\n  inner: T,\n): Ptr<'handle', T, 'read'> {\n  return {\n    [$internal]: true,\n    type: 'ptr',\n    inner,\n    addressSpace: 'handle',\n    access: 'read',\n  } as Ptr<'handle', T, 'read'>;\n}\n"],"mappings":"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","names":["version","$internal","version","$wgslDataType","$gpuValueOf","$getNameForward","$providing","$repr","$gpuRepr","$reprPartial","$memIdent","DEV","TEST","exp","label","isNamable","$internal","getName","globalWithMeta","PERF","DEV","TEST","name","data","records","entries","isForwarded","value","$getNameForward","definition","getMetaData","setName","setMetaData","metaData","map","prefix","invariant","condition","message","DEV","provided","value","ResolutionError","_ResolutionError","cause","trace","entries","ancestor","newTrace","MissingSlotValueError","_MissingSlotValueError","slot","NotUniformError","_NotUniformError","getName","MissingLinksError","_MissingLinksError","fnLabel","externalNames","MissingBindGroupsError","_MissingBindGroupsError","layouts","layout","MissingVertexBuffersError","_MissingVertexBuffersError","hasInternalDataType","value","$wgslDataType","Void","$internal","wgslTypeLiterals","isVecInstance","v","isVec2","isVec3","isVec4","isVec","isMatInstance","isMat2x2f","isMat3x3f","isMat4x4f","isMat","isFloat32VecInstance","element","isWgslData","isWgslArray","schema","isWgslStruct","isPtr","isAtomic","isAlignAttrib","isSizeAttrib","isLocationAttrib","isInterpolateAttrib","isBuiltinAttrib","isDecorated","isVoid","value","$internal","vertexFormats","kindToDefaultFormatMap","looseTypeLiterals","vertexFormats","isLooseData","data","$internal","isDisarray","schema","isUnstruct","isLooseDecorated","value","getCustomAlignment","isAlignAttrib","getCustomSize","isSizeAttrib","getCustomLocation","isLocationAttrib","isData","isWgslData","UnknownData","SnippetImpl","dataType","snip","isSnippet","resolutionCtx","CPUMode","GPUMode","RuntimeMode","resolutionModeStack","provideCtx","ctx","callback","invariant","getResolutionCtx","pushMode","mode","popMode","expected","inGPUMode","naturalsExcept","excluded","next","createDualImpl","jsImpl","gpuImpl","name","argTypes","impl","args","inGPUMode","$internal","setName","abstractInt","$internal","abstractFloat","boolCast","createDualImpl","v","snip","bool","u32Cast","u32","i32Cast","i32","u16","f32Cast","f32","buf32","f32arr","u32arr","toHalfBits","x","bits","sign","exp","mant","fromHalfBits","h","roundToF16","f16Cast","f16","VecBase","$internal","Vec2","x","y","value","Vec3","z","Vec4","w","Vec2fImpl","_Vec2fImpl","f32","Vec3fImpl","Vec4fImpl","Vec2hImpl","_Vec2hImpl","f16","Vec3hImpl","Vec4hImpl","Vec2iImpl","_Vec2iImpl","i32","Vec3iImpl","Vec4iImpl","Vec2uImpl","_Vec2uImpl","u32","Vec3uImpl","Vec4uImpl","Vec2bImpl","_Vec2bImpl","bool","Vec3bImpl","Vec4bImpl","_Vec3fImpl","_Vec3hImpl","_Vec3iImpl","_Vec3uImpl","_Vec3bImpl","_Vec4fImpl","_Vec4hImpl","_Vec4iImpl","_Vec4uImpl","_Vec4bImpl","vec2f","makeVecSchema","Vec2fImpl","vec2h","Vec2hImpl","vec2i","Vec2iImpl","vec2u","Vec2uImpl","vec2b","Vec2bImpl","vec3f","Vec3fImpl","vec3h","Vec3hImpl","vec3i","Vec3iImpl","vec3u","Vec3uImpl","vec3b","Vec3bImpl","vec4f","Vec4fImpl","vec4h","Vec4hImpl","vec4i","Vec4iImpl","vec4u","Vec4uImpl","vec4b","Vec4bImpl","vecTypeToConstructor","vecTypeToPrimitive","f32","f16","i32","u32","bool","VecImpl","type","componentCount","construct","createDualImpl","args","values","j","arg","c","snip","v","argType","isDecorated","isVec","$repr","createMatSchema","options","MatSchema","$internal","identityFunctions","translation4","scaling4","rotationX4","rotationY4","rotationZ4","construct","createDualImpl","args","elements","arg","i","snip","v","mat2x2Impl","value","_","mat2x2fImpl","e0","e1","vec2f","mat3x3Impl","mat3x3fImpl","x","y","z","vec3f","mat4x4Impl","mat4x4fImpl","w","vec4f","identity2","mat2x2f","identity3","mat3x3f","identity4","mat4x4f","vector","a","matToArray","mat","idx","ptrFn","inner","$internal","ptrPrivate","ptrWorkgroup","ptrStorage","access","ptrUniform","ptrHandle"]}